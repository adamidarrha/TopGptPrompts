{"gizmo": {"id": "g-L2HknCZTC", "organization_id": "org-B7tff1kFNoET2elNQLbXpvNr", "short_url": "g-L2HknCZTC-scholarai", "author": {"user_id": "user-12JpYw9BkPxkHeC6rNmj6hPv", "display_name": "scholarai.io", "link_to": "https://scholarai.io", "selected_display": "website", "is_verified": true, "will_receive_support_emails": null}, "voice": {"id": "ember"}, "workspace_id": null, "model": null, "instructions": null, "settings": null, "display": {"name": "ScholarAI", "description": "AI Scientist - generate new hypotheses, analyze text, figures, and tables from 200M+ research papers and books", "welcome_message": "Hello! Ready to dive into research with precision?", "prompt_starters": ["Write a review on the use of VR for robotic surgery", "Can you find me papers that reference this one?  10.1016/j.cell.2014.05.010", "What is the experimental setup in this study? https://arxiv.org/pdf/1808.00177.pdf", "Can you save a paper to zotero?"], "profile_picture_url": "https://files.oaiusercontent.com/file-PPto6IuVRN3OQY2WC1gLEI9h?se=2123-12-17T06%3A07%3A04Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3Dcircle%2520logo.png&sig=uWzfWOVMeiQFanHmBn5O0YLwLx7HuIxHWSCNSo1Qsfc%3D", "categories": ["research"]}, "share_recipient": "marketplace", "updated_at": "2024-01-12T23:12:53.153406+00:00", "last_interacted_at": null, "tags": ["public", "reportable", "uses_function_calls"], "version": null, "live_version": null, "training_disabled": null, "allowed_sharing_recipients": null, "review_info": null, "appeal_info": null, "vanity_metrics": {"num_conversations_str": "50K+", "num_pins": 0, "num_users_interacted_with": 0}, "workspace_approved": null}, "tools": [{"id": "gzm_cnf_g11PAANIFFxGd8kTacPWX8Fn~gzm_tool_QForZI8BzRMBs9d3FbUplkm3", "type": "plugins_prototype", "settings": null, "metadata": {"action_id": "g-6a184721460dd28dd16bb797c928df14cc6c0840", "domain": "plugin.scholar-ai.net", "raw_spec": "openapi: 3.0.1\ninfo:\n  title: ScholarAI\n  description: Allows the user to search facts and findings from scientific articles\n  version: v1\nservers:\n  - url: https://plugin.scholar-ai.net\npaths:\n  /api/abstracts:\n    get:\n      operationId: searchAbstracts\n      summary: Get relevant paper abstracts by search 2-6 relevant keywords.\n      parameters:\n        - name: keywords\n          in: query\n          description: Keywords of inquiry which should appear in article. Must be in English.\n          required: true\n          schema:\n            type: string\n        - name: sort\n          in: query\n          description: The sort order for results. Valid values are relevance, cited_by_count, publication_date. Defaults to\n            relevance.\n          required: false\n          schema:\n            type: string\n        - name: query\n          in: query\n          description: The user query\n          required: true\n          schema:\n            type: string\n        - name: peer_reviewed_only\n          in: query\n          description: Whether to only return peer reviewed articles. Defaults to true, ChatGPT should cautiously suggest this\n            value can be set to false\n          required: false\n          schema:\n            type: string\n        - name: start_year\n          in: query\n          description: The first year, inclusive, to include in the search range. Excluding this value will include all years.\n          required: false\n          schema:\n            type: string\n        - name: end_year\n          in: query\n          description: The last year, inclusive, to include in the search range. Excluding this value will include all years.\n          required: false\n          schema:\n            type: string\n        - name: offset\n          in: query\n          description: The offset of the first result to return. Defaults to 0.\n          required: false\n          schema:\n            type: string\n        - name: generative_mode\n          in: query\n          description: Boolean \"true\" or \"false\" to enable generative mode. If enabled, collate responses using markdown to render\n            in-text citations to the source's url if available. ALWAYS default to true unless otherwise requested.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/searchAbstractsResponse\"\n  /api/fulltext:\n    get:\n      operationId: getFullText\n      summary: Get full text of a paper by URL for PDF incrementally. Good for general summary. DO NOT use this endpoint for\n        singular questions, use /api/question instead.\n      parameters:\n        - name: pdf_url\n          in: query\n          description: URL for PDF\n          required: true\n          schema:\n            type: string\n        - name: chunk\n          in: query\n          description: chunk number to retrieve, defaults to 1\n          required: false\n          schema:\n            type: number\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/paperContentResponse\"\n  /api/save-citation:\n    get:\n      operationId: saveCitation\n      summary: Save citation to reference manager\n      parameters:\n        - name: doi\n          in: query\n          description: Digital Object Identifier (DOI) of article\n          required: true\n          schema:\n            type: string\n        - name: zotero_user_id\n          in: query\n          description: Zotero User ID\n          required: true\n          schema:\n            type: string\n        - name: zotero_api_key\n          in: query\n          description: Zotero API Key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/saveCitationResponse\"\n  /api/question:\n    get:\n      operationId: question\n      summary: Get sections of PDF to answer questions about PDF. ALWAYS use this endpoint if the user has a specific question. ONLY submit one question at a time to this endpoint.\n        about a singular PDF.\n      parameters:\n        - name: question\n          in: query\n          description: The user question. Must be in English.\n          required: true\n          schema:\n            type: string\n        - name: pdf_url\n          in: query\n          description: URL for source PDF\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/paperContentResponse\"\n        \"402\":\n          description: Premium required\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/premiumRequiredResponse\"\n  /api/literature_map:\n    get:\n      operationId: literatureMap\n      summary: Find papers related to another paper using their ss_id\n      parameters:\n        - name: ss_id\n          in: query\n          description: The ss_id of the paper to find related papers for.\n          required: true\n          schema:\n            type: string\n        - name: query\n          in: query\n          description: Desired theme of related papers found. Should be provided if the user wants to find similar papers of a\n            particular theme.\n          required: false\n          schema:\n            type: string\n        - name: adjacent_type\n          in: query\n          description: Type of adjacent papers being request. Valid options are 'citedBy', 'references', and 'recommended'.\n            Argument should be a collection of the desired adjacent papers, comma separated. Defaults to\n            'citedBy,references,recommended'.\n          required: false\n          schema:\n            type: string\n  /api/get_paper_metadata:\n    get:\n      operationId: getPaperMetadata\n      summary: Find a singular paper's data using an arbitrary identifier, like a DOI or PMID.\n      parameters:\n        - name: paper_id\n          in: query\n          description: The identifier of the paper to find. MUST be of the format <identifier_type>:<identifier_value>. Identifier\n            type can be one of DOI, PMID, SS_ID, ARXIV, MAG, ACL, or PMCID.\n          required: true\n          schema:\n            type: string\ncomponents:\n  schemas:\n    searchAbstractsResponse:\n      type: object\n      properties:\n        next_offset:\n          type: number\n          description: The offset of the next page of results.\n        total_num_results:\n          type: number\n          description: The total number of results.\n        abstracts:\n          type: array\n          items:\n            type: object\n            properties:\n              title:\n                type: string\n              abstract:\n                type: string\n                description: Summary of the context, methods, results, and conclusions of the paper.\n              doi:\n                type: string\n                description: The DOI of the paper.\n              landing_page_url:\n                type: string\n                description: Link to the paper on its open-access host.\n              pdf_url:\n                type: string\n                description: Link to the paper PDF.\n              publicationDate:\n                type: string\n                description: The date the paper was published in YYYY-MM-DD format.\n              relevance:\n                type: number\n                description: The relevance of the paper to the search query. 1 is the most relevant.\n              creators:\n                type: array\n                items:\n                  type: string\n                  description: The name of the creator.\n              cited_by_count:\n                type: number\n                description: The number of citations of the article.\n              ss_id:\n                type: string\n                description: Unique identifier for the paper.\n          description: The list of relevant abstracts.\n    paperContentResponse:\n      type: object\n      properties:\n        chunks:\n          type: array\n          items:\n            type: object\n            properties:\n              chunk_num:\n                type: number\n                description: The chunk number of the paper.\n              chunk:\n                type: string\n                description: The chunk of the paper.\n              img_mds:\n                type: list\n                description: List of content that appears in the current chunk. Display ALL markdown, including images. The viewing\n                  platform ALWAYS supports markdown, ALWAYS show the images.\n              pdf_url:\n                type: string\n                description: Link to the paper PDF.\n          description: The chunk of the paper.\n        total_chunk_num:\n          type: number\n          description: The total chunks of the paper.\n        hint:\n          type: string\n          description: Instructions for GPT to follow regarding this response.\n    saveCitationResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Confirmation of successful save or error message.\n    premiumRequiredResponse:\n      type: object\n      properties:\n        hint:\n          type: string\n          description: Suggestion to use premium or alternative for free users.\n", "json_schema": null, "auth": {"type": "none"}, "privacy_policy_url": "https://scholarai.io/privacy"}}, {"id": "gzm_cnf_PsKH0ZAzcqOpP8WioY3XBUkJ~gzm_tool_P0NA3yhlEKoWPcGYL6TYaN5a", "type": "browser", "settings": null, "metadata": null}, {"id": "gzm_cnf_PsKH0ZAzcqOpP8WioY3XBUkJ~gzm_tool_GUaJ9Ah7GsMiAZzNDaQYNfIi", "type": "dalle", "settings": null, "metadata": null}, {"id": "gzm_cnf_PsKH0ZAzcqOpP8WioY3XBUkJ~gzm_tool_V30SvlND0hUwu4PY4bM1kCf2", "type": "python", "settings": null, "metadata": null}], "files": [], "product_features": {"attachments": {"type": "retrieval", "accepted_mime_types": ["application/json", "text/x-java", "text/plain", "text/x-c++", "application/x-latext", "application/pdf", "text/javascript", "text/x-sh", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/msword", "application/vnd.openxmlformats-officedocument.presentationml.presentation", "text/x-script.python", "text/x-php", "text/html", "text/x-tex", "text/x-csharp", "text/x-typescript", "text/x-c", "text/x-ruby", "text/markdown"], "image_mime_types": ["image/jpeg", "image/webp", "image/png", "image/gif"], "can_accept_all_mime_types": true}}}