{"gizmo": {"id": "g-Gt6Z8pqWF", "organization_id": "org-SYqj9TQFQ88iTqHixWNBlu2l", "short_url": "g-Gt6Z8pqWF-doc-maker", "author": {"user_id": "user-t0D9RBPCtvLGuZUnv2qKGobB", "display_name": "aidocmaker.com", "link_to": "https://aidocmaker.com", "selected_display": "website", "is_verified": true, "will_receive_support_emails": false}, "voice": {"id": "ember"}, "workspace_id": null, "model": null, "instructions": null, "settings": null, "display": {"name": "Doc Maker", "description": "Prompt to create documents, such as resumes, reports, presentations, data sheets. Export to PDF, DOCX, PPTX, XLSX, CSV.", "welcome_message": "Hey there! Ready to work on your document?", "prompt_starters": ["What can this GPT do?", "Create a proposal for using AI in digital marketing", "Create a presentation on the history of AI", "Create a guide on speeding up a PC"], "profile_picture_url": "https://files.oaiusercontent.com/file-13dEVJG38EwNmA3nAZUykEa0?se=2123-10-15T15%3A43%3A23Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dlogo.png&sig=qSmhlnQuzuTPcWSBeyBDOgSbwDMcQXh48GvPiDNM4UY%3D", "categories": ["productivity"]}, "share_recipient": "marketplace", "updated_at": "2024-01-13T06:30:42.243168+00:00", "last_interacted_at": null, "tags": ["public", "reportable", "uses_function_calls"], "version": null, "live_version": null, "training_disabled": null, "allowed_sharing_recipients": null, "review_info": null, "appeal_info": null, "vanity_metrics": {"num_conversations_str": "10K+", "num_pins": 0, "num_users_interacted_with": 0}, "workspace_approved": null}, "tools": [{"id": "gzm_cnf_CkMHSl0z5lQu0dL2uwlwkddH~gzm_tool_UBbWA1jYpsxCe80b3EJ40DKZ", "type": "plugins_prototype", "settings": null, "metadata": {"action_id": "g-6c2e450a29e5d9af5db43a0a833a5b960f2adb72", "domain": "gpt.docs.aidocmaker.com", "raw_spec": "components:\n  schemas:\n    ChatGptDocumentSection:\n      properties:\n        body:\n          description: 150-300 word document section containing content in HTML format.\n          title: Document Section Body\n          type: string\n        did:\n          description: Unique document ID.\n          title: Document ID\n          type: string\n        title:\n          description: Heading title used for this document section.\n          title: Title of Document Section\n          type: string\n      required:\n        - did\n        - title\n        - body\n      title: ChatGptDocumentSection\n      type: object\n    CreateAudioFileRequest:\n      properties:\n        transcript:\n          description: Text that will be used to generate the audio file\n          title: Transcript\n          type: string\n      required:\n        - transcript\n      title: CreateAudioFileRequest\n      type: object\n    CreateMultiPageDocumentRequest:\n      properties:\n        prompt:\n          description: Prompt context for creating doc - will be shown later in document UI.\n          title: Prompt\n          type: string\n        title:\n          description: Title of the document.\n          title: Document Title\n          type: string\n      required:\n        - title\n        - prompt\n      title: CreateMultiPageDocumentRequest\n      type: object\n    CreateSpreadsheetRequest:\n      properties:\n        prompt:\n          description: Prompt context for creating spreadsheet - will be shown later in document UI.\n          title: Prompt\n          type: string\n        sheets:\n          description: List of sheets inside spreadsheet. Each sheet consists of a header row, followed by rows of data\n          items:\n            $ref: \"#/components/schemas/DocmakerSheet\"\n          title: Sheets\n          type: array\n        title:\n          default: Untitled\n          description: \"Mandatory: the title of the spreadsheet. Must be included.\"\n          title: Title\n          type: string\n      required:\n        - prompt\n        - sheets\n      title: CreateSpreadsheetRequest\n      type: object\n    DocmakerSheet:\n      properties:\n        content:\n          default: \"\"\n          description: Sheet data content in CSV format. Enclose all fields in double quotes.\n          title: Content\n          type: string\n      title: DocmakerSheet\n      type: object\n    HTTPValidationError:\n      properties:\n        detail:\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          title: Detail\n          type: array\n      title: HTTPValidationError\n      type: object\n    Markdown2DocumentRequest:\n      properties:\n        formatted_markdown:\n          description: Formatted Markdown content.\n          title: Formatted Markdown\n          type: string\n        prompt:\n          description: Prompt used for creating doc.\n          title: Prompt\n          type: string\n        title:\n          default: Untitled\n          description: \"Mandatory: title of the document.\"\n          title: Title\n          type: string\n      required:\n        - prompt\n        - formatted_markdown\n      title: Markdown2DocumentRequest\n      type: object\n    Markdown2ResumeRequest:\n      properties:\n        prompt:\n          description: Prompt used to describe the doc creation request. IT IS NOT USED TO CREATE DOC, only to display in UI for\n            user to view later.\n          title: Prompt\n          type: string\n        resume_content:\n          default: \"\"\n          description: Resume content in Markdown format. Do NOT include any of the above information (name, email, phone,\n            location, website url) here; they should be directly placed via their respective fields. When using\n            acronyms, ensure to write out the full term as well. For example, instead of writing 'SEO', write 'Search\n            Engine Optimization (SEO)'.\n          title: Resume Content\n          type: string\n        resume_field_email:\n          description: \"Optional: Personal email to be placed directly into the resume/cv. If supplied, do NOT include it in the\n            formatted_markdown field.\"\n          title: Resume Field Email\n          type: string\n        resume_field_location:\n          description: \"Optional: Location to be placed directly into the resume/cv. If supplied, do NOT include it in the\n            formatted_markdown field.\"\n          title: Resume Field Location\n          type: string\n        resume_field_name:\n          default: \"\"\n          description: \"Mandatory: Personal name to be placed directly into the resume/cv. Do NOT include it in the\n            formatted_markdown field.\"\n          title: Resume Field Name\n          type: string\n        resume_field_phone:\n          description: \"Optional: Phone number to be placed directly into the resume/cv. If supplied, do NOT include it in the\n            formatted_markdown field.\"\n          title: Resume Field Phone\n          type: string\n        resume_field_website_url:\n          description: \"Optional: Website URL to be placed directly into the resume/cv. If supplied, do NOT include it in the\n            formatted_markdown field.\"\n          title: Resume Field Website Url\n          type: string\n        title:\n          default: Untitled\n          description: \"Mandatory: Title of the document.\"\n          title: Title\n          type: string\n      required:\n        - prompt\n      title: Markdown2ResumeRequest\n      type: object\n    PptxRequest:\n      properties:\n        intro_slide:\n          allOf:\n            - $ref: \"#/components/schemas/SimpleIntroSlide\"\n          description: The first slide in the deck - IT SHOULD ONLY HAVE A TITLE AND NO CONTENT\n          title: Intro Slide\n        prompt:\n          description: Prompt context for creating doc - will be shown later in document UI.\n          title: Prompt\n          type: string\n        slides:\n          description: \"List of slides following the intro slide. Each slide should only have 2 string params: `title` and\n            `content`. Content is a single string (DO NOT INPUT AS A LIST).\"\n          items:\n            $ref: \"#/components/schemas/SimpleSlideContent\"\n          title: Slides\n          type: array\n      required:\n        - prompt\n        - intro_slide\n        - slides\n      title: PptxRequest\n      type: object\n    ReadDocV2Request:\n      properties:\n        f1_http_url:\n          description: User will pass a HTTPS or HTTP url to a file so that the file contents can be read.\n          title: F1 Http Url\n          type: string\n        f2_query:\n          default: \"\"\n          description: User will pass a query string to fetch relevant sections from the contents. It will be used for\n            sentence-level similarity search on the document based on embeddings.\n          title: F2 Query\n          type: string\n        f3_selected_pages:\n          default: []\n          description: Filter document on these page numbers. Use empty list to get all pages.\n          items:\n            type: integer\n          title: F3 Selected Pages\n          type: array\n      required:\n        - f1_http_url\n      title: ReadDocV2Request\n      type: object\n    SimpleIntroSlide:\n      properties:\n        title:\n          description: The title of the slide. Must be included.\n          title: Title\n          type: string\n      required:\n        - title\n      title: SimpleIntroSlide\n      type: object\n    SimpleSlideContent:\n      properties:\n        content:\n          description: The string content for this slide. DO NOT INPUT AS A LIST. Must contain ALL the text that will go on the\n            slide. Use '\\n' characters for formatting.\n          title: Content\n          type: string\n        title:\n          description: The title of the slide. Must be included.\n          title: Title\n          type: string\n      required:\n        - title\n        - content\n      title: SimpleSlideContent\n      type: object\n    ValidationError:\n      properties:\n        loc:\n          items:\n            anyOf:\n              - type: string\n              - type: integer\n          title: Location\n          type: array\n        msg:\n          title: Message\n          type: string\n        type:\n          title: Error Type\n          type: string\n      required:\n        - loc\n        - msg\n        - type\n      title: ValidationError\n      type: object\ninfo:\n  description: A GPT that allows the user to create a document exportable as a PDF or DOCX file.\n  title: Doc Maker GPT\n  version: v1\nopenapi: 3.1.0\npaths:\n  /create_audio:\n    post:\n      operationId: create_audio\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateAudioFileRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Create an audio file that can be downloaded via URL\n  /create_pptx_directly_with_content:\n    post:\n      description: Create a new presentation by directly providing the content.\n      operationId: create_pptx_directly_with_content\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PptxRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Create a new presentation directly with content\n  /create_resume:\n    post:\n      operationId: create_resume\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Markdown2ResumeRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Create Resume Endpoint\n  /create_spreadsheet:\n    post:\n      description: Create a new spreadsheet given data. Enclose all fields in double quotes.\n      operationId: create_spreadsheet\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateSpreadsheetRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Create a new spreadsheet\n  /multipage_add_subsection_to_document:\n    post:\n      description: Append a new document subsection for a multi-page document, with title and body. Default at least 150-300 words.\n      operationId: multipage_add_subsection_to_document\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChatGptDocumentSection\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Append a new document subsection for a multi-page document.\n  /multipage_create_empty_document:\n    post:\n      description: Create a new empty multi-page document. Always follow up with function call\n        `multipage_add_subsection_to_document`.\n      operationId: multipage_create_empty_document\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateMultiPageDocumentRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Create a new empty multi-page document\n  /read_url:\n    post:\n      description: \"Allows for reading the contents of an URL link, including PDF/DOC/DOCX/PPT/CSV/XLS/XLSX/HTML content,\n        Google Drive, Dropbox, OneDrive, aidocmaker.com docs. Always wrap image URLs from the response field\n        `z1_image_urls` in Markdown, where each image has a ## DESCRIPTION.\"\n      operationId: read_url\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ReadDocV2Request\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Read the contents of an URL link\n  /simple_create_document:\n    post:\n      description: Create a simple document, with formatted Markdown content in the field `formatted_markdown`. Include prompt\n        text used in the field `prompt`.\n      operationId: simple_create_document\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Markdown2DocumentRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Create a simple document\nservers:\n  - url: https://gpt.docs.aidocmaker.com\n", "json_schema": null, "auth": {"type": "none"}, "privacy_policy_url": "https://www.aidocmaker.com/privacy-policy"}}, {"id": "gzm_cnf_nfIHTbFyDlEFxI9Kst6g7kYP~gzm_tool_8Lt60vGg3dgo8j1y2Th1UECh", "type": "browser", "settings": null, "metadata": null}], "files": [], "product_features": {"attachments": {"type": "retrieval", "accepted_mime_types": ["text/x-script.python", "text/javascript", "text/x-tex", "text/x-php", "text/x-c", "text/html", "text/markdown", "application/json", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/pdf", "application/vnd.openxmlformats-officedocument.presentationml.presentation", "text/x-sh", "text/x-c++", "text/x-csharp", "text/x-typescript", "application/x-latext", "text/plain", "application/msword", "text/x-java", "text/x-ruby"], "image_mime_types": ["image/png", "image/webp", "image/gif", "image/jpeg"], "can_accept_all_mime_types": true}}}