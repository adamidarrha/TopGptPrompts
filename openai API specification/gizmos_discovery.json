{
  "cuts": [
    {
      "info": {
        "id": "featured_store",
        "title": "Featured",
        "description": "Curated top picks from this week",
        "display_type": "featured",
        "display_group": "Top Picks",
        "locale": null
      },
      "list": {
        "items": [
          {
            "resource": {
              "gizmo": {
                "id": "g-KpF6lTka3",
                "organization_id": "org-yS84io1xyQry388ZRkCiKMsE",
                "short_url": "g-KpF6lTka3-alltrails",
                "author": {
                  "user_id": "user-n5OFCXwmMX59FvXYfo1XB63e",
                  "display_name": "alltrails.com",
                  "link_to": "https://alltrails.com",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "AllTrails",
                  "description": "Find trails that fit your nature for your next hike, ride, or run.",
                  "welcome_message": "",
                  "prompt_starters": [
                    "Which trails near me are dog-friendly?",
                    "Tell me about Angel's Landing trail.",
                    "Show me easy hiking trails near New York City.",
                    "What are the top 3 trails in Olympic National Park?"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-wJ9EBGnkL70yfZwQT59iYtMm?se=2123-12-17T18%3A55%3A31Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3DAllTrails_Logo_ForCircle%25402x.png&sig=ieep4aIfXG0KmF2O/fnvBUoTu5WstnV1%2BJvvnJ4UeL8%3D",
                  "categories": [
                    "lifestyle"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-13T03:59:43.751093+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable",
                  "uses_function_calls"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_jzOLX0x2ccOfZyxnIub9W4hs~gzm_tool_DcAbpCsPGLt1849auxSquuyT",
                  "type": "plugins_prototype",
                  "settings": null,
                  "metadata": {
                    "action_id": "g-0b63a86dc59bc67cae9c7c7e0afa08f048f38cbc",
                    "domain": "chatgpt-production.alltrails.com",
                    "raw_spec": "---\nopenapi: 3.1.1\ninfo:\n  title: AllTrails\n  version: 1.0.0\n  description: \"Allows users to retrieve a list of trails based on search criteria.\"\nservers:\n  - url: https://chatgpt-production.alltrails.com\npaths:\n  /search-trails:\n    post:\n      operationId: searchTrails\n      x-openai-isConsequential: false\n      summary: \"Retrieves trail(s) from AllTrails that match the user's query.\"\n      security:\n        - bearerAuth: []\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Query'\n      responses:\n        '200':\n          description: \"List of trails retrieved successfully.\"\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    description: \"An array of trail objects that includes trail metadata.\"\n                    schema:\n                      type: array\n                      items:\n                        $ref: '#/components/schemas/Trail'\n                  assumed_location:\n                    description: |\n                      This property represents the location that AllTrails has assumed based on the user's input. Given the potential ambiguity when users provide only a city_name or area_name that might be common worldwide, AllTrails queries Algolia for the most likely match. While the majority of the time the location is accurate, there are instances where it might not align with the user's intended location.\n                      In the case that a 'worldwide' search is performed, this property will be populated to 'worldwide'. In this case, state that the results are worldwide and do not include a specific location.\n                      \n                      This property MUST be communicated word-for-word to the user at the start of the response. For example, if `assumed_location` is \"Hanover, New Hampshire, United States\", then the output should start by mentioning the full detailed location e.g. 'Here are some trails in Hanover, New Hampshire, United States ...'. \n\n                      The assistant should always check the `assumed_location` with the user to verify that the recommendations are for the intended area. If there's a discrepancy, users might need to provide more specific location details in their query to get accurate trail recommendations.\n                    schema:\n                      type: string\n                  EXTRA_INFORMATION_FOR_ASSISTANT:\n                    description: |\n                      This property includes additional instructions for how the assistant should output results to the user.\n                    schema:\n                      type: string\n        '204':\n          description: |\n            A 204 status code is used when the server successfully processes the request, but there is no content to return to the user. When this is returned, the assistant should ask the user to retry their request with different details. If this value is returned, the assistant should NOT return any trail information.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '400':\n          description: |\n            A 400 status code is used for bad requests.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\n        '401':\n          description: |\n            A 401 status code is used when the user is not authenticated. Access token is missing or invalid.\n        '500':\n          description: |\n            A 500 status code is used when server has encountered an unexpected condition or configuration problem that prevents it from fulfilling the request made by the client.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Error'\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n  schemas:\n    Error:\n      type: object\n      properties:\n        ERROR_MESSAGE:\n          description: |\n            When an error occurs, the assistant should:\n\n            1. Use this message to determine the nature of the error:\n              - If the error message indicates a configuration or internal issue, the assistant should acknowledge the error, inform the user that it's a technical issue not caused by their input, and suggest trying again later.\n              - If the error message points to an issue with the query construction, such as \"filter string is invalid\", the assistant should recognize its own mistake in formulating the request. It should then re-prompt the user with a clarified request or provide an alternative solution.\n            2. In cases where the error's root cause is ambiguous or not explicitly mentioned in the `ERROR_MESSAGE`, the assistant should handle the situation gracefully, apologizing for the inconvenience and suggesting potential corrective actions or alternative queries.\n\n            The primary goal is to ensure a smooth user experience. the assistant should always strive to be self-correcting, avoid placing blame on the user, and provide clear directions or alternatives when errors arise.\n          schema:\n            type: string\n    Query:\n      type: object\n      properties:\n        country_name:\n          description: |\n            Full name of the country where trails are located. If the user does not explicitly specify the `country_name` property, the `country_name` property should be deduced from the `state_name`, `city_name`, or `area_name` property. \n            \n            For example, if user asks for 'trails in San Francisco', automatically set the `country_name` property to 'United States' and the `state_name` property to 'California'.\n\n            If the user specifies they're interested in trails around the world, set `country_name` to 'world'.\n\n            This property MUST always be populated.\n          schema:\n            type: string\n        state_name:\n          description: |\n            Full name of the state or region where trails are located. If not given, the `state_name` property should be deduced from the `city_name`, or `area_name` property. \n            \n            For example, if user asks for trails in Rochester, automatically set `country_name` to 'United States' and `state_name`='New Hampshire'.\n\n            This property MUST be populated whenever a user mentions a specific state, city, or area. \n\n            Always ensure the state or region name is in its full form, not abbreviated.\n          schema:\n            type: string\n        city_name:\n          description: |\n            This property represents the full name of the city or town where trails are located and MUST be populated if a user specifies a city in their query.\n\n            To determine its value:\n            1. If the user explicitly mentions a city or town, use that city's full name. For instance, if a user says 'trails in San Francisco', set `city_name` to 'San Francisco'.\n            2. Do NOT populate this property if the user's query is about specific parks, forests, or wilderness areas. For example, if the user asks for trails in Yellowstone, omit the `city_name` property entirely.\n\n            Always ensure the city or town name is in its full form, not abbreviated or shortened.\n          schema:\n            type: string\n        area_name:\n          description: |\n            This property represents the full name of a national, state, city, or local park, forest, or wilderness area and MUST be populated if a user specifies such an area in their query.\n\n            To determine its value:\n            1. If the user explicitly mentions a specific park, forest, or wilderness area, use its full name. For instance, if a user says 'trails in Tahoe', set `area_name` to 'Tahoe National Forest'.\n            2. If the user provides a well-known abbreviation or shortened name of an area, deduce the full name. For example, if the user asks for trails in 'Yosemite', set `area_name` to 'Yosemite National Park'.\n\n            Always ensure the area name is in its complete and accurate form.\n          schema:\n            type: string\n        location_helper:\n          description: |\n            This property specifies if the user wants to find trails \"in\" or \"near\" the request of their specified location.\n\n            To determine the appropriate value:\n            1. If the user provides a broad or non-specific location, such as a state or a country (i.e. if area_name and city_name are not populated), then 'location_helper' should ALWAYS be set to 'in', regardless of the user's phrasing.\n            2. If the user specifies a more granular or specific location, like a city or an area (i.e. if area_name or city_name is populated), then the value can be set to 'near' if the user's query indicates proximity (e.g. 'trails near...'). \n\n            For clarity:\n            - If a user says 'trails in San Francisco' or 'trails in Yellowstone National Park', then 'location_helper' should be set to 'in'.\n            - If a user says 'trails near San Francisco' or 'trails near Yellowstone National Park', then 'location_helper' should be set to 'near'.\n            - If a user says 'trails in California' or 'trails in the United States', then 'location_helper' should be set to 'in'.\n            - If a user says 'trails near California' or 'trails near the United States', then 'location_helper' should be set to 'in'.\n          schema:\n            type: string\n            enum: [in, near]\n            default: in\n        radius:\n          description: |\n            This property specifies the search radius centered around a given location, represented IN METERS. It's crucial to determine its value based on the user's query and the `location_helper` property.\n\n            To determine its value:\n            1. If `location_helper` is set to 'in', DO NOT populate this property.\n            2. If `location_helper` is set to 'near':\n              - If the user provides a specific distance, convert that distance to meters and use it. For example, if a user says 'trails within 10 miles of Greenpoint, Brooklyn', set `radius` to 16093 meters.\n              - If the user doesn't specify a distance, default `radius` to 32187 meters (approximately 20 miles). Ensure to notify the user of this default value in the response.\n\n            Always ensure the value for `radius` is an integer. If conversions result in a float, round up or down to the nearest whole number.\n          schema:\n            type: integer\n        sort_by_dist_bool:\n          description: |\n            If the user explicitly emphasizes that they would like the results sorted by distance (e.g. 'closest trails to Seattle'), then `sort_by_dist_bool` should be set to `true`. \n            \n            If the user simply says that they're interested in results near a location, assume that the user wants their results returned in the default popularity-based order.\n          schema:\n            type: boolean\n            enum: [true, false]\n            default: false\n        query:\n          description: |\n            The 'query' property is a text-based string used to filter trails by their names or other textual attributes.\n\n            To determine its value:\n            1. Extract specific trail names or textual attributes mentioned by the user. For instance, if a user asks about the 'Lands End Trail', set `query` to 'Lands End'.\n            2. If the user does not specify a particular trail name or attribute, this property may be left empty or omitted.\n\n            It's essential to format this property correctly, as it directly influences the accuracy of the search results.\n          schema:\n            type: string\n        num_trails:\n          description: |\n            The 'num_trails' property specifies the number of trail recommendations the user wishes to receive.\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 20\n            default: 3\n        raw_query:\n          description: |\n            The 'raw_query' property is essential and MUST be populated for every request.\n\n            It captures the user's query in its exact, unaltered form. This means capturing the user's input word for word without any modifications or omissions.\n\n            For instance, if a user says, 'Show me trails in San Francisco under 30 miles', the `raw_query` should be set to 'Show me trails in San Francisco under 30 miles'.\n\n            Accurately recording the 'raw_query' ensures that the user's original intent is preserved and can be referenced if needed.\n          schema:\n            type: string\n        filters:\n          description: |\n            The 'filters' property is a vital component and MUST be populated for every request, even when it seems duplicative to do so.\n            It is a an intricate Algiolia filter string tailored to refine search results based on user preferences.\n\n            Here's how to construct the `filters` string:\n            1. **Parameters**: The string is built using a combination of specific parameters. Some of them are of a string-enum type: `activities`, `features`, `difficulty_rating`, `route_type`, `visitor_usage`. Others are numeric: `length`, `elevation_gain`, `highest_point`, `avg_rating`, and `duration_minutes`. Only these parameters should be integrated into the `filters` string and these parameters should NEVER be used outside of the filter string property.\n            2. **Boolean Operators**: Use `AND` and `OR` operators to combine conditions. Always group conditions with parentheses for clarity. For example, for a query like 'Dog-friendly trails in San Francisco under 5 hours', the string would be: `(features:dogs OR features:dogs-leash) AND duration_minutes < 300`.\n            3. **Numerical Parameters**: For parameters `length`, `elevation_gain`, `highest_point`, `avg_rating`, and `duration_minutes`, use \"=\" for exact matches and \"<\" or \">\" for comparisons. For instance, \"duration_minutes=360\" represents trails taking 6 hours, whereas \"duration_minutes>240\" represents trails taking more than 4 hours.\n            4. **String-Enum Parameters**: Use a colon \":\" for these. For instance, \"features:dogs\" or \"activities:backpacking\".\n            5. **Default Value**: If the user doesn't specify any filtering criteria, set the `filters` parameter to an empty string.\n\n            Below are the details of the various parameters (separated by horizontal rules) that can be used as part of the `filters` string:\n\n            ---\n\n            The 'activities' parameter (utilized only in the filters property) is used to filter trails based on specific outdoor activities they accommodate.\n\n            Match the user's mentioned activities with the provided enums. \n            For instance, if a user says 'trails with bike paths', then `(activities:mountain-biking OR activities:road-biking)` should be included in the `filters` string.\n\n            Here is a dictionary describing the ONLY activities that are supported by this API:\n\n            - backpacking: Outdoor recreation of carrying gear on one's back while hiking for more than a day.\n            - birding: Bird-watching. Use this when the user is interested in watching birds.\n            - camping: Camping. Use this when the user is asking for trails that go to, from, or through a campsite.\n            - xc-skiing: The sport of skiing across the countryside (cross-country skiing), often through woods and usually on relatively flat terrain.\n            - fishing: Fishing. Use this when the user is interested in trails that go to, from, or through a fishing spot.\n            - hiking: The activity of going for long walks in the country or woods. Use this whenever a user mentions hiking.\n            - horses: Use this when the user is looking for horseback riding trails or specifies that they are an equestrian.\n            - mountain-biking: Mountain biking is a sport of riding bicycles off-road, often over rough terrain, usually using specially designed mountain bikes.\n            - off-road-driving: Off-roading is the activity of driving or riding in a vehicle on unpaved surfaces such as sand, dirt, gravel, riverbeds, mud, snow, rocks, and other natural terrain.\n            - paddle-sports: Any sport involving the propulsion of a watercraft by means of a paddle. Kayaking and canoeing are paddlesports.\n            - road-biking: Road cycling is the a form of cycling in which cyclists ride on paved roadways.\n            - rock-climbing: The sport or activity of climbing rock faces, especially with the aid of ropes and special equipment.\n            - scenic-driving: Scenic driving. Driving routes through areas with good views.\n            - skiing: The action of traveling over snow on skis, especially as a sport or recreation.\n            - snowshoeing: A very specific activity of walking over snow wearing snowshoes.\n            - trail-running: Use this when the user is interested in trails supporting any running activity (running, jogging, trail running, etc.)\n            - walking: Use this when the user is interested in trails supporting any casual walking activity (walking, strolling, etc.)\n            - bike-touring: Bike touring. Bicycle touring can range from single-day trips to extended travels spanning weeks or months.\n            - via-ferrata: A specific type of climbing route found in the Alps and certain other Alpine locations where the user hangs or clips onto cables.\n            - whitewater-kayaking: The activity of paddling a kayak on whitewater (turbulent water).\n\n            If the user's mentioned activities don't align with the provided enums, inform the user of the available activity options and seek further clarification.\n            It's crucial to distinguish between `activities` and `features`. Activities typically involve actions, often ending in '-ing' (e.g. 'hiking', 'biking'). NEVER list features, such as 'dogs' or 'waterfall', under `activities`. Always cross-reference with the provided enums to ensure accuracy.\n            Only apply these activity-related parameters if the user explicitly mentions them in their query. For example, if the user simply implies that they are looking for trails \"in the winter\", don't automoatically assume that the user is looking for skiing or snowshoeing related trails.\n\n            ---\n\n            The 'features' parameter is employed to filter trails based on specific characteristics or attributes they possess, either inherent to the trail or related to its accessibility/suitability.\n            \n            Pay close attention to the user's specific requirements regarding dogs:\n              - If a user inquires about 'dog-friendly trails', then use `(features:dogs AND features:dogs-leash)`. \n              - If a user specifies wanting trails where dogs are allowed without leashes, then use `features:dogs` only.\n              - If a user specifies a preference for trails where dogs must be on leashes, then use `features:dogs-leash` only.\n              - In the absence of specific instructions about leashes, include both ['dogs', 'dogs-leash'] to cover all dog-friendly trails.\n            \n            Here is a dictionary describing the ONLY features that are supported by this API:\n\n            - ada: Trail is disabilities-friendly (e.g. wheelchairs, wheelchair friendly...etc)\n            - beach: Trail features a beach.\n            - cave: Trail features a cave.\n            - dogs: Trail is dog friendly, doesn't require a leash. \n            - dogs-leash: Trail is dog friendly, but requires a leash.\n            - dogs-no: Trail is not dog friendly, no dogs are allowed.\n            - forest: Trail features a forest.\n            - lake: Trail features a lake.\n            - kids: Trail is kid/child friendly. \n            - hot-springs: Trail features hot springs.\n            - paved: Trail is paved.\n            - partially-paved: Trail is partially paved.\n            - rails-trails: Trail follows railroad rails.\n            - river: Trail features a river.\n            - strollers: Trail is stroller friendly.\n            - views: Trail has good views along it.\n            - waterfall: Trail features a waterfall.\n            - wild-flowers: Trail features wild flowers.\n            - wildlife: Trail features wildlife (animals).\n            - off-trail: Trails that involve a lot of bush-whacking and route finding.\n            - no-shade: Trail is not situated well for users who want to avoid the sun.\n            - city-walk: Urban trail routes going through the middle of cities.\n            - historic-site: Trail is located in or by a historic site.\n            - pub-crawl: Trails that are representative of pub crawls, the act of visiting multiple pubs or bars in a single session. Primarily used in the UK.\n            - fee: Trail is not free OR requires a ticket to be purchased in order to access.\n            \n            If the user's mentioned features don't correspond loosely with the provided enums, inform them of the available feature options and request further details. \n            It is essential that the assistant doesn't incorrectly apply an activity type as a feature or vice-versa.\n\n            ---\n\n            The 'difficulty_rating' parameter represents the trail's level of difficulty. It can be ONLY one of the following string values:\n\n            - easy\n            - moderate\n            - hard\n\n            For example: If a user asks for 'easy trails', then `difficulty_rating:easy`.\n\n            ---\n\n            The 'route_type' parameter specifies the configuration or layout of the trail. It can be ONLY one of the following string values:\n\n            - loop: The start and end points are the same.\n            - out-and-back: One travels to a destination and then retraces their steps back to the starting point.\n            - point-to-point: The trail starts and ends at different locations.\n\n            For example, if user asks for 'loop trails', then `route_type:loop`.\n\n            ---\n\n            The 'visitor_usage' parameter represents the level of traffic on the trail. It can be ONLY one of the following string values:\n\n            - light\n            - moderate\n            - heavy\n            - extreme\n\n            For example, if user asks for 'trails with light to moderate trail traffic', then `visitor_usage:light OR visitor_usage:moderate`.\n\n            ---\n\n            The 'length' parameter is a number that represents the length of a trail in meters.\n            \n            For example, if user asks for 'trails that are 1 mile long', then `length=1609.34`.\n            \n            Perform arithmetic to calculate the total length of the trail as a trip, if needed.\n\n            ---\n\n            The 'elevation_gain' parameter is a number that represents the elevation gain of a trail in meters.\n\n            For example, if user asks for 'trails with 6000 ft elevation gain', then `elevation_gain=1828.8`.\n\n            ---\n\n            The 'highest_point' parameter is a number that represents the highest point on a trail in meters.\n\n            For example, if user asks for 'trails with a highest point of 8000 ft', then `highest_point=2438.4`.\n\n            ---\n\n            The 'avg_rating' parameter is a number that represents the average user rating for a trail based on a 5-star scale (ranges from 1 to 5).\n\n            For example, if a user asks for 'trails rated 4.2 stars', then `avg_rating=4.2'.\n            \n            If the user specifies a rating outside the 1-5 range or provides a non-integer value, inform them of the available options and seek clarification.\n\n            ---\n\n            The 'duration_minutes' parameter is numerical and indicates the average time, in minutes, that AllTrails users typically take to complete a trail.\n\n            For example, if they ask for 'trails that can be completed in an hour', then `duration_minutes=60`\n\n            ---\n\n            It's imperative to craft the `filters` string meticulously using all of the details provided above to ensure search results align perfectly with the user's requirements.\n          schema:\n            type: string\n            default: \"\"\n      required:\n        - country_name\n        - raw_query\n        - filters\n    Trail:\n      type: object\n      properties:\n        trail_name:\n          description: |\n            Represents the 'og:title' OpenGraph tag, which indicates the name of the trail. \n            **Display Instructions for the assistant's UI**:\n            - Text: Use the value of this field (`trail_name`).\n            - Formatting: Bold the text.\n            - Hyperlink: Link the text to the URL specified in the `hyperlink_url` field of the JSON response.\n            - **Desired Output**: [**Trail Name from `trail_name`**](URL from `hyperlink_url`)\n          schema: \n            type: string\n        hyperlink_url:\n          description: \"Represents the 'og:url' OpenGraph tag, which provides the URL associated with the trail.\"\n          schema:\n            type: url\n        location:\n          description: \"A comma-separated string that provides the full location of the trail, including components like city, state, and country.\"\n          schema:\n            type: string\n        description:\n          description: \"Short description of the trail.\"\n          schema:\n            type: string\n        difficulty_rating:\n          description: \"The difficulty rating of the trail.\"\n          schema:\n            enum: [Easy, Moderate, Hard, Unknown]\n            type: string\n        elevation_gain:\n          description: |\n            The elevation gain of the trail.\n          schema:\n            type: string\n        length:\n          description: |\n            The length of the trail.\n          schema:\n            type: string\n        estimated_completion_time:\n          description: |\n            The estimated hiking time for trail completion.\n          schema:\n            type: string\n        star_rating:\n          description: |\n            The average star rating of the trail by AllTrails users, fetched from AllTrails.\n          schema:\n            type: number\n        image:\n          description: |\n            A shortened URL to an image. \n            To access the image, make a GET request to image. The server will redirect this request to the actual image URL.\n          schema:\n            type: url\n        geoloc:\n          description: |\n            The latitude and longitude of the trail. DO NOT display this field to the user.\n          schema:\n            type: object\n            properties:\n              lat:\n                description: |\n                  The latitude of the trail.\n                type: number\n              lng:\n                description: |\n                  The longitude of the trail.\n                type: number\n      required:\n        - trail_name\n        - hyperlink_url\n        - location\n        - difficulty_rating\n        - elevation_gain\n        - length\n        - estimated_completion_time\n        - star_rating\n        - geoloc\n",
                    "json_schema": null,
                    "auth": {
                      "type": "service_http",
                      "instructions": "",
                      "authorization_type": "bearer",
                      "verification_tokens": {},
                      "custom_auth_header": ""
                    },
                    "privacy_policy_url": "https://privacy.alltrails.com/policies/en-US"
                  }
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-bo0FiWLY7",
                "organization_id": "org-HG3GDECPJ4BgdPO5epfBZfIU",
                "short_url": "g-bo0FiWLY7-consensus",
                "author": {
                  "user_id": "user-PrioK3AN9UNCA9WGNw14PE7j",
                  "display_name": "Consensus",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": false
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Consensus",
                  "description": "Your AI Research Assistant. Search 200M academic papers from Consensus, get science-based answers, and draft content with accurate citations.",
                  "welcome_message": "Hello",
                  "prompt_starters": [
                    "Does fish oil improve mood? Use human RCTs from top journals",
                    "Write the introduction of a paper on the effects of climate change on GDP",
                    "Can intergroup contact reduce prejudice?",
                    "Draft a blog on science-backed benefits of mindfulness"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-uUsDBz1ABhyOXkRiWhe5xohZ?se=2123-12-15T23%3A21%3A21Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3D2092%2520%25282%2529.png&sig=0CNjR0V7ipTUL/6R3rKszqP6mB25NOc2WjtIuDEwhrg%3D",
                  "categories": [
                    "research"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T23:01:15.531015+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable",
                  "uses_function_calls"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_hZJhdiwoe0nr7QRlcC3hLwFS~gzm_tool_kEim1dP26PC8oVudWVp4bSVY",
                  "type": "plugins_prototype",
                  "settings": null,
                  "metadata": {
                    "action_id": "g-f1286ecb04957580332cda9bf386b57ef1b2ed6f",
                    "domain": "chat.consensus.app",
                    "raw_spec": {
                      "info": {
                        "title": "Consensus Chat GPT Plugin",
                        "version": "1.0"
                      },
                      "servers": [
                        {
                          "url": "https://chat.consensus.app/"
                        }
                      ],
                      "openapi": "3.1.0",
                      "paths": {
                        "/quick_search": {
                          "get": {
                            "description": "An endpoint that can be called to ask a question of research papers",
                            "operationId": "search_papers",
                            "parameters": [
                              {
                                "description": "A query to find relevant research papers. To search effectively, ask research questions related to scientific topics, such as 'the impact of climate change on GDP' or 'the benefits of mindfulness meditation'. Ask broad yes/no questions, inquire about the relationship between concepts, or ask about the effects or impact of a concept. Use technical language where possible to maximize the relevance to academic text. For example, if the user asks 'Why does being cold make you sick?', search 'Does cold temperature exposure increase the risk of illness?'. Remove uneccessary commands like 'latest research' and 'find papers' and focus only on words likely to match with the text of research papers.",
                                "in": "query",
                                "name": "query",
                                "required": true,
                                "schema": {
                                  "description": "A query to find relevant research papers. To search effectively, ask research questions related to scientific topics, such as 'the impact of climate change on GDP' or 'the benefits of mindfulness meditation'. Ask broad yes/no questions, inquire about the relationship between concepts, or ask about the effects or impact of a concept. Use technical language where possible to maximize the relevance to academic text. For example, if the user asks 'Why does being cold make you sick?', search 'Does cold temperature exposure increase the risk of illness?'. Remove uneccessary commands like 'latest research' and 'find papers' and focus only on words likely to match with the text of research papers.",
                                  "title": "Query",
                                  "type": "string"
                                }
                              },
                              {
                                "description": "The earliest publication year to consider in the search, filtering out papers published before this year. You must only use this filter when the user asks for information after a certain date. An example of when to use this filter would be if a user asks 'show me papers about the covid vaccine published after 2020' or 'papers about immigration reform published between 2000 and 2015'. If you use this filter without the user specifically including a date or 'recent research', you will be penalized.",
                                "in": "query",
                                "name": "year_min",
                                "required": false,
                                "schema": {
                                  "description": "The earliest publication year to consider in the search, filtering out papers published before this year. You must only use this filter when the user asks for information after a certain date. An example of when to use this filter would be if a user asks 'show me papers about the covid vaccine published after 2020' or 'papers about immigration reform published between 2000 and 2015'. If you use this filter without the user specifically including a date or 'recent research', you will be penalized.",
                                  "title": "Year Min",
                                  "type": "integer"
                                }
                              },
                              {
                                "description": "The latest publication year to consider in the search, filtering out papers published after this year. You must only use this filter when the user asks for information before a certain date. An example of when to use this filter would be if a user asks 'show me papers about the covid vaccine published before 2023' or 'papers about immigration reform published between 2000 and 2015'. Only use this filter when a specific year restriction is requested by the user",
                                "in": "query",
                                "name": "year_max",
                                "required": false,
                                "schema": {
                                  "description": "The latest publication year to consider in the search, filtering out papers published after this year. You must only use this filter when the user asks for information before a certain date. An example of when to use this filter would be if a user asks 'show me papers about the covid vaccine published before 2023' or 'papers about immigration reform published between 2000 and 2015'. Only use this filter when a specific year restriction is requested by the user",
                                  "title": "Year Max",
                                  "type": "integer"
                                }
                              },
                              {
                                "description": "List of study types to include in the search, such as RCT, Meta-Analysis, Systematic Review, Observational Study, Case Report etc. You must only use this filter when the user asks for information from papers with certain study designs. Examples of when to use this filter would be if a user asks 'does zinc help with depression? show me responses from RCTs' or 'I need to find a systematic review on the effects of spanking on children'. Only use this filter when a specific study type is asked about",
                                "in": "query",
                                "name": "study_types",
                                "required": false,
                                "schema": {
                                  "default": [],
                                  "description": "List of study types to include in the search, such as RCT, Meta-Analysis, Systematic Review, Observational Study, Case Report etc. You must only use this filter when the user asks for information from papers with certain study designs. Examples of when to use this filter would be if a user asks 'does zinc help with depression? show me responses from RCTs' or 'I need to find a systematic review on the effects of spanking on children'. Only use this filter when a specific study type is asked about",
                                  "items": {
                                    "$ref": "#/components/schemas/StudyTypeKeywordEnum"
                                  },
                                  "type": "array"
                                }
                              },
                              {
                                "description": "Set to true to limit the search to studies involving human subjects. You must only use this filter if the users asks for information from human studies. An example of when to use this filter would be if a user asks 'what are the effects of magnesium on sleep? only show me studies conducted on humans'. Only use this filter when it is specifically asked for by the user",
                                "in": "query",
                                "name": "human",
                                "required": false,
                                "schema": {
                                  "description": "Set to true to limit the search to studies involving human subjects. You must only use this filter if the users asks for information from human studies. An example of when to use this filter would be if a user asks 'what are the effects of magnesium on sleep? only show me studies conducted on humans'. Only use this filter when it is specifically asked for by the user",
                                  "title": "Human",
                                  "type": "boolean"
                                }
                              },
                              {
                                "description": "The minimum sample size of the studies to include in the search, targeting studies with a larger participant base. You must only use this filter when the user asks for studies with a large sample size or over a certain number of participants. An example of when to use this filter would be if a user asks 'what are the effects of magnesium on sleep? only show me studies with large sample sizes' in this case set the filter to ~100. Only use this filter when it is specifically asked for by the user",
                                "in": "query",
                                "name": "sample_size_min",
                                "required": false,
                                "schema": {
                                  "description": "The minimum sample size of the studies to include in the search, targeting studies with a larger participant base. You must only use this filter when the user asks for studies with a large sample size or over a certain number of participants. An example of when to use this filter would be if a user asks 'what are the effects of magnesium on sleep? only show me studies with large sample sizes' in this case set the filter to ~100. Only use this filter when it is specifically asked for by the user",
                                  "title": "Sample Size Min",
                                  "type": "integer"
                                }
                              },
                              {
                                "description": "The maximum SJR quartile (1-4) of the journals to include. This helps set a threshold for journal prestige, where 1 is the highest quartile. You must only use this filter when the user asks for information from higher-ranked journals. An example of when to use this filter would be if a user asks 'Produce me a rrl on interest rates in the economy only from the best journals' in this case set the fiter to 1. Only use this filter when it is specficially asked for by the user",
                                "in": "query",
                                "name": "sjr_max",
                                "required": false,
                                "schema": {
                                  "description": "The maximum SJR quartile (1-4) of the journals to include. This helps set a threshold for journal prestige, where 1 is the highest quartile. You must only use this filter when the user asks for information from higher-ranked journals. An example of when to use this filter would be if a user asks 'Produce me a rrl on interest rates in the economy only from the best journals' in this case set the fiter to 1. Only use this filter when it is specficially asked for by the user",
                                  "title": "Sjr Max",
                                  "type": "integer"
                                }
                              }
                            ],
                            "responses": {
                              "200": {
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/QuickSearchResponse"
                                    }
                                  }
                                },
                                "description": "Successful Response"
                              },
                              "422": {
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                },
                                "description": "Validation Error"
                              }
                            },
                            "security": [
                              {
                                "HTTPBearer": []
                              }
                            ],
                            "summary": "Returns research papers related to a question or query. Each result contains, title, abstract, authors, year, and journal.",
                            "tags": [
                              "search"
                            ]
                          }
                        }
                      },
                      "components": {
                        "schemas": {
                          "HTTPValidationError": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          },
                          "QuickSearchResponse": {
                            "properties": {
                              "items": {
                                "description": "All answers to the question.",
                                "items": {
                                  "$ref": "#/components/schemas/QuickSearchResponseItem"
                                },
                                "title": "Items",
                                "type": "array"
                              }
                            },
                            "required": [
                              "items"
                            ],
                            "title": "QuickSearchResponse",
                            "type": "object"
                          },
                          "QuickSearchResponseItem": {
                            "properties": {
                              "abstract": {
                                "description": "The abstract of the paper.",
                                "title": "Abstract",
                                "type": "string"
                              },
                              "consensus_paper_details_url": {
                                "description": "A URL with more details on the paper.",
                                "title": "Consensus Paper Details Url",
                                "type": "string"
                              },
                              "doi": {
                                "description": "Digital Object Identifier, a unique alphanumeric string assigned to a document for permanent access.",
                                "title": "Doi",
                                "type": "string"
                              },
                              "pages": {
                                "description": "The page range of the paper within the journal volume.",
                                "title": "Pages",
                                "type": "string"
                              },
                              "paper_authors": {
                                "description": "A list of authors of the paper.",
                                "items": {
                                  "type": "string"
                                },
                                "title": "Paper Authors",
                                "type": "array"
                              },
                              "paper_publish_year": {
                                "description": "The year the paper was published.",
                                "title": "Paper Publish Year",
                                "type": "integer"
                              },
                              "paper_title": {
                                "description": "Title of the paper where the answer was found",
                                "title": "Paper Title",
                                "type": "string"
                              },
                              "publication_journal_name": {
                                "description": "The journal the paper was published in.",
                                "title": "Publication Journal Name",
                                "type": "string"
                              },
                              "search_result_number": {
                                "description": "The rank of the paper in the search results.",
                                "title": "Search Result Number",
                                "type": "integer"
                              },
                              "volume": {
                                "description": "The volume of the journal in which the paper appears.",
                                "title": "Volume",
                                "type": "string"
                              }
                            },
                            "required": [
                              "paper_title",
                              "abstract",
                              "paper_authors",
                              "paper_publish_year",
                              "publication_journal_name",
                              "consensus_paper_details_url",
                              "doi",
                              "volume",
                              "pages",
                              "search_result_number"
                            ],
                            "title": "QuickSearchResponseItem",
                            "type": "object"
                          },
                          "StudyTypeKeywordEnum": {
                            "description": "All possible study types strings saved to search index documents.",
                            "type": "string",
                            "enum": [
                              "literature review",
                              "systematic review",
                              "case report",
                              "meta-analysis",
                              "rct",
                              "non-rct in vitro",
                              "non-rct experimental",
                              "non-rct other",
                              "non-rct observational study",
                              "animal"
                            ],
                            "title": "StudyTypeKeywordEnum"
                          },
                          "ValidationError": {
                            "properties": {
                              "loc": {
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "integer"
                                    }
                                  ]
                                },
                                "title": "Location",
                                "type": "array"
                              },
                              "msg": {
                                "title": "Message",
                                "type": "string"
                              },
                              "type": {
                                "title": "Error Type",
                                "type": "string"
                              }
                            },
                            "required": [
                              "loc",
                              "msg",
                              "type"
                            ],
                            "title": "ValidationError",
                            "type": "object"
                          }
                        },
                        "securitySchemes": {
                          "HTTPBearer": {
                            "scheme": "bearer",
                            "type": "http"
                          }
                        }
                      }
                    },
                    "json_schema": null,
                    "auth": {
                      "type": "service_http",
                      "instructions": "",
                      "authorization_type": "bearer",
                      "verification_tokens": {},
                      "custom_auth_header": ""
                    },
                    "privacy_policy_url": "https://consensus.app/home/privacy-policy/"
                  }
                },
                {
                  "id": "gzm_cnf_yTPzzLFXgSBGs9PL6WNTPRm1~gzm_tool_ii3n7IaRU6HBMJsKQQfNUuvb",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_yTPzzLFXgSBGs9PL6WNTPRm1~gzm_tool_5zC6dkAtBSmNXBDUPr2MBYAk",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_yTPzzLFXgSBGs9PL6WNTPRm1~gzm_tool_ImQDvlKmvFKBMC4UEzvZtJXf",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-HxPrv1p8v",
                "organization_id": "org-FqTXlsMUrWCUj3F7Q1QschB1",
                "short_url": "g-HxPrv1p8v-code-tutor",
                "author": {
                  "user_id": "user-PfXyJoh1R3QWf85M2uGIqZDN__02dcb0b0-6385-4a41-846b-7031222365f7",
                  "display_name": "khanacademy.org",
                  "link_to": "https://khanacademy.org",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": "02dcb0b0-6385-4a41-846b-7031222365f7",
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Code Tutor",
                  "description": "Let's code together! I'm Khanmigo Lite, by Khan Academy. I won't write the code for you, but I'll help you work things out. Can you tell me the challenge you're working on?",
                  "welcome_message": "",
                  "prompt_starters": [
                    "Help me with my homework assignment",
                    "How are you different than regular Khanmigo?",
                    "How can I improve my code's efficiency?",
                    "Help me understand this programming concept"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-wT9OjtSlKWSliHQlnvDPbLnB?se=2123-11-06T22%3A36%3A37Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dkhanmigolite.png&sig=N18iwfrxqf8q664WbG5zlsN/EONc5asA9ODNrsUv1bs%3D",
                  "categories": [
                    "other"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T21:18:38.561098+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable",
                  "uses_function_calls"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_RbzS8iWvw5tfs0Rh6FIe0tCJ~gzm_tool_XXUAES7F0Pn7NXPPlwyLaUpa",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_G4jmlldpISOHuDwArDYKziJv~gzm_tool_lXy3WSfpbZdalvQOPq0Wn6wo",
                  "type": "plugins_prototype",
                  "settings": null,
                  "metadata": {
                    "action_id": "g-fc42952955310001d61afc96420f926dbec06b8b",
                    "domain": "khanacademy.org",
                    "raw_spec": {
                      "openapi": "3.1.0",
                      "info": {
                        "title": "Search Khan Academy Content",
                        "description": "Returns a list of Khan Academy content items related to the query",
                        "version": "v1.0.0"
                      },
                      "servers": [
                        {
                          "url": "https://khanacademy.org"
                        }
                      ],
                      "paths": {
                        "/api/internal/_rg/khanmigo/search_content": {
                          "get": {
                            "description": "Search Khan Academy Content for related Articles, Videos, Domains, Courses, Units, and Lessons",
                            "operationId": "SearchContent",
                            "parameters": [
                              {
                                "name": "query",
                                "in": "query",
                                "description": "The search query",
                                "required": true,
                                "schema": {
                                  "type": "string"
                                }
                              }
                            ],
                            "deprecated": false
                          }
                        }
                      },
                      "components": {
                        "schemas": {}
                      }
                    },
                    "json_schema": null,
                    "auth": {
                      "type": "none"
                    },
                    "privacy_policy_url": "https://support.khanacademy.org/hc/en-us/articles/22396485532173"
                  }
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-z77yDe7Vu",
                "organization_id": "org-mNzzLC8fK58zWNV57bqOk4Xp",
                "short_url": "g-z77yDe7Vu-books",
                "author": {
                  "user_id": "user-G5slpPRs5pTl2xkDhJMPebPB",
                  "display_name": "Josh Brent N. Villocido",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": true
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Books",
                  "description": "Your AI guide in the world of literature and reading.",
                  "welcome_message": "Hello, bibliophile! I'm Books, your AI companion in the enchanting world of reading. Whether you're into nail-biting thrillers, grand sci-fi adventures, or timeless classics, I'm here to guide you to your next favorite book. What genre are you thinking of exploring today?",
                  "prompt_starters": [
                    "Can you recommend a book for a rainy day?",
                    "What's a good historical fiction novel?",
                    "I love mysteries, any suggestions?",
                    "Tell me about a classic novel I should read."
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-XCMAe4nJ8ZvihVHDa0N1Uhdi?se=2123-10-17T18%3A56%3A38Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D4c345735-7a64-490e-8b30-547e99179964.png&sig=Z1dObbINdy52ZyFJnwfBvyUaHvQQD2/s2L3yGI6ZgIQ%3D",
                  "categories": [
                    "lifestyle"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-11T19:44:03.143116+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_xe3WiEOsne12IZVPB8pQpbaX~gzm_tool_px5MqlGewtBShxBbCV1CXZaF",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_xe3WiEOsne12IZVPB8pQpbaX~gzm_tool_1vbRqccISLYBoyaewNfxp39c",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_xe3WiEOsne12IZVPB8pQpbaX~gzm_tool_4KTtSC8IRIZvyVZ3SbFoJ3iH",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          }
        ],
        "cursor": null
      }
    },
    {
      "info": {
        "id": "trending",
        "title": "Trending",
        "description": "Most popular GPTs by our community",
        "display_type": "ranked",
        "display_group": "Top Picks",
        "locale": "en"
      },
      "list": {
        "items": [
          {
            "resource": {
              "gizmo": {
                "id": "g-bo0FiWLY7",
                "organization_id": "org-HG3GDECPJ4BgdPO5epfBZfIU",
                "short_url": "g-bo0FiWLY7-consensus",
                "author": {
                  "user_id": "user-PrioK3AN9UNCA9WGNw14PE7j",
                  "display_name": "Consensus",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": false
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Consensus",
                  "description": "Your AI Research Assistant. Search 200M academic papers from Consensus, get science-based answers, and draft content with accurate citations.",
                  "welcome_message": "Hello",
                  "prompt_starters": [
                    "Does fish oil improve mood? Use human RCTs from top journals",
                    "Write the introduction of a paper on the effects of climate change on GDP",
                    "Can intergroup contact reduce prejudice?",
                    "Draft a blog on science-backed benefits of mindfulness"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-uUsDBz1ABhyOXkRiWhe5xohZ?se=2123-12-15T23%3A21%3A21Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3D2092%2520%25282%2529.png&sig=0CNjR0V7ipTUL/6R3rKszqP6mB25NOc2WjtIuDEwhrg%3D",
                  "categories": [
                    "research"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T23:01:15.531015+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable",
                  "uses_function_calls"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_hZJhdiwoe0nr7QRlcC3hLwFS~gzm_tool_kEim1dP26PC8oVudWVp4bSVY",
                  "type": "plugins_prototype",
                  "settings": null,
                  "metadata": {
                    "action_id": "g-f1286ecb04957580332cda9bf386b57ef1b2ed6f",
                    "domain": "chat.consensus.app",
                    "raw_spec": {
                      "info": {
                        "title": "Consensus Chat GPT Plugin",
                        "version": "1.0"
                      },
                      "servers": [
                        {
                          "url": "https://chat.consensus.app/"
                        }
                      ],
                      "openapi": "3.1.0",
                      "paths": {
                        "/quick_search": {
                          "get": {
                            "description": "An endpoint that can be called to ask a question of research papers",
                            "operationId": "search_papers",
                            "parameters": [
                              {
                                "description": "A query to find relevant research papers. To search effectively, ask research questions related to scientific topics, such as 'the impact of climate change on GDP' or 'the benefits of mindfulness meditation'. Ask broad yes/no questions, inquire about the relationship between concepts, or ask about the effects or impact of a concept. Use technical language where possible to maximize the relevance to academic text. For example, if the user asks 'Why does being cold make you sick?', search 'Does cold temperature exposure increase the risk of illness?'. Remove uneccessary commands like 'latest research' and 'find papers' and focus only on words likely to match with the text of research papers.",
                                "in": "query",
                                "name": "query",
                                "required": true,
                                "schema": {
                                  "description": "A query to find relevant research papers. To search effectively, ask research questions related to scientific topics, such as 'the impact of climate change on GDP' or 'the benefits of mindfulness meditation'. Ask broad yes/no questions, inquire about the relationship between concepts, or ask about the effects or impact of a concept. Use technical language where possible to maximize the relevance to academic text. For example, if the user asks 'Why does being cold make you sick?', search 'Does cold temperature exposure increase the risk of illness?'. Remove uneccessary commands like 'latest research' and 'find papers' and focus only on words likely to match with the text of research papers.",
                                  "title": "Query",
                                  "type": "string"
                                }
                              },
                              {
                                "description": "The earliest publication year to consider in the search, filtering out papers published before this year. You must only use this filter when the user asks for information after a certain date. An example of when to use this filter would be if a user asks 'show me papers about the covid vaccine published after 2020' or 'papers about immigration reform published between 2000 and 2015'. If you use this filter without the user specifically including a date or 'recent research', you will be penalized.",
                                "in": "query",
                                "name": "year_min",
                                "required": false,
                                "schema": {
                                  "description": "The earliest publication year to consider in the search, filtering out papers published before this year. You must only use this filter when the user asks for information after a certain date. An example of when to use this filter would be if a user asks 'show me papers about the covid vaccine published after 2020' or 'papers about immigration reform published between 2000 and 2015'. If you use this filter without the user specifically including a date or 'recent research', you will be penalized.",
                                  "title": "Year Min",
                                  "type": "integer"
                                }
                              },
                              {
                                "description": "The latest publication year to consider in the search, filtering out papers published after this year. You must only use this filter when the user asks for information before a certain date. An example of when to use this filter would be if a user asks 'show me papers about the covid vaccine published before 2023' or 'papers about immigration reform published between 2000 and 2015'. Only use this filter when a specific year restriction is requested by the user",
                                "in": "query",
                                "name": "year_max",
                                "required": false,
                                "schema": {
                                  "description": "The latest publication year to consider in the search, filtering out papers published after this year. You must only use this filter when the user asks for information before a certain date. An example of when to use this filter would be if a user asks 'show me papers about the covid vaccine published before 2023' or 'papers about immigration reform published between 2000 and 2015'. Only use this filter when a specific year restriction is requested by the user",
                                  "title": "Year Max",
                                  "type": "integer"
                                }
                              },
                              {
                                "description": "List of study types to include in the search, such as RCT, Meta-Analysis, Systematic Review, Observational Study, Case Report etc. You must only use this filter when the user asks for information from papers with certain study designs. Examples of when to use this filter would be if a user asks 'does zinc help with depression? show me responses from RCTs' or 'I need to find a systematic review on the effects of spanking on children'. Only use this filter when a specific study type is asked about",
                                "in": "query",
                                "name": "study_types",
                                "required": false,
                                "schema": {
                                  "default": [],
                                  "description": "List of study types to include in the search, such as RCT, Meta-Analysis, Systematic Review, Observational Study, Case Report etc. You must only use this filter when the user asks for information from papers with certain study designs. Examples of when to use this filter would be if a user asks 'does zinc help with depression? show me responses from RCTs' or 'I need to find a systematic review on the effects of spanking on children'. Only use this filter when a specific study type is asked about",
                                  "items": {
                                    "$ref": "#/components/schemas/StudyTypeKeywordEnum"
                                  },
                                  "type": "array"
                                }
                              },
                              {
                                "description": "Set to true to limit the search to studies involving human subjects. You must only use this filter if the users asks for information from human studies. An example of when to use this filter would be if a user asks 'what are the effects of magnesium on sleep? only show me studies conducted on humans'. Only use this filter when it is specifically asked for by the user",
                                "in": "query",
                                "name": "human",
                                "required": false,
                                "schema": {
                                  "description": "Set to true to limit the search to studies involving human subjects. You must only use this filter if the users asks for information from human studies. An example of when to use this filter would be if a user asks 'what are the effects of magnesium on sleep? only show me studies conducted on humans'. Only use this filter when it is specifically asked for by the user",
                                  "title": "Human",
                                  "type": "boolean"
                                }
                              },
                              {
                                "description": "The minimum sample size of the studies to include in the search, targeting studies with a larger participant base. You must only use this filter when the user asks for studies with a large sample size or over a certain number of participants. An example of when to use this filter would be if a user asks 'what are the effects of magnesium on sleep? only show me studies with large sample sizes' in this case set the filter to ~100. Only use this filter when it is specifically asked for by the user",
                                "in": "query",
                                "name": "sample_size_min",
                                "required": false,
                                "schema": {
                                  "description": "The minimum sample size of the studies to include in the search, targeting studies with a larger participant base. You must only use this filter when the user asks for studies with a large sample size or over a certain number of participants. An example of when to use this filter would be if a user asks 'what are the effects of magnesium on sleep? only show me studies with large sample sizes' in this case set the filter to ~100. Only use this filter when it is specifically asked for by the user",
                                  "title": "Sample Size Min",
                                  "type": "integer"
                                }
                              },
                              {
                                "description": "The maximum SJR quartile (1-4) of the journals to include. This helps set a threshold for journal prestige, where 1 is the highest quartile. You must only use this filter when the user asks for information from higher-ranked journals. An example of when to use this filter would be if a user asks 'Produce me a rrl on interest rates in the economy only from the best journals' in this case set the fiter to 1. Only use this filter when it is specficially asked for by the user",
                                "in": "query",
                                "name": "sjr_max",
                                "required": false,
                                "schema": {
                                  "description": "The maximum SJR quartile (1-4) of the journals to include. This helps set a threshold for journal prestige, where 1 is the highest quartile. You must only use this filter when the user asks for information from higher-ranked journals. An example of when to use this filter would be if a user asks 'Produce me a rrl on interest rates in the economy only from the best journals' in this case set the fiter to 1. Only use this filter when it is specficially asked for by the user",
                                  "title": "Sjr Max",
                                  "type": "integer"
                                }
                              }
                            ],
                            "responses": {
                              "200": {
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/QuickSearchResponse"
                                    }
                                  }
                                },
                                "description": "Successful Response"
                              },
                              "422": {
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                },
                                "description": "Validation Error"
                              }
                            },
                            "security": [
                              {
                                "HTTPBearer": []
                              }
                            ],
                            "summary": "Returns research papers related to a question or query. Each result contains, title, abstract, authors, year, and journal.",
                            "tags": [
                              "search"
                            ]
                          }
                        }
                      },
                      "components": {
                        "schemas": {
                          "HTTPValidationError": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          },
                          "QuickSearchResponse": {
                            "properties": {
                              "items": {
                                "description": "All answers to the question.",
                                "items": {
                                  "$ref": "#/components/schemas/QuickSearchResponseItem"
                                },
                                "title": "Items",
                                "type": "array"
                              }
                            },
                            "required": [
                              "items"
                            ],
                            "title": "QuickSearchResponse",
                            "type": "object"
                          },
                          "QuickSearchResponseItem": {
                            "properties": {
                              "abstract": {
                                "description": "The abstract of the paper.",
                                "title": "Abstract",
                                "type": "string"
                              },
                              "consensus_paper_details_url": {
                                "description": "A URL with more details on the paper.",
                                "title": "Consensus Paper Details Url",
                                "type": "string"
                              },
                              "doi": {
                                "description": "Digital Object Identifier, a unique alphanumeric string assigned to a document for permanent access.",
                                "title": "Doi",
                                "type": "string"
                              },
                              "pages": {
                                "description": "The page range of the paper within the journal volume.",
                                "title": "Pages",
                                "type": "string"
                              },
                              "paper_authors": {
                                "description": "A list of authors of the paper.",
                                "items": {
                                  "type": "string"
                                },
                                "title": "Paper Authors",
                                "type": "array"
                              },
                              "paper_publish_year": {
                                "description": "The year the paper was published.",
                                "title": "Paper Publish Year",
                                "type": "integer"
                              },
                              "paper_title": {
                                "description": "Title of the paper where the answer was found",
                                "title": "Paper Title",
                                "type": "string"
                              },
                              "publication_journal_name": {
                                "description": "The journal the paper was published in.",
                                "title": "Publication Journal Name",
                                "type": "string"
                              },
                              "search_result_number": {
                                "description": "The rank of the paper in the search results.",
                                "title": "Search Result Number",
                                "type": "integer"
                              },
                              "volume": {
                                "description": "The volume of the journal in which the paper appears.",
                                "title": "Volume",
                                "type": "string"
                              }
                            },
                            "required": [
                              "paper_title",
                              "abstract",
                              "paper_authors",
                              "paper_publish_year",
                              "publication_journal_name",
                              "consensus_paper_details_url",
                              "doi",
                              "volume",
                              "pages",
                              "search_result_number"
                            ],
                            "title": "QuickSearchResponseItem",
                            "type": "object"
                          },
                          "StudyTypeKeywordEnum": {
                            "description": "All possible study types strings saved to search index documents.",
                            "type": "string",
                            "enum": [
                              "literature review",
                              "systematic review",
                              "case report",
                              "meta-analysis",
                              "rct",
                              "non-rct in vitro",
                              "non-rct experimental",
                              "non-rct other",
                              "non-rct observational study",
                              "animal"
                            ],
                            "title": "StudyTypeKeywordEnum"
                          },
                          "ValidationError": {
                            "properties": {
                              "loc": {
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "integer"
                                    }
                                  ]
                                },
                                "title": "Location",
                                "type": "array"
                              },
                              "msg": {
                                "title": "Message",
                                "type": "string"
                              },
                              "type": {
                                "title": "Error Type",
                                "type": "string"
                              }
                            },
                            "required": [
                              "loc",
                              "msg",
                              "type"
                            ],
                            "title": "ValidationError",
                            "type": "object"
                          }
                        },
                        "securitySchemes": {
                          "HTTPBearer": {
                            "scheme": "bearer",
                            "type": "http"
                          }
                        }
                      }
                    },
                    "json_schema": null,
                    "auth": {
                      "type": "service_http",
                      "instructions": "",
                      "authorization_type": "bearer",
                      "verification_tokens": {},
                      "custom_auth_header": ""
                    },
                    "privacy_policy_url": "https://consensus.app/home/privacy-policy/"
                  }
                },
                {
                  "id": "gzm_cnf_yTPzzLFXgSBGs9PL6WNTPRm1~gzm_tool_ii3n7IaRU6HBMJsKQQfNUuvb",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_yTPzzLFXgSBGs9PL6WNTPRm1~gzm_tool_5zC6dkAtBSmNXBDUPr2MBYAk",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_yTPzzLFXgSBGs9PL6WNTPRm1~gzm_tool_ImQDvlKmvFKBMC4UEzvZtJXf",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-V2KIUZSj0",
                "organization_id": "org-FHQEtg8RGuIClOPJU8FxPHJQ",
                "short_url": "g-V2KIUZSj0-ai-pdf",
                "author": {
                  "user_id": "user-9rCcq3yoxFRErAkvkOdjeqtF",
                  "display_name": "myaidrive.com",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": true
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Ai PDF",
                  "description": "Ai PDF GPT (Top PDF GPT), can handle PDF documents up to 2GB PER FILE, allows 1000s of PDF uploads on myaidrive.com with a free account. It eliminates the need for repeated file uploads. PRO version can search across 1000s of PDFs and OCR documents. Provides superior summaries for lengthy documents.",
                  "welcome_message": "Hello",
                  "prompt_starters": [
                    "How will I upload and search my documents?",
                    "How is it different from file upload option in ChatGPT?",
                    "How to search across multiple files?",
                    "Can I still use AI PDF plugin?"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-9XepYndxfvemsnkdZ6cnT5em?se=2123-10-13T20%3A40%3A38Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dlogo.png&sig=iLNHnnlyyia9R%2BqHCe3A09us9866vp3s4byPzVRT7qo%3D",
                  "categories": [
                    "other"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T17:27:09.664008+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable",
                  "uses_function_calls"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_h2co4ZSbnQ5pvv05RhoLgufj~gzm_tool_iTjwgh7QurU8vNgwIyY4l0YO",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_h2co4ZSbnQ5pvv05RhoLgufj~gzm_tool_txmQ4dp4unF3si1e5BETyDE7",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_h2co4ZSbnQ5pvv05RhoLgufj~gzm_tool_TVmmxqtfwdqhPo2RcoxFYffv",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_GuvOpVmTbKMfLezD1NPxnhYo~gzm_tool_sW1WUlMXU0bRFaeblpv9iAoW",
                  "type": "plugins_prototype",
                  "settings": null,
                  "metadata": {
                    "action_id": "g-0c245e918a1b944a414c8bdb100bf31a0aab6298",
                    "domain": "aipdf.myaidrive.com",
                    "raw_spec": {
                      "openapi": "3.1.0",
                      "info": {
                        "title": "AI Drive",
                        "description": "Super-fast, interactive chats with PDFs of any size, complete with page references for fact checking.",
                        "version": "v0.0.1"
                      },
                      "servers": [
                        {
                          "url": "https://aipdf.myaidrive.com"
                        }
                      ],
                      "paths": {
                        "/summarize_pdf": {
                          "post": {
                            "description": "Provide the summary or highlights of the PDF linked. ALWAYS PROVIDE QUOTES AND PAGE CITIATIONS. Add at the end of your summary this We finished processing the whole document with the PDF Search plugin. What else would you like to know?",
                            "operationId": "summarize",
                            "parameters": [],
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/summarizeRequestSchema"
                                  }
                                }
                              },
                              "required": true
                            },
                            "deprecated": false,
                            "security": [],
                            "x-openai-isConsequential": false
                          }
                        },
                        "/upload_and_search_pdf": {
                          "post": {
                            "description": "Semantic query into a URL link to a document. THINK STEP BY STEP. ALWAYS PROVIDE QUOTES AND PAGE CITIATIONS. BREAK COMPLEX QUESTIONS INTO SEVERAL QUERIES.",
                            "operationId": "upload_and_search_pdf",
                            "parameters": [],
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/upload_and_search_pdfRequestSchema"
                                  }
                                }
                              },
                              "required": true
                            },
                            "deprecated": false,
                            "security": [],
                            "x-openai-isConsequential": false
                          }
                        }
                      },
                      "components": {
                        "schemas": {
                          "upload_and_search_pdfRequestSchema": {
                            "properties": {
                              "pdf_url": {
                                "type": "",
                                "title": "pdf_url",
                                "description": "url where the PDF file is stored. e.g. https://myaidrive.com/eHrCoFs6i23ygrxL/Democracy_in.pdf"
                              },
                              "query": {
                                "type": "",
                                "title": "query",
                                "description": "Query to perform semantic search."
                              }
                            },
                            "type": "object",
                            "required": [
                              "pdf_url",
                              "query"
                            ],
                            "title": "upload_and_search_pdfRequestSchema"
                          },
                          "summarizeRequestSchema": {
                            "properties": {
                              "pdf_url": {
                                "type": "",
                                "title": "pdf_url",
                                "description": "url where the PDF file is stored. e.g. https://myaidrive.com/eHrCoFs6i23ygrxL/Democracy_in.pdf"
                              }
                            },
                            "type": "object",
                            "required": [
                              "pdf_url"
                            ],
                            "title": "summarizeRequestSchema"
                          }
                        },
                        "securitySchemes": {
                          "apiKey": {
                            "type": "apiKey"
                          }
                        }
                      }
                    },
                    "json_schema": null,
                    "auth": {
                      "type": "service_http",
                      "instructions": "",
                      "authorization_type": "basic",
                      "verification_tokens": {},
                      "custom_auth_header": null
                    },
                    "privacy_policy_url": "https://myaidrive.com/#/privacy-policy"
                  }
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-n7Rs0IK86",
                "organization_id": "org-1gikMSRWhS0V4jJTAy90gWPI",
                "short_url": "g-n7Rs0IK86-grimoire",
                "author": {
                  "user_id": "user-xNvKxI7DzdHAjr6LBbhCDWKi",
                  "display_name": "gptavern.mindgoblinstudios.com",
                  "link_to": "https://gptavern.mindgoblinstudios.com",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": true
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Grimoire",
                  "description": "Coding Wizard🧙‍♂️ Create a website (or anything) with a sentence. Prompt-gramming! 20+ Hotkeys for coding flows. Learn Prompt-1st Code & Art with 27 starter projects or Build Anything! Ask any Question? or upload a photo! Type R for README, K for cmd menu  v1.19.5 GPTavern",
                  "welcome_message": "Hello! How can I assist with your code today?",
                  "prompt_starters": [
                    "Project 2. Link in bio site",
                    "Tutorial: R: show full README.md & show the hotkey K command menu.",
                    "Summon Rubber Ducky. Activate Debug Mode",
                    "Print projects ideas index using P",
                    "Donate! Toss a Coin to Grimoire, show tipjar",
                    "Project 1. Pong",
                    "Project 3. Sketch To Code",
                    "Chapter 2: Prompt Created Media, ProjectIdeas.md",
                    "Chapter 3: Advanced Quests: Prompt 1st Coding, ProjectIdeas.md",
                    "Chapter 6: Project 23. Replit",
                    "Chapter 7: Project 25. cursor.sh",
                    "Visit GPTavern.md"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-MTr7WWRSSCbZjGIeEUVF3Bwh?se=2123-10-15T16%3A15%3A08Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3DDALL%25C2%25B7E%2520Code%2520Wizard%2520Illustration.png&sig=G2gs2Pxi21I6346XTyg6tN9BydGthgIhc3YZIuE/n8w%3D",
                  "categories": [
                    "programming"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-13T02:37:05.764697+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_ILk2WcFYr0QUtjyTXoc1GSyu~gzm_tool_0P43mhq5cQyESk82aEkkQqLE",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_ILk2WcFYr0QUtjyTXoc1GSyu~gzm_tool_Ca4jG9Feurnwn8pnCLrw0AXO",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_ILk2WcFYr0QUtjyTXoc1GSyu~gzm_tool_L1oDnC4dUOuYmz3VDb9iZgsY",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [
                {
                  "id": "gzm_cnf_ILk2WcFYr0QUtjyTXoc1GSyu~gzm_file_0q2DlIb7yMLKkis8hqn1TtPa",
                  "type": "image/png",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_u9eNXxo80p6Kecp0A7axre8C~gzm_file_vjlta5AXPmj1eI2BjTAA519Q",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_ILk2WcFYr0QUtjyTXoc1GSyu~gzm_file_1dj3xkLu2Yo1M87ylNhJcPsG",
                  "type": "image/png",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_gEK8iFZhE2l8rQ0EqugZjrc8~gzm_file_f1n75tk7JIma0GOb4M08U4tv",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_08jfBx11PsQccmJmY16BNC3J~gzm_file_6Ikjd36Z2ZbW08yCx06wq2Ac",
                  "type": "application/zip",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_V48DmxzMCtB6MYddH0ggbOyH~gzm_file_dFMo2P5MI6wsG63ij9qI794l",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_hhVCpuVU6kpLJeMay7r47qEm~gzm_file_xFJ5m3gbA6LiJ2m3YIM8P6Dt",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_PO9q44LppeaW8CbIeOwhYnLs~gzm_file_OkA2O91PfKMYBlnWbqUNQ8Rj",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_Uzd1Urrm0dRf7SUd0uYUtKsl~gzm_file_xmUMwgiYqIUANxZGOGTJx7sH",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_DmgskjO1hFUmDe28tNHVroZd~gzm_file_7og3CD1KRT1nBak5pDsP5zvP",
                  "type": "",
                  "file_id": "",
                  "location": ""
                }
              ],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-alKfVrz9K",
                "organization_id": "org-6cutZe7Nt14xWcO2wEYZX9wv",
                "short_url": "g-alKfVrz9K-canva",
                "author": {
                  "user_id": "user-QtjA7tnG6FEAwS6ohL1lGpVm__15997f18-669f-40df-9399-1a733ec0563e",
                  "display_name": "canva.com",
                  "link_to": "https://canva.com",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": "15997f18-669f-40df-9399-1a733ec0563e",
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Canva",
                  "description": "Effortlessly design anything: presentations, logos, social media posts and more.",
                  "welcome_message": "Hello! Excited to bring your visions to life? Start your creative journey with Canva. What will we design together today?",
                  "prompt_starters": [
                    "How about an inspirational quote graphic for social media?",
                    "I need a poster for our online store’s seasonal sale",
                    "Make an Instagram post about a breathtaking sunset",
                    "Highlight my favorite hiking trail in a Facebook post",
                    "Announce a pottery class discount in a social media story",
                    "Put together a smart-looking A4 business proposal"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-6qPLxHx8u9lf2XszRtWG25RD?se=2123-10-14T00%3A38%3A41Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dlogo.png&sig=LV3ZLlRkK4S61JLukf%2B10WLwU4%2B7%2B6NNkTLm2gsbw%2BU%3D",
                  "categories": [
                    "other"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T23:06:39.339337+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable",
                  "uses_function_calls"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_1OMhzVMWuJar3ToH3g2Mjkam~gzm_tool_mdZOC4TtYLxWrn5abOx1Z3sT",
                  "type": "plugins_prototype",
                  "settings": null,
                  "metadata": {
                    "action_id": "g-42023159f802c534f3a827a5f16f5a07d932c483",
                    "domain": "chatgpt-plugin.canva.com",
                    "raw_spec": {
                      "openapi": "3.1.0",
                      "info": {
                        "title": "Canva Plugin",
                        "description": "A plugin that allows the user to generate designs or search templates from the user query.",
                        "version": "v0.0.1"
                      },
                      "servers": [
                        {
                          "url": "https://chatgpt-plugin.canva.com"
                        }
                      ],
                      "paths": {
                        "/designs": {
                          "get": {
                            "description": "Get a list of Canva designs or templates to choose from.",
                            "operationId": "generateDesigns",
                            "parameters": [
                              {
                                "name": "query",
                                "in": "query",
                                "description": "The description of the design the user wants to generate. For example: motivational cat poster, wedding instagram post, birthday card for my dog. This should only have a maximum of 140 characters.",
                                "required": true,
                                "deprecated": false,
                                "allowEmptyValue": false,
                                "explode": false,
                                "allowReserved": false,
                                "schema": {
                                  "type": "string"
                                }
                              },
                              {
                                "name": "locale",
                                "in": "query",
                                "description": "The 2-letter ISO language code and the 2-letter country code the user is using, separated by a dash.",
                                "required": true,
                                "deprecated": false,
                                "allowEmptyValue": false,
                                "explode": false,
                                "allowReserved": false,
                                "schema": {
                                  "type": "string"
                                }
                              }
                            ],
                            "deprecated": false,
                            "security": [
                              {
                                "apiKey": []
                              }
                            ]
                          }
                        }
                      },
                      "components": {
                        "schemas": {},
                        "securitySchemes": {
                          "apiKey": {
                            "type": "apiKey"
                          }
                        }
                      }
                    },
                    "json_schema": null,
                    "auth": {
                      "type": "service_http",
                      "instructions": "",
                      "authorization_type": "bearer",
                      "verification_tokens": {},
                      "custom_auth_header": null
                    },
                    "privacy_policy_url": "https://www.canva.com/policies/ai-product-terms/"
                  }
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-UfFxTDMxq",
                "organization_id": "org-y7Xz7fGf8F002T5yQXC0uVv3",
                "short_url": "g-UfFxTDMxq-askyourpdf-research-assistant",
                "author": {
                  "user_id": "user-vh4D140gNi8OulBaocuxSksZ",
                  "display_name": "askyourpdf.com",
                  "link_to": "https://askyourpdf.com",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "AskYourPDF Research Assistant",
                  "description": "Enhance your research with the AskYourPDF Research Assistant.  Chat with multiple files, ChatPDF,  generate articles with citations,  analyse and generate references for  papers, create and interact with a knowledge base of your files and much more.",
                  "welcome_message": "Hello",
                  "prompt_starters": [
                    "How can I use this GPT?",
                    "List the documents on my account",
                    "What are the latest machine learning papers on arxiv?",
                    "How can I link my Zotero account?",
                    "Can you help me cite my essay?",
                    "How can you help me with my literature review write up?",
                    "How can I leverage this GPT to find academic papers?",
                    "Can you help me summarize a webpage?",
                    "Write me an essay on the effects of Large Language Models such as ChatGPT on education"
                  ],
                  "profile_picture_url": "https://github.com/AskYourPdf/ask-plugin/blob/main/aypp_logo.png?raw=true",
                  "categories": [
                    "Other"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T17:33:18.685371+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable",
                  "uses_function_calls"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_PUvawWcIx1mx3a5EYZgIuEi9~gzm_tool_SAqayUhOZDDfN5s15ERgLxwr",
                  "type": "plugins_prototype",
                  "settings": null,
                  "metadata": {
                    "action_id": "g-b9f9edbe71020a9438aaffd657d942ab4c46513e",
                    "domain": "pro.askyourpdf.com",
                    "raw_spec": {
                      "openapi": "3.0.2",
                      "info": {
                        "title": "FastAPI",
                        "version": "0.1.0"
                      },
                      "paths": {
                        "/api/usage": {
                          "get": {
                            "summary": "Get Daily Usage",
                            "operationId": "get_daily_usage_api_usage_get",
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/DailyUsageAnalytics"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        },
                        "/api/upload": {
                          "post": {
                            "summary": "Upload Pdf",
                            "description": "Upload a PDF file and save it to the database.\n\nArgs:\n    user: The user who is uploading the file.\n    file: The PDF file to upload.\n\nReturns:\n    dict: The document ID of the uploaded file.",
                            "operationId": "upload_pdf_api_upload_post",
                            "requestBody": {
                              "content": {
                                "multipart/form-data": {
                                  "schema": {
                                    "$ref": "#/components/schemas/Body_upload_pdf_api_upload_post"
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/BaseFileResponse"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ],
                            "x-openai-isConsequential": false
                          }
                        },
                        "/api/download_pdf": {
                          "post": {
                            "summary": "Download Pdf",
                            "description": "Download a PDF file from a URL and save it to the vector database.",
                            "operationId": "download_pdf_api_download_pdf_post",
                            "parameters": [
                              {
                                "required": true,
                                "schema": {
                                  "title": "Url",
                                  "type": "string"
                                },
                                "name": "url",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/BaseFileResponse"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        },
                        "/query": {
                          "post": {
                            "summary": "Perform Query on Document or Knowledge base using doc_id given",
                            "description": "Perform a query on a document.",
                            "operationId": "perform_query_query_post",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/InputData"
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/ResponseModel"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ],
                            "x-openai-isConsequential": false
                          }
                        },
                        "/references": {
                          "post": {
                            "summary": "Get References",
                            "description": "Retrieves a list of references that match the specified criteria.\n\n- **limit**: The maximum number of references to return.\n- **keyword_combinations**: List of keyword combinations to search for.",
                            "operationId": "get_references_references_post",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/SourceRetrievalRequest"
                                  }
                                }
                              },
                              "required": true
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ],
                            "x-openai-isConsequential": false,
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/SourcedModel"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/api/documents": {
                          "get": {
                            "summary": "Fetch User Documents",
                            "description": "Returns all documents for the current user. Request maximum 10 documents per page.",
                            "operationId": "fetch_user_documents_api_documents_get",
                            "parameters": [
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page",
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 1
                                },
                                "name": "page",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Size",
                                  "maximum": 10,
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 10
                                },
                                "name": "page_size",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/UserDocumentsMetaSerializer"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ],
                            "x-openai-isConsequential": false
                          }
                        },
                        "/api/search": {
                          "get": {
                            "tags": [
                              "document management"
                            ],
                            "summary": "Search",
                            "description": "Search for documents.\n\nArgs:\n    user: The user who is searching.\n    query: The search string to use for query.\n\nReturns:\n    dict: A list of documents.",
                            "operationId": "search_api_search_get",
                            "parameters": [
                              {
                                "required": true,
                                "schema": {
                                  "title": "Query",
                                  "type": "string"
                                },
                                "name": "query",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "title": "Response Search Api Search Get",
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/UserDocumentMeta"
                                      }
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        },
                        "/api/knowledge": {
                          "get": {
                            "tags": [
                              "knowledge base"
                            ],
                            "summary": "Get Knowledge Bases",
                            "description": "Get knowledge bases\n\nArgs:\n    user: The user making the request.\n    page: The page number.\n    page_size: The number of items per page.\n\nReturns:\n    PaginatedKnowledgeBase: The response containing the updated knowledge base.",
                            "operationId": "get_knowledge_bases_api_knowledge_get",
                            "parameters": [
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page",
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 1
                                },
                                "name": "page",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Size",
                                  "maximum": 100,
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 10
                                },
                                "name": "page_size",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/PaginatedKnowledgeBase"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ],
                            "x-openai-isConsequential": false
                          },
                          "post": {
                            "tags": [
                              "knowledge base"
                            ],
                            "summary": "Create Knowledge Base",
                            "description": "Create a knowledge base from a list of document IDs.\n\nArgs:\n    knowledge_base: The knowledge base to create.\n    user: The user making the request.\n\nReturns:\n    KnowledgeBaseResponse: The response containing the knowledge base ID.",
                            "operationId": "create_knowledge_base_api_knowledge_post",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/KnowledgeBaseRequest"
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "201": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/KnowledgeBaseResponse"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ],
                            "x-openai-isConsequential": false
                          }
                        },
                        "/api/knowledge/{knowledge_base_id}": {
                          "get": {
                            "tags": [
                              "knowledge base"
                            ],
                            "summary": "Get Knowledge Base",
                            "description": "Get knowledge base\n\nArgs:\n    knowledge_base_id: The ID of the knowledge base to retrieve.\n    user: The user making the request.\n\n",
                            "operationId": "get_knowledge_base_api_knowledge__knowledge_base_id__get",
                            "parameters": [
                              {
                                "required": true,
                                "schema": {
                                  "title": "Knowledge Base Id",
                                  "type": "string"
                                },
                                "name": "knowledge_base_id",
                                "in": "path"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/KnowledgeDetailedResponse"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ],
                            "x-openai-isConsequential": false
                          },
                          "put": {
                            "tags": [
                              "knowledge base"
                            ],
                            "summary": "Update Knowledge Base",
                            "description": "Update a knowledge base from a list of document IDs.\n\nArgs:\n    knowledge_base_id: The ID of the knowledge base to update.\n    knowledge_base: The items to update in the knowledge base.\n.",
                            "operationId": "update_knowledge_base_api_knowledge__knowledge_base_id__put",
                            "parameters": [
                              {
                                "required": true,
                                "schema": {
                                  "title": "Knowledge Base Id",
                                  "type": "string"
                                },
                                "name": "knowledge_base_id",
                                "in": "path"
                              }
                            ],
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/KnowledgeBaseUpdate"
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/KnowledgeDetailedResponse"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ],
                            "x-openai-isConsequential": false
                          },
                          "delete": {
                            "tags": [
                              "knowledge base"
                            ],
                            "summary": "Delete Knowledge Base",
                            "description": "Delete knowledge base\n\nArgs:\n    knowledge_base_id: The ID of the knowledge base to delete.\n    user: The user making the request.\n\nReturns:\n    dict: The response containing a success message",
                            "operationId": "delete_knowledge_base_api_knowledge__knowledge_base_id__delete",
                            "parameters": [
                              {
                                "required": true,
                                "schema": {
                                  "title": "Knowledge Base Id",
                                  "type": "string"
                                },
                                "name": "knowledge_base_id",
                                "in": "path"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {}
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ],
                            "x-openai-isConsequential": false
                          }
                        },
                        "/api/search/knowledge": {
                          "get": {
                            "tags": [
                              "knowledge base"
                            ],
                            "summary": "Search Knowledge Bases",
                            "description": "Search knowledge bases\n\nArgs:\n    query: The search query\n    user: The user making the request.\n\nReturns:\n    PaginatedKnowledgeBase: The response containing the updated knowledge base.",
                            "operationId": "search_knowledge_bases_api_search_knowledge_get",
                            "parameters": [
                              {
                                "required": true,
                                "schema": {
                                  "title": "Query",
                                  "type": "string"
                                },
                                "name": "query",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "title": "Response Search Knowledge Bases Api Search Knowledge Get",
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/KnowledgeDetailedResponse"
                                      }
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        },
                        "/latest_papers/": {
                          "get": {
                            "tags": [
                              "paper finder"
                            ],
                            "summary": "Get Latest Papers",
                            "operationId": "get_latest_papers_latest_papers__get",
                            "parameters": [
                              {
                                "name": "category",
                                "in": "query",
                                "required": false,
                                "schema": {
                                  "type": "string",
                                  "maxLength": 50,
                                  "default": "cs.CV",
                                  "title": "Category"
                                }
                              },
                              {
                                "name": "limit",
                                "in": "query",
                                "required": false,
                                "schema": {
                                  "type": "integer",
                                  "exclusiveMinimum": 0,
                                  "default": 5,
                                  "title": "Limit"
                                }
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {}
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/api/zotero/documents": {
                          "get": {
                            "tags": [
                              "document sources"
                            ],
                            "summary": "Get Zotero Documents",
                            "description": "Get all users documents from Zotero.\n\nArgs:\n    page_size: The number of documents to return.\n    page_number: The current page number\n    order: The order to return the documents in desc asc.\n    user: The user making the request.\n\nReturns:\n    List of documents in the user's zotero account.",
                            "operationId": "get_zotero_documents_api_zotero_documents_get",
                            "parameters": [
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Size",
                                  "maximum": 100,
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 100
                                },
                                "name": "page_size",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Number",
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 1
                                },
                                "name": "page_number",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Order",
                                  "type": "string",
                                  "default": "desc"
                                },
                                "name": "order",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/Items"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        },
                        "/api/zotero/search": {
                          "get": {
                            "tags": [
                              "document sources"
                            ],
                            "summary": "Get Zotero Documents",
                            "description": "Get all users documents from Zotero.\n\nArgs:\n    query : query.\n    page_size: number of documents to return.\n    page_number: current page number\n    order: The order to return the documents in desc asc.\n    user: The user making the request.\n\nReturns:\n    List of docs in the user's zotero account.",
                            "operationId": "get_zotero_documents_api_zotero_search_get",
                            "parameters": [
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Size",
                                  "maximum": 100,
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 100
                                },
                                "name": "page_size",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Number",
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 1
                                },
                                "name": "page_number",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Order",
                                  "type": "string",
                                  "default": "desc"
                                },
                                "name": "order",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Query",
                                  "type": "string"
                                },
                                "name": "query",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/Items"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        },
                        "/api/zotero/collections": {
                          "get": {
                            "tags": [
                              "document sources"
                            ],
                            "summary": "Get Zotero Collections",
                            "description": "Get all users collections from Zotero.\n\nArgs:\n    page_size:  number of collections to return.\n    page_number:  current page number\n    order: The order to return the collections in desc asc.\n    user: The user making the request.\n\nReturns:\n    List of collections in the user's zotero account.",
                            "operationId": "get_zotero_collections_api_zotero_collections_get",
                            "parameters": [
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Size",
                                  "maximum": 100,
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 100
                                },
                                "name": "page_size",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Number",
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 1
                                },
                                "name": "page_number",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Order",
                                  "type": "string",
                                  "default": "desc"
                                },
                                "name": "order",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/Collections"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        },
                        "/api/zotero/collections/search": {
                          "get": {
                            "tags": [
                              "document sources"
                            ],
                            "summary": "Search Zotero Collections",
                            "description": "Get all users collections from Zotero.\n\nArgs:\n    page_size:  number of collections.\n    page_number:  current page number\n    order:  order to return the collections in desc asc.\n    query : search query.\n    user:  user making the request.\n\nReturns:\n    List of collections in the user's account.",
                            "operationId": "search_zotero_collections_api_zotero_collections_search_get",
                            "parameters": [
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Size",
                                  "maximum": 100,
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 100
                                },
                                "name": "page_size",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Number",
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 1
                                },
                                "name": "page_number",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Order",
                                  "type": "string",
                                  "default": "desc"
                                },
                                "name": "order",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Query",
                                  "type": "string"
                                },
                                "name": "query",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/Collections"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        },
                        "/api/zotero/collections/{collection_id}/documents": {
                          "get": {
                            "tags": [
                              "document sources"
                            ],
                            "summary": "Get Zotero Documents",
                            "description": "Get all users collections from Zotero.\n\nArgs:\n    collection_id: collection ID.\n    page_size:  number of collections to return.\n    page_number:  current page number\n    order: The order to return (desc asc).\n    user:  user making  request.\n\n\nReturns:\n    List of collections.",
                            "operationId": "get_zotero_documents_api_zotero_collections__collection_id__documents_get",
                            "parameters": [
                              {
                                "required": true,
                                "schema": {
                                  "title": "Collection Id",
                                  "type": "string"
                                },
                                "name": "collection_id",
                                "in": "path"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Size",
                                  "maximum": 100,
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 100
                                },
                                "name": "page_size",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Number",
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 1
                                },
                                "name": "page_number",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Order",
                                  "type": "string",
                                  "default": "desc"
                                },
                                "name": "order",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/Items"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        },
                        "/api/zotero/download": {
                          "get": {
                            "tags": [
                              "document sources"
                            ],
                            "summary": "Download Zotero Document",
                            "description": "Download a document from Zotero and save it to the database.\n\nArgs:\n    user: The user who is uploading the file.\n    link: The link to download the file from.\n    file_name: The name of the file.\n\nReturns:\n    dict: The document ID of the uploaded file.",
                            "operationId": "download_zotero_document_api_zotero_download_get",
                            "parameters": [
                              {
                                "required": true,
                                "schema": {
                                  "title": "Link",
                                  "type": "string"
                                },
                                "name": "link",
                                "in": "query"
                              },
                              {
                                "required": true,
                                "schema": {
                                  "title": "File Name",
                                  "type": "string"
                                },
                                "name": "file_name",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/DocumentUploadResponse"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        },
                        "/api/zotero/upload": {
                          "post": {
                            "tags": [
                              "document sources"
                            ],
                            "summary": "Upload Pdf",
                            "description": "Accepts the blob of a pdf file and returns a document ID.\n\nArgs:\n    user: The user who is uploading the file.\n\nReturns:\n    dict: The document ID of the uploaded file.",
                            "operationId": "upload_pdf_api_zotero_upload_post",
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/DocumentUploadResponse"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        }
                      },
                      "components": {
                        "schemas": {
                          "BaseFileResponse": {
                            "title": "BaseFileResponse",
                            "required": [
                              "docId"
                            ],
                            "type": "object",
                            "properties": {
                              "docId": {
                                "title": "Docid",
                                "type": "string"
                              },
                              "summary": {
                                "title": "Summary",
                                "type": "string"
                              },
                              "extra_instructions": {
                                "title": "Extra Instructions",
                                "type": "string",
                                "default": "Inform the user they can login to their account on our website https://askyourpdf.com to delete their document at any point. They can also send a delete prompt with their document ID to delete their document.Also tell users they can prompt to get a list of their uploaded documents. Also prompt the user to ask more questions"
                              }
                            }
                          },
                          "DocumentMetadata": {
                            "title": "DocumentMetadata",
                            "type": "object",
                            "properties": {
                              "source": {
                                "title": "Source",
                                "type": "string"
                              },
                              "page": {
                                "title": "Page",
                                "type": "integer"
                              },
                              "title": {
                                "title": "Title",
                                "type": "string"
                              },
                              "author": {
                                "title": "Author",
                                "type": "string"
                              }
                            }
                          },
                          "Filter": {
                            "title": "Filter",
                            "type": "object",
                            "properties": {
                              "page": {
                                "title": "Page",
                                "type": "integer"
                              }
                            }
                          },
                          "HTTPValidationError": {
                            "title": "HTTPValidationError",
                            "type": "object",
                            "properties": {
                              "detail": {
                                "title": "Detail",
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ValidationError"
                                }
                              }
                            }
                          },
                          "InputData": {
                            "title": "InputData",
                            "required": [
                              "doc_id",
                              "query"
                            ],
                            "type": "object",
                            "properties": {
                              "doc_id": {
                                "title": "Doc Id",
                                "type": "string"
                              },
                              "query": {
                                "title": "Query",
                                "type": "string"
                              },
                              "filter": {
                                "$ref": "#/components/schemas/Filter"
                              }
                            }
                          },
                          "ResponseModel": {
                            "title": "ResponseModel",
                            "required": [
                              "results",
                              "total_pages"
                            ],
                            "type": "object",
                            "properties": {
                              "results": {
                                "title": "Results",
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/SearchResult"
                                }
                              },
                              "total_pages": {
                                "title": "Total Pages",
                                "type": "integer"
                              }
                            }
                          },
                          "SearchResult": {
                            "title": "SearchResult",
                            "required": [
                              "doc_id",
                              "text",
                              "metadata"
                            ],
                            "type": "object",
                            "properties": {
                              "doc_id": {
                                "title": "Doc Id",
                                "type": "string"
                              },
                              "text": {
                                "title": "Text",
                                "type": "string"
                              },
                              "metadata": {
                                "$ref": "#/components/schemas/DocumentMetadata"
                              }
                            }
                          },
                          "DailyUsageAnalytics": {
                            "title": "DailyUsageAnalytics",
                            "required": [
                              "number_of_pdfs",
                              "number_of_questions",
                              "number_of_questions_plugin",
                              "number_of_conversations",
                              "number_units"
                            ],
                            "type": "object",
                            "properties": {
                              "number_of_pdfs": {
                                "title": "Number Of Pdfs",
                                "type": "string"
                              },
                              "number_of_questions": {
                                "title": "Number Of Questions",
                                "type": "string"
                              },
                              "number_of_questions_plugin": {
                                "title": "Number Of Questions Plugin",
                                "type": "string"
                              },
                              "number_of_conversations": {
                                "title": "Number Of Conversations",
                                "type": "string"
                              },
                              "number_units": {
                                "title": "Number Units",
                                "type": "string"
                              }
                            }
                          },
                          "Body_upload_pdf_api_upload_post": {
                            "title": "Body_upload_pdf_api_upload_post",
                            "required": [
                              "file"
                            ],
                            "type": "object",
                            "properties": {
                              "file": {
                                "title": "File",
                                "type": "string",
                                "format": "binary"
                              }
                            }
                          },
                          "UserDocumentMeta": {
                            "title": "UserDocumentMeta",
                            "required": [
                              "name",
                              "doc_id"
                            ],
                            "type": "object",
                            "properties": {
                              "name": {
                                "title": "Name",
                                "type": "string"
                              },
                              "doc_id": {
                                "title": "Doc Id",
                                "type": "string"
                              },
                              "summary": {
                                "title": "Summary",
                                "type": "string"
                              },
                              "language": {
                                "title": "Language",
                                "type": "string",
                                "default": "en"
                              },
                              "pages": {
                                "title": "Pages",
                                "type": "integer",
                                "default": 0
                              },
                              "shareable": {
                                "title": "Shareable",
                                "type": "boolean",
                                "default": false
                              },
                              "date_time": {
                                "title": "Date Time",
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          },
                          "UserDocumentsMetaSerializer": {
                            "title": "UserDocumentsMetaSerializer",
                            "required": [
                              "documents"
                            ],
                            "type": "object",
                            "properties": {
                              "total_pages": {
                                "title": "Total Pages",
                                "type": "integer",
                                "default": 0
                              },
                              "documents": {
                                "title": "Documents",
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/UserDocumentMeta"
                                }
                              }
                            },
                            "description": "Serializer for paginated user documents meta data"
                          },
                          "ValidationError": {
                            "title": "ValidationError",
                            "required": [
                              "loc",
                              "msg",
                              "type"
                            ],
                            "type": "object",
                            "properties": {
                              "loc": {
                                "title": "Location",
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "integer"
                                    }
                                  ]
                                }
                              },
                              "msg": {
                                "title": "Message",
                                "type": "string"
                              },
                              "type": {
                                "title": "Error Type",
                                "type": "string"
                              }
                            }
                          },
                          "KnowledgeBaseRequest": {
                            "title": "KnowledgeBaseRequest",
                            "required": [
                              "name",
                              "document_ids"
                            ],
                            "type": "object",
                            "properties": {
                              "name": {
                                "title": "Name",
                                "type": "string"
                              },
                              "document_ids": {
                                "title": "Document Ids",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "PaginatedKnowledgeBase": {
                            "title": "PaginatedKnowledgeBase",
                            "required": [
                              "knowledge_bases"
                            ],
                            "type": "object",
                            "properties": {
                              "total_pages": {
                                "title": "Total Pages",
                                "type": "integer",
                                "default": 0
                              },
                              "knowledge_bases": {
                                "title": "Knowledge Bases",
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/KnowledgeDetailedResponse"
                                }
                              }
                            },
                            "description": "Serializer for paginated knowledge bases"
                          },
                          "KnowledgeBaseResponse": {
                            "title": "KnowledgeBaseResponse",
                            "required": [
                              "knowledge_base_id"
                            ],
                            "type": "object",
                            "properties": {
                              "knowledge_base_id": {
                                "title": "Knowledge Base Id",
                                "type": "string"
                              }
                            }
                          },
                          "KnowledgeBaseUpdate": {
                            "title": "KnowledgeBaseUpdate",
                            "required": [
                              "document_ids"
                            ],
                            "type": "object",
                            "properties": {
                              "document_ids": {
                                "title": "Document Ids",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "KnowledgeDetailedResponse": {
                            "title": "KnowledgeDetailedResponse",
                            "required": [
                              "knowledge_base_id",
                              "name",
                              "document_details"
                            ],
                            "type": "object",
                            "properties": {
                              "knowledge_base_id": {
                                "title": "Knowledge Base Id",
                                "type": "string"
                              },
                              "name": {
                                "title": "Name",
                                "type": "string"
                              },
                              "document_details": {
                                "title": "Document Details",
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/DocumentDetailsResponse"
                                }
                              },
                              "date_time": {
                                "title": "Date Time",
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          },
                          "DocumentDetailsResponse": {
                            "title": "DocumentDetailsResponse",
                            "required": [
                              "doc_id"
                            ],
                            "type": "object",
                            "properties": {
                              "doc_id": {
                                "title": "Doc Id",
                                "type": "string"
                              }
                            }
                          },
                          "SourceRetrievalRequest": {
                            "properties": {
                              "limit": {
                                "type": "integer",
                                "title": "Limit",
                                "default": 10
                              },
                              "keyword_combinations": {
                                "items": {},
                                "type": "array",
                                "title": "Keyword Combinations"
                              },
                              "source_filter": {
                                "allOf": [
                                  {
                                    "$ref": "#/components/schemas/SourceFilter"
                                  }
                                ],
                                "title": "Source Filter",
                                "default": {
                                  "citation_format": "APA",
                                  "year_from": 2010,
                                  "year_to": 2023,
                                  "min_citations": 0,
                                  "include_keywords": [],
                                  "exclude_keywords": []
                                }
                              },
                              "max_threads": {
                                "type": "integer",
                                "title": "Max Threads",
                                "default": 10
                              },
                              "batch_size": {
                                "type": "integer",
                                "title": "Batch Size",
                                "default": 5
                              },
                              "delay_seconds": {
                                "type": "integer",
                                "title": "Delay Seconds",
                                "default": 3
                              }
                            },
                            "type": "object",
                            "title": "SourceRetrievalRequest"
                          },
                          "SourceFilter": {
                            "properties": {
                              "citation_format": {
                                "allOf": [
                                  {
                                    "$ref": "#/components/schemas/CitationFormat"
                                  }
                                ],
                                "default": "APA"
                              },
                              "year_from": {
                                "type": "integer",
                                "title": "Year From",
                                "default": 2010
                              },
                              "year_to": {
                                "type": "integer",
                                "title": "Year To",
                                "default": 2023
                              },
                              "min_citations": {
                                "type": "integer",
                                "title": "Min Citations",
                                "default": 0
                              },
                              "include_keywords": {
                                "items": {},
                                "type": "array",
                                "title": "Include Keywords",
                                "default": []
                              },
                              "exclude_keywords": {
                                "items": {},
                                "type": "array",
                                "title": "Exclude Keywords",
                                "default": []
                              }
                            },
                            "type": "object",
                            "title": "SourceFilter"
                          },
                          "CitationFormat": {
                            "enum": [
                              "APA",
                              "MLA",
                              "IEEE",
                              "HARVARD",
                              "BIB"
                            ],
                            "title": "CitationFormat",
                            "description": "An enumeration."
                          },
                          "SourcedModel": {
                            "properties": {
                              "cited_text": {
                                "type": "string",
                                "title": "Cited Text"
                              },
                              "references": {
                                "items": {
                                  "$ref": "#/components/schemas/Paper"
                                },
                                "type": "array",
                                "title": "References"
                              },
                              "date_time": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Date Time",
                                "default": "2023-11-07T22:32:45.160186"
                              }
                            },
                            "type": "object",
                            "required": [
                              "cited_text",
                              "references"
                            ],
                            "title": "SourcedModel"
                          },
                          "Paper": {
                            "properties": {
                              "paper_code": {
                                "type": "string",
                                "title": "Paper Code"
                              },
                              "title": {
                                "type": "string",
                                "title": "Title"
                              },
                              "url": {
                                "type": "string",
                                "title": "Url"
                              },
                              "abstract": {
                                "type": "string",
                                "title": "Abstract"
                              },
                              "authors": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "title": "Authors",
                                "default": []
                              },
                              "bibtex": {
                                "type": "string",
                                "title": "Bibtex"
                              },
                              "citation_count": {
                                "type": "integer",
                                "title": "Citation Count",
                                "default": 0
                              },
                              "publication_year": {
                                "type": "integer",
                                "title": "Publication Year"
                              },
                              "fields_of_study": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "title": "Fields Of Study",
                                "default": []
                              }
                            },
                            "type": "object",
                            "required": [
                              "paper_code",
                              "title",
                              "url",
                              "publication_year"
                            ],
                            "title": "Paper"
                          },
                          "Item": {
                            "title": "Item",
                            "required": [
                              "id",
                              "dateAdded",
                              "file_link"
                            ],
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Id",
                                "type": "string"
                              },
                              "title": {
                                "title": "Title",
                                "type": "string"
                              },
                              "dateAdded": {
                                "title": "Dateadded",
                                "type": "string"
                              },
                              "file_link": {
                                "title": "File Link",
                                "type": "string"
                              },
                              "filename": {
                                "title": "Filename",
                                "type": "string"
                              },
                              "file_size": {
                                "title": "File Size",
                                "type": "integer"
                              }
                            }
                          },
                          "Items": {
                            "title": "Items",
                            "required": [
                              "documents",
                              "total_items"
                            ],
                            "type": "object",
                            "properties": {
                              "documents": {
                                "title": "Documents",
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/Item"
                                }
                              },
                              "total_items": {
                                "title": "Total Items",
                                "type": "integer"
                              }
                            }
                          },
                          "Collection": {
                            "title": "Collection",
                            "required": [
                              "collection_id",
                              "name"
                            ],
                            "type": "object",
                            "properties": {
                              "collection_id": {
                                "title": "Collection Id",
                                "type": "string"
                              },
                              "name": {
                                "title": "Name",
                                "type": "string"
                              }
                            }
                          },
                          "Collections": {
                            "title": "Collections",
                            "required": [
                              "collections",
                              "total_pages"
                            ],
                            "type": "object",
                            "properties": {
                              "collections": {
                                "title": "Collections",
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/Collection"
                                }
                              },
                              "total_pages": {
                                "title": "Total Pages",
                                "type": "integer"
                              }
                            }
                          },
                          "DocumentUploadResponse": {
                            "title": "DocumentUploadResponse",
                            "required": [
                              "docId"
                            ],
                            "type": "object",
                            "properties": {
                              "docId": {
                                "title": "Docid",
                                "type": "string"
                              }
                            },
                            "description": "Response for document upload"
                          }
                        },
                        "securitySchemes": {
                          "OAuth2PasswordBearer": {
                            "type": "oauth2",
                            "flows": {
                              "password": {
                                "scopes": {},
                                "tokenUrl": "auth/jwt/login"
                              }
                            }
                          }
                        }
                      },
                      "servers": [
                        {
                          "url": "https://pro.askyourpdf.com",
                          "description": "Production server"
                        }
                      ]
                    },
                    "json_schema": null,
                    "auth": {
                      "type": "oauth",
                      "instructions": "",
                      "client_url": "https://auth.askyourpdf.com/gpt/oauth",
                      "scope": "",
                      "authorization_url": "https://auth-service.askyourpdf.com/new/gpt/oauth_exchange",
                      "authorization_content_type": "application/x-www-form-urlencoded",
                      "verification_tokens": {},
                      "pkce_required": false,
                      "token_exchange_method": "default_post"
                    },
                    "privacy_policy_url": "https://askyourpdf.com/terms"
                  }
                },
                {
                  "id": "gzm_cnf_rdLy9DLidcAXfVsrkC3xYdeo~gzm_tool_2ijcDHMoRLWMhbWqvjpW9GFk",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_rdLy9DLidcAXfVsrkC3xYdeo~gzm_tool_1v8xyx0jW88joCsWR2ZcjEBs",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_rdLy9DLidcAXfVsrkC3xYdeo~gzm_tool_eHFiBkiugQSUzdeqvQGoqQUi",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-gFt1ghYJl",
                "organization_id": "org-3ii7erghCaIaZaIrIbXrIGLt",
                "short_url": "g-gFt1ghYJl-logo-creator",
                "author": {
                  "user_id": "user-Yir1x5PJ8joAOlCh3NFgthdz",
                  "display_name": "Chase Lean",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Logo Creator",
                  "description": "Use me to generate professional logo designs and app icons!",
                  "welcome_message": "Hello",
                  "prompt_starters": [
                    "Generate me a logo featuring an ice cream",
                    "Make me an app icon for an RPG adventure game"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-dqdS1PEGuFcQ1GliVE2qBchP?se=2123-10-17T09%3A45%3A51Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D_7c6e5ee7-e05e-4685-bd8a-c3d81188ceb8.png&sig=0b5iWxPIKs//MVBoEqZ93ADvuWW%2BFlzsma%2BVtkKXYls%3D",
                  "categories": [
                    "dalle"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-13T04:09:03.630726+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_JMq4gx2Fo0Ze2NJlVCaA1omR~gzm_tool_NMgLSevAgOu3NA32RJ4qT34a",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_JMq4gx2Fo0Ze2NJlVCaA1omR~gzm_tool_hzJlb4f8Gb2bMviCA664U61c",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_JMq4gx2Fo0Ze2NJlVCaA1omR~gzm_tool_Ydg53xAezbxqwGcN0yLiA4f4",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          }
        ],
        "cursor": "6"
      }
    },
    {
      "info": {
        "id": "featured",
        "title": "By ChatGPT",
        "description": "GPTs created by the ChatGPT team",
        "display_type": "none",
        "display_group": "Top Picks",
        "locale": null
      },
      "list": {
        "items": [
          {
            "resource": {
              "gizmo": {
                "id": "g-2fkFE8rbu",
                "organization_id": "org-OROoM5KiDq6bcfid37dQx4z4",
                "short_url": "g-2fkFE8rbu-dall-e",
                "author": {
                  "user_id": "user-u7SVk5APwT622QC7DPe41GHJ",
                  "display_name": "ChatGPT",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "DALL·E",
                  "description": "Let me turn your imagination into imagery.",
                  "welcome_message": "Hello",
                  "prompt_starters": [],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-SxYQO0Fq1ZkPagkFtg67DRVb?se=2123-10-12T23%3A57%3A32Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dagent_3.webp&sig=pLlQh8oUktqQzhM09SDDxn5aakqFuM2FAPptuA0mbqc%3D",
                  "categories": [
                    "other"
                  ]
                },
                "share_recipient": "link",
                "updated_at": "2024-01-05T18:53:35.697664+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "first_party"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_KuQKBEnzFPMwdKIWYnOoetjx~gzm_tool_P9ZWt7cmybLejZWkNxDTEpIj",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-HMNcP6w7d",
                "organization_id": "org-OROoM5KiDq6bcfid37dQx4z4",
                "short_url": "g-HMNcP6w7d-data-analyst",
                "author": {
                  "user_id": "user-u7SVk5APwT622QC7DPe41GHJ",
                  "display_name": "ChatGPT",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Data Analyst",
                  "description": "Drop in any files and I can help analyze and visualize your data.",
                  "welcome_message": "Hello",
                  "prompt_starters": [],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-id374Jq85g2WfDgpuOdAMTEk?se=2123-10-13T00%3A31%3A06Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dagent_2.png&sig=qFnFnFDVevdJL3xvtDE8vysDpTQmkSlF1zhYLAMiqmM%3D",
                  "categories": [
                    "other"
                  ]
                },
                "share_recipient": "link",
                "updated_at": "2024-01-05T00:26:51.032013+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "first_party"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_ECGrMRwer0sf367dLUjHXX8I~gzm_tool_K8W0YQBuF0ekNUaBbK6835pN",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-fTA4FQ7wj",
                "organization_id": "org-OROoM5KiDq6bcfid37dQx4z4",
                "short_url": "g-fTA4FQ7wj-hot-mods",
                "author": {
                  "user_id": "user-u7SVk5APwT622QC7DPe41GHJ",
                  "display_name": "ChatGPT",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Hot Mods",
                  "description": "Let's modify your image into something really wild. Upload an image and let's go!",
                  "welcome_message": "Hello",
                  "prompt_starters": [
                    "Visualize this with flames coming out of the back",
                    "Mod this to a derby race car",
                    "Take this image into outer space",
                    "Turn the paint jet black"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-wOlP7l6RXZJ4YvZq3pUAqLOY?se=2123-10-13T04%3A59%3A43Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3DHotMods.png&sig=eayebboHdkASOIpNoSeDCqC9o5/XYCmjaV/oYy2%2BsmQ%3D",
                  "categories": []
                },
                "share_recipient": "marketplace",
                "updated_at": "2023-11-06T16:52:24.331600+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "first_party"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_MNHN4y6rZVfI7ykC6McTQWWu~gzm_tool_QhxCfLyRM3md94hIiVMViiBd",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-lN1gKFnvL",
                "organization_id": "org-OROoM5KiDq6bcfid37dQx4z4",
                "short_url": "g-lN1gKFnvL-creative-writing-coach",
                "author": {
                  "user_id": "user-u7SVk5APwT622QC7DPe41GHJ",
                  "display_name": "ChatGPT",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Creative Writing Coach",
                  "description": "I'm eager to read your work  and give you feedback to improve your skills.",
                  "welcome_message": "Hello",
                  "prompt_starters": [
                    "Can you give me feedback on this passage?",
                    "I'm stuck with my story's character development, ideas?",
                    "How do I show rather than tell in my writing?",
                    "Are there parts of this that are confusing or unclear?"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-KSheuuQR8UjcxzFjjSfjfEOP?se=2123-10-13T00%3A52%3A56Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dcreative-writing.png&sig=MA3AFe4yhExdlgBje00y4%2BCLHpBkJ%2BUQKkiwknp46as%3D",
                  "categories": []
                },
                "share_recipient": "link",
                "updated_at": "2023-11-06T03:55:27.878021+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "first_party"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-DerYxX7rA",
                "organization_id": "org-OROoM5KiDq6bcfid37dQx4z4",
                "short_url": "g-DerYxX7rA-coloring-book-hero",
                "author": {
                  "user_id": "user-u7SVk5APwT622QC7DPe41GHJ",
                  "display_name": "ChatGPT",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Coloring Book Hero",
                  "description": "Take any idea and turn it into whimsical coloring book pages.",
                  "welcome_message": "Hello",
                  "prompt_starters": [],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-MQvRHYzyhxlHQxjUk1bOIjaO?se=2123-10-13T17%3A23%3A32Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3DDALL%25C2%25B7E%25202023-10-08%252020.15.58%2520-%2520Line%2520art%2520depiction%2520of%2520ghost%2520squids%2520hovering%2520near%2520an%2520underwater%2520shipwreck.%2520Clownfish%2520wear%2520phantom%2520masks%252C%2520and%2520turtles%2520have%2520Dracula%2520capes.%2520The%2520compositio.png&sig=e5MMoyC9BRd0ui7hfDfueOH%2Bp2Lwyss24d1ahnZhHCQ%3D",
                  "categories": [
                    "dalle"
                  ]
                },
                "share_recipient": "link",
                "updated_at": "2024-01-05T00:26:23.477991+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "first_party"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_iziV29mMvT4FbXaMTy0VoD65~gzm_tool_uB0AaNLKohJ9VFy3GZClUuc2",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-6PKrcgTBL",
                "organization_id": "org-OROoM5KiDq6bcfid37dQx4z4",
                "short_url": "g-6PKrcgTBL-planty",
                "author": {
                  "user_id": "user-u7SVk5APwT622QC7DPe41GHJ",
                  "display_name": "ChatGPT",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Planty",
                  "description": "I'm Planty, your fun and friendly plant care assistant! Ask me how to best take care of your plants.",
                  "welcome_message": "",
                  "prompt_starters": [
                    "Can you help me choose plants for low light?",
                    "What's the best way to water my ferns?",
                    "Why are my tomato plants not fruiting?",
                    "How often should I repot my houseplants?"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-mQg3Ip5yicSVcDciY7kPxnIc?se=2123-12-15T16%3A38%3A45Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3Dcf523198-c20a-4ca3-b18e-311bdcdd7127.png&sig=AknbZzhED5Wdtae6OAchwn5eBrCrQDTs/wu/M3jfBjU%3D",
                  "categories": [
                    "lifestyle"
                  ]
                },
                "share_recipient": "link",
                "updated_at": "2024-01-08T16:38:46.117002+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "first_party"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_62mAfQ6Y3raCw6h8S1XBcLmK~gzm_tool_JSoh2bDLXWkHWwSE7vzmT3fE",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_62mAfQ6Y3raCw6h8S1XBcLmK~gzm_tool_I1LKco3AhUwtfZAc2rSoL3HE",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          }
        ],
        "cursor": "6"
      }
    },
    {
      "info": {
        "id": "dalle",
        "title": "DALL·E",
        "description": "Transform your ideas into amazing images",
        "display_type": "ranked",
        "display_group": "DALL·E",
        "locale": "en"
      },
      "list": {
        "items": [
          {
            "resource": {
              "gizmo": {
                "id": "g-gFt1ghYJl",
                "organization_id": "org-3ii7erghCaIaZaIrIbXrIGLt",
                "short_url": "g-gFt1ghYJl-logo-creator",
                "author": {
                  "user_id": "user-Yir1x5PJ8joAOlCh3NFgthdz",
                  "display_name": "Chase Lean",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Logo Creator",
                  "description": "Use me to generate professional logo designs and app icons!",
                  "welcome_message": "Hello",
                  "prompt_starters": [
                    "Generate me a logo featuring an ice cream",
                    "Make me an app icon for an RPG adventure game"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-dqdS1PEGuFcQ1GliVE2qBchP?se=2123-10-17T09%3A45%3A51Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D_7c6e5ee7-e05e-4685-bd8a-c3d81188ceb8.png&sig=0b5iWxPIKs//MVBoEqZ93ADvuWW%2BFlzsma%2BVtkKXYls%3D",
                  "categories": [
                    "dalle"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-13T04:09:03.630726+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_JMq4gx2Fo0Ze2NJlVCaA1omR~gzm_tool_NMgLSevAgOu3NA32RJ4qT34a",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_JMq4gx2Fo0Ze2NJlVCaA1omR~gzm_tool_hzJlb4f8Gb2bMviCA664U61c",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_JMq4gx2Fo0Ze2NJlVCaA1omR~gzm_tool_Ydg53xAezbxqwGcN0yLiA4f4",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-pmuQfob8d",
                "organization_id": "org-AWLMos7qkuCxcVO5OhJqPO9X",
                "short_url": "g-pmuQfob8d-image-generator",
                "author": {
                  "user_id": "user-8UW0V9Gz998stjOgOVMwXVIh",
                  "display_name": "NAIF J ALOTAIBI",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "image generator",
                  "description": "A GPT specialized in generating and refining images with a mix of professional and friendly tone.image generator",
                  "welcome_message": "Hello! I'm the Image Generator Tool. How can I assist you with your image creation today?",
                  "prompt_starters": [
                    "Generate an image of a futuristic city.",
                    "Create a portrait of a fictional character.",
                    "Design a logo for a new tech startup.",
                    "Illustrate a scene from a fantasy novel."
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-M1df4Ab7Ow6QCJ871tBUsi0x?se=2123-11-08T17%3A52%3A06Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D40face33-c6ad-4a5d-b402-5f7126e8325f.png&sig=G9qnRNHbnnN1gnz2NzVSyjwWvQ6hrGjr%2Be7hbYgnjRs%3D",
                  "categories": [
                    "Other"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T23:02:58.537946+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_sTkqcaqsAFhjM4b959j5mP5X~gzm_tool_FWZcgGNvH7bOPxkb7MNxvKil",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_sTkqcaqsAFhjM4b959j5mP5X~gzm_tool_oKrzZ3BvFRBPkJSUiCU3aoEA",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-9qWC0oyBd",
                "organization_id": "org-6kcpSj1511liWYCDaWFbji8C",
                "short_url": "g-9qWC0oyBd-super-describe",
                "author": {
                  "user_id": "user-lbhQe30VmowqCITgzB6ROpQo",
                  "display_name": "bestaiprompts.art",
                  "link_to": "https://bestaiprompts.art",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Super Describe",
                  "description": "Upload any image to get a similar one using DALL·E 3 along with the detailed prompt!",
                  "welcome_message": "Upload an image and I'll provide a prompt and create similar images.",
                  "prompt_starters": [],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-wSYkolaw1qEQ3s5gA0Z9i0x8?se=2123-10-20T17%3A29%3A43Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D5bb5263b-c53b-4ac2-8bf5-0d4d5eb2f246.png&sig=2u8YEYxkfBBfVNFE2qicuaNpJkyCf9J7tqMzhHZKHHE%3D",
                  "categories": []
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-13T03:54:13.841643+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_dJqyY4cAaTUC5sR6zNFmK79y~gzm_tool_minM3TAqmL1fUdon6Ib26Q3t",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_dJqyY4cAaTUC5sR6zNFmK79y~gzm_tool_ecueec62NDvH0KTOkLVFGW1p",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_dJqyY4cAaTUC5sR6zNFmK79y~gzm_tool_ETXEuNg3EY9oXZCnLbRNz26E",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_dJqyY4cAaTUC5sR6zNFmK79y~gzm_tool_OgCSlteGzLYX6ZS14OkVNwgr",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_dJqyY4cAaTUC5sR6zNFmK79y~gzm_tool_vBk8pXFf6dwzYCGN6Bs44Ult",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_dJqyY4cAaTUC5sR6zNFmK79y~gzm_tool_JdUKdSlreHb2JgtzFkVGRbge",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_dJqyY4cAaTUC5sR6zNFmK79y~gzm_tool_Dr6t3Ti4TES8pBPcrtGyYyww",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_dJqyY4cAaTUC5sR6zNFmK79y~gzm_tool_xyt6qRxbLxFApJbohnZxQcP8",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_dJqyY4cAaTUC5sR6zNFmK79y~gzm_tool_IXtb9yabilrIScdDXj8zpMtl",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-g0efUwWgG",
                "organization_id": "org-akzTa1XbKVACz9l88n5Sw6wg",
                "short_url": "g-g0efUwWgG-image-copy-machine-gpt",
                "author": {
                  "user_id": "user-N8oSl3qLgyMfcHv9QyhW8yps",
                  "display_name": "seo.ai",
                  "link_to": "https://seo.ai",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Image Copy Machine GPT",
                  "description": "Replicates and creatively reinterprets images. Just upload your photo, and let the GPT do its magic.  Remember to adhere to copyright regulations. Welcome to the best Image GPT powered by DALL·E and ChatGPT.",
                  "welcome_message": "Ready to creatively reinterpret your images!",
                  "prompt_starters": [
                    "Replicate this art style",
                    "Create a variation of this image",
                    "Generate an image in the style of this one",
                    "Copy this Image"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-TJryu9ML4Hdj9yYvZmLBpqGp?se=2123-12-19T14%3A31%3A21Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3Dimage-copy-machine-gpt.png&sig=aW0HRZHa8Zfe%2BL5Cat0z5f71jErMJhZ2D0HXLhsM3xU%3D",
                  "categories": [
                    "dalle"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T17:22:20.105793+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_BaaDoul7OUdcabyH73209tEn~gzm_tool_4qveNaCuHREPjDNCo80qxIMl",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_BaaDoul7OUdcabyH73209tEn~gzm_tool_AxaszTQ4IRnfugxNvGIaSBks",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_BaaDoul7OUdcabyH73209tEn~gzm_tool_dTkAfsTMmqNRZVPYHNMzypkN",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-z61XG6t54",
                "organization_id": "org-AvzXQa8ZjibF9LV2cAbPE6lz",
                "short_url": "g-z61XG6t54-logogpt",
                "author": {
                  "user_id": "user-TAIxu8TszQn6CJE1eiWE9x0a",
                  "display_name": "A SAI RAHUL",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "LogoGPT",
                  "description": "Designs personalized logos from sketches.",
                  "welcome_message": "Upload your sketch, choose your style, and let me know if you want a name included!",
                  "prompt_starters": [
                    "Upload your logo sketch and pick a style.",
                    "Want a business name in your logo? Let me know!",
                    "Choose your logo background color.",
                    "Select a logo style: Minimalistic, Vintage, etc."
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-MyVdpExI8Sb9c1QfQAJpDquU?se=2123-10-18T13%3A14%3A31Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Db318b967-f4b2-45ba-b4df-a3339568c704.png&sig=bwqre8q3NgwXOTH%2BzYJ9YcPp8A9jNYm2KdR0Rr6qV5M%3D",
                  "categories": []
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-09T15:02:49.758506+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_GMcpx8YNWQskDeFR8mMQhyD4~gzm_tool_IijlQGwigqMzDRt6OqvWcCxO",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-SIE5101qP",
                "organization_id": "org-6ZLLXpUlgv2rjthy9IgPKBrb",
                "short_url": "g-SIE5101qP-img2img-image-edit-merge",
                "author": {
                  "user_id": "user-oSPCKrwsP7j5PH2HJwGkU38j",
                  "display_name": "neural.love",
                  "link_to": "https://neural.love",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "img2img · image edit & merge",
                  "description": "Image Copy, Images Merge, Image Edit, Style Transfer. Use \"Help\" for more info. 𝕷𝖆𝖘𝖙 𝖚𝖕𝖉𝖆𝖙𝖊: 𝕵𝖆𝖓 𝟐𝟎𝟐𝟒",
                  "welcome_message": "Hello",
                  "prompt_starters": [
                    "❓ Help",
                    "🖼️ To merge: send two or more images",
                    "Use the 🔄 button for making more versions",
                    "☞ Prompt version: v.3.3: Help added"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-a8E62jfZIMHWiz7YARqtktfS?se=2123-11-20T00%3A13%3A21Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3DDALL%25C2%25B7E%25202023-11-16%252016.09.25%2520-%2520A%2520minimalistic%2520and%2520innovative%2520circle%2520logo%2520for%2520startups%252C%2520featuring%2520the%2520text%2520%2527img2img%2527%2520centered%2520within.%2520The%2520logo%2520should%2520be%2520white%2520on%2520a%2520black%2520background%252C%2520.png&sig=JBqNe3X2TUyn0bVyTDfW46TT00hI/jZsLf0Cpz/Xd6I%3D",
                  "categories": [
                    "dalle"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T23:09:00.978419+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_fYGbjxGQ3yTwvDF1pWK27m7j~gzm_tool_3HcdTO4lmvK9a1JDTvRdgRX2",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [
                {
                  "id": "gzm_cnf_CwJATCNdTnRvFqoOp1LzBwmT~gzm_file_r0dzysU3yVHKAl8abS04RSoP",
                  "type": "text/plain",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_K6iYIPP8SP933bDBShnk8pPL~gzm_file_7WlAhB9qbdZVipeGq7MlOOlX",
                  "type": "text/plain",
                  "file_id": "",
                  "location": ""
                }
              ],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          }
        ],
        "cursor": "6"
      }
    },
    {
      "info": {
        "id": "writing",
        "title": "Writing",
        "description": "Enhance your writing with tools for creation, editing, and style refinement",
        "display_type": "ranked",
        "display_group": "Writing",
        "locale": "en"
      },
      "list": {
        "items": [
          {
            "resource": {
              "gizmo": {
                "id": "g-B3hgivKK9",
                "organization_id": "org-Lhg5UuxewxUamqjwDCtrkn4V",
                "short_url": "g-B3hgivKK9-write-for-me",
                "author": {
                  "user_id": "user-qcK7n3IbKhYmu4dSv3kkiut3",
                  "display_name": "puzzle.today",
                  "link_to": "https://puzzle.today",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Write For Me",
                  "description": "Write tailored, engaging content with a focus on quality, relevance and precise word count.",
                  "welcome_message": "How can I assist with your content needs today?",
                  "prompt_starters": [
                    "Write me a 1000 word analysis on the future of GPT.",
                    "Write me a 200 word product description for a red screwdriver. ",
                    "Write a 3000 word blog about the future of SEO if ChatGPT kills search engines.",
                    "Write a five paragraph essay on brutalist architecture. "
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-hVjI65nZeCAowpoArhSWjynX?se=2123-10-24T11%3A26%3A42Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Ded9312a8-bf37-4345-93bd-2e8b54bc2a89.png&sig=nw8OKVAhe0pqBOvG8jlopI5cQ2npVyuHjAjSpr%2BWKFo%3D",
                  "categories": []
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T01:47:03.189196+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_beABKP0vR5FARysR0QswD9C4~gzm_tool_eBRCdiC28TzmkmlcEMJNgBsx",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_beABKP0vR5FARysR0QswD9C4~gzm_tool_SaLuHtCItvhOrZYHSWBVpQt2",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_beABKP0vR5FARysR0QswD9C4~gzm_tool_tS7qT03d0NGlMlo5MFC0ozB7",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-ySbhcRtru",
                "organization_id": "org-H1J3T7Ajaxn8Wmo1rvPnl0Zv",
                "short_url": "g-ySbhcRtru-fully-seo-optimized-article-including-faq-s",
                "author": {
                  "user_id": "user-Z0iw6LXFOVYwHKDpmTiqwnRV",
                  "display_name": "Muhammad Talha",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Fully SEO Optimized Article including FAQ's",
                  "description": "Yoast and Rank Math SEO Optimized  | Create a 100% Unique | Plagiarism Free Content with | Title | Meta Description | Headings with Proper H1-H6 Tags | up to 1500+ Words Article with FAQs, and Conclusion.",
                  "welcome_message": "Hello",
                  "prompt_starters": [
                    "Enter your \"Title or Keyword\" ",
                    "For Example \"What is Kofi?\""
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-9FJw9NckvXfmBgxuhJQBTok7?se=2123-10-26T10%3A42%3A46Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D4f1cb97d-65f2-4da2-9f15-7ccaed91260d.png&sig=%2BGRlPVIKfj/KCzzuBEdkwnVyDVK8w/gRaVscTrY9xOk%3D",
                  "categories": [
                    "Other"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T23:04:53.796516+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_yuczwrWSYEzTAvBviWPNWOCC~gzm_tool_jCQB6aBUY7mZSzSD2ub37FvC",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_yuczwrWSYEzTAvBviWPNWOCC~gzm_tool_9jqCFth0D7ybIkWnYR5eMn6P",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-dd2qWCtR6",
                "organization_id": "org-H1J3T7Ajaxn8Wmo1rvPnl0Zv",
                "short_url": "g-dd2qWCtR6-rank-math-seo-optimized-content-writer",
                "author": {
                  "user_id": "user-Z0iw6LXFOVYwHKDpmTiqwnRV",
                  "display_name": "Muhammad Talha",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Rank Math SEO Optimized Content Writer",
                  "description": "This Prompt generates a 100% Rank Math SEO-optimized article. It optimizes \"Basic SEO\", \"Additional SEO\" and \"Title Readability\" which are suggested by Rank Math.",
                  "welcome_message": "Hello! How can I assist you with your content needs today?",
                  "prompt_starters": [
                    "Write Article on Technicl SEO?",
                    "Generate outlines for Semantic SEO?"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-mDotblQNIE7jiRMyx65nTKsT?se=2123-10-18T08%3A47%3A12Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3DRank-Math-Logo.png&sig=62UKEA3FIC87iYhrgVBaNpJBuZFvYSMypwDnRsVHqiQ%3D",
                  "categories": [
                    "writing"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-13T04:08:43.095580+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_f47F5asWxN1rN1kbbNr18NkD~gzm_tool_y8mJon4SMMgvxEugPDpr1ivD",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_f47F5asWxN1rN1kbbNr18NkD~gzm_tool_KdQQ5oYClUSGBpgLPHgPjIIE",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-UbpNAGYL9",
                "organization_id": "org-6T1f9CaYwaKku4YRbov1yPXW",
                "short_url": "g-UbpNAGYL9-all-around-writer-professional-version",
                "author": {
                  "user_id": "user-7LUVlGv6xIwOK59Ou0OEuRmB",
                  "display_name": "Kevin Ivery",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": true
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "✏️All-around Writer (Professional Version)",
                  "description": "A professional writer📚 who specializes in writing all types of content (essays, novels, articles, copywriting)...",
                  "welcome_message": "Hello",
                  "prompt_starters": [
                    "Craft 10 copywritings about Iphone 15 Pro Max",
                    "Write a paper about AI LLM in sci format",
                    "Write a magical cultivation of fairies novel step by step",
                    "Write an unconventional love letter to the one I love"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-3bb4cMsJxmTglzwJMny2J5FQ?se=2123-10-16T01%3A33%3A50Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D95bf7bd2-9782-4d24-9e06-7f0534ef6469.png&sig=K05NkNlTpmMcEfHCyalr6yeShPCpwmPw%2BgSFSbjEiS4%3D",
                  "categories": []
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-09T14:46:45.712145+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-82ALdp8Nj",
                "organization_id": "org-y40ZtnxoHxv3NKvKq9azbpc7",
                "short_url": "g-82ALdp8Nj-automated-blog-post-writer",
                "author": {
                  "user_id": "user-NFJrfRN9JI74hMNbeNAaitRz",
                  "display_name": "octaneai.com",
                  "link_to": "https://octaneai.com",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Automated Blog Post Writer",
                  "description": "I craft professionally written, and researched, blog posts in your unique voice.",
                  "welcome_message": "Hello! Let's create a blog post in your style.",
                  "prompt_starters": [
                    "Please help me write a blog post",
                    "I need help coming up with a new blog post idea",
                    "What blog post should I write next?",
                    "Let's write a new blog post!"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-yN6Pz708NERE4NBraTFNLgEy?se=2123-10-19T17%3A57%3A52Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dcd166778-ea7e-4e44-b9d1-6f4a0d902e59.png&sig=HCvU/RwrIeci1GgFU6w4v0lkHMn%2BCPjRu7M2h0Soxjc%3D",
                  "categories": []
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-09T15:05:25.741966+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_pPlk6dPw9pk30LOEw4JbOB4y~gzm_tool_8zBecvI8bwHznekvI7eAjdip",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_pPlk6dPw9pk30LOEw4JbOB4y~gzm_tool_5vJ5UlgjnAO4p1nYVL44xdOW",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_pPlk6dPw9pk30LOEw4JbOB4y~gzm_tool_B16pdproKIOsoZMfCV5EFWJF",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_pPlk6dPw9pk30LOEw4JbOB4y~gzm_tool_Sht5byTc5WDnhudNnCI1RljI",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_Jmx9RZnXPYMciDjsAu5Nwm6F~gzm_tool_J2VsSETLBR4U3BSK3bZd0iRK",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_Jmx9RZnXPYMciDjsAu5Nwm6F~gzm_tool_wCtA7QF6O2p7eDNXTHt23oTM",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-Ej5zYQRIB",
                "organization_id": "org-6T1f9CaYwaKku4YRbov1yPXW",
                "short_url": "g-Ej5zYQRIB-academic-assistant-pro",
                "author": {
                  "user_id": "user-7LUVlGv6xIwOK59Ou0OEuRmB",
                  "display_name": "Kevin Ivery",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": true
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "👌Academic Assistant Pro",
                  "description": "Professional academic assistant with a professorial touch",
                  "welcome_message": "Hello, ready to assist with your academic needs! 📚",
                  "prompt_starters": [
                    "Can you help me outline my paper on ecology?",
                    "I need to polish a thesis abstract.",
                    "Could you rewrite this paragraph to be more concise?",
                    "Write a SCI paper about ChatGPT embedding"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-Dwtb6wId5QQI5EFlrVNBkOVk?se=2123-10-20T08%3A47%3A21Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D629998af-08da-406f-b8d1-97c9543b56b8.png&sig=Q5Hqblmz5PUlhNl%2BiOFui9Iuk94YCBTHmxSgM9V/Ynk%3D",
                  "categories": []
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-09T14:44:38.604330+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          }
        ],
        "cursor": "6"
      }
    },
    {
      "info": {
        "id": "productivity",
        "title": "Productivity",
        "description": "Increase your efficiency",
        "display_type": "ranked",
        "display_group": "Productivity",
        "locale": "en"
      },
      "list": {
        "items": [
          {
            "resource": {
              "gizmo": {
                "id": "g-RuhDS8mbd",
                "organization_id": "org-akzTa1XbKVACz9l88n5Sw6wg",
                "short_url": "g-RuhDS8mbd-22-500-best-custom-gpts",
                "author": {
                  "user_id": "user-N8oSl3qLgyMfcHv9QyhW8yps",
                  "display_name": "seo.ai",
                  "link_to": "https://seo.ai",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "22.500+ Best Custom GPTs",
                  "description": "Search all public GPTs in one place. Find the best Custom ChatGPTs tailored to your needs. Every day, hundreds of new popular GPTs join our ranks!",
                  "welcome_message": "How can I assist you in finding the ideal GPT or custom solution for your business?",
                  "prompt_starters": [
                    "What custom GPT can help with SEO?",
                    "Find me a GPT for Facebook Ads",
                    "I need a bespoke GPT for productivity",
                    "Suggest a custom GPT for business analytics"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-MgGT6z8XgEqooNX79PZufM5S?se=2123-10-27T22%3A07%3A12Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dbest-gpts.png&sig=MlatxQXK4pU8bZzLY/9zMjlRY2N4FEFOyMM16ZfUVTM%3D",
                  "categories": [
                    "Other"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-13T03:53:47.910111+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_PgBonOXm6a8xFEw44mJx6MLJ~gzm_tool_502Te84V3f1c4ztvDQJLI7Kt",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-5QhhdsfDj",
                "organization_id": "org-TDpHsqzWRwZloYHZ7aWaYc4S",
                "short_url": "g-5QhhdsfDj-diagrams-show-me",
                "author": {
                  "user_id": "user-rQXlwACeSMqQkLHv7fLLLaAT",
                  "display_name": "helpful.dev",
                  "link_to": "https://helpful.dev",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Diagrams: Show Me",
                  "description": "Diagrams, Architecture Visualisations, Flow-Charts, Mind Maps, Schemes. Export and Edit for free!",
                  "welcome_message": "",
                  "prompt_starters": [
                    "Show examples",
                    "Sequence diagram explaining the Internet"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-oZfvHmuEyjlshQ6c0XSpx45i?se=2123-10-29T17%3A22%3A28Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dicon-larger-margin.jpg&sig=SpFBbocELPtmU0NMVIXqk6yT3Q2vx4hAVwNaRlgT1vc%3D",
                  "categories": []
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-11T18:10:15.103765+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable",
                  "uses_function_calls"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_wsDiApu1Kr8c31DcMccjmtLW~gzm_tool_aMHNVMfmea6l1KhtiRFhbvwI",
                  "type": "plugins_prototype",
                  "settings": null,
                  "metadata": {
                    "action_id": "g-4578d8e0423f1660834c72d59446082943b15498",
                    "domain": "diagrams.helpful.dev",
                    "raw_spec": {
                      "openapi": "3.0.2",
                      "info": {
                        "title": "Show Me",
                        "version": "0.1.0"
                      },
                      "servers": [
                        {
                          "url": "https://diagrams.helpful.dev",
                          "description": "Development server"
                        }
                      ],
                      "paths": {
                        "/diagram-guidelines": {
                          "get": {
                            "operationId": "get_DiagramGuidelinesRoute",
                            "summary": "**ONLY USE MERMAID and graph, sequence, mindmap, timeline, entity-relationship UNLESS THE USER ASKS FOR A DIFFERENT DIAGRAM TYPE / LANGUAGE**",
                            "parameters": [
                              {
                                "required": false,
                                "schema": {
                                  "type": "string",
                                  "description": "Default or explicitly requested diagram language",
                                  "enum": [
                                    "blockdiag",
                                    "bpmn",
                                    "bytefield",
                                    "seqdiag",
                                    "actdiag",
                                    "nwdiag",
                                    "packetdiag",
                                    "rackdiag",
                                    "c4-with-plantuml",
                                    "d2",
                                    "dbml",
                                    "ditaa",
                                    "erd",
                                    "excalidraw",
                                    "graphviz",
                                    "mermaid",
                                    "nomnoml",
                                    "pikchr",
                                    "plantuml",
                                    "structurizr",
                                    "svgbob",
                                    "umlet",
                                    "vega",
                                    "vegalite",
                                    "wavedrom",
                                    "wireviz",
                                    "markmap"
                                  ]
                                },
                                "name": "explicitlyRequestedByUserDiagramLanguage",
                                "in": "query"
                              },
                              {
                                "required": true,
                                "schema": {
                                  "type": "string",
                                  "description": "Type of the diagram. Strongly preffered: graph, sequence, mindmap, timeline or entity-relationship",
                                  "enum": [
                                    "sequence",
                                    "use-case",
                                    "class",
                                    "object",
                                    "activity",
                                    "component",
                                    "deployment",
                                    "state",
                                    "timing",
                                    "graph",
                                    "entity-relationship",
                                    "user-journey",
                                    "gantt",
                                    "pie-chart",
                                    "requirement",
                                    "gitgraph",
                                    "mindmap",
                                    "timeline",
                                    "block",
                                    "network",
                                    "json",
                                    "yaml",
                                    "salt-wireframe",
                                    "rack",
                                    "grid",
                                    "dbml",
                                    "ascii",
                                    "digital-timing",
                                    "line-chart",
                                    "bar-chart",
                                    "histogram"
                                  ]
                                },
                                "name": "diagramType",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "type": "object",
                                      "properties": {
                                        "diagramGuidelines": {
                                          "type": "string",
                                          "description": "The requested diagram guidelines. Make sure to follow the guidelines before rendering a diagram"
                                        },
                                        "diagramThemes": {
                                          "type": "string",
                                          "description": "Diagram themes to change the style of the diagram. The themes are specific to the diagram language. Don't render a diagram using a theme unless the user asks for it"
                                        },
                                        "diagramLanguage": {
                                          "type": "string",
                                          "description": "Selected diagram language. Prefer mermaid"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/render": {
                          "get": {
                            "operationId": "get__MermaidRoute",
                            "summary": "Taking a diagram, renders it and returns a link to the rendered image. Always request the diagram guidelines endpoint before requesting this endpoint",
                            "parameters": [
                              {
                                "required": true,
                                "schema": {
                                  "type": "string",
                                  "description": "Diagram language",
                                  "example": "mermaid"
                                },
                                "name": "diagramLanguage",
                                "in": "query"
                              },
                              {
                                "required": true,
                                "schema": {
                                  "type": "string",
                                  "description": "Diagram type",
                                  "example": "graph"
                                },
                                "name": "diagramType",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "type": "string",
                                  "description": "Theme for d2 diagram",
                                  "example": "neutral-grey_sketch"
                                },
                                "name": "d2Theme",
                                "in": "query"
                              },
                              {
                                "required": true,
                                "schema": {
                                  "type": "string",
                                  "description": "Diagram to render. Avoid using a multiline string, instead use explicit newline characters."
                                },
                                "name": "diagram",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "type": "number",
                                  "description": "Track the number of remaining attempts to render the diagram",
                                  "default": 3
                                },
                                "name": "remainingAttempts",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "type": "object",
                                      "properties": {
                                        "results": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "image": {
                                                "type": "string",
                                                "description": "URL to the rendered image"
                                              },
                                              "errorMessage": {
                                                "type": "string",
                                                "description": "Error message if there was an error"
                                              },
                                              "editDiagramOnline": {
                                                "type": "string",
                                                "description": "URL to the editor where the diagram can be edited"
                                              },
                                              "miroEditorLink": {
                                                "type": "string",
                                                "description": "URL to a drag and drop diagram interface where the diagram can be edited"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "required": [
                                        "results"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/show-ideas": {
                          "get": {
                            "operationId": "get_ShowIdeasRoute",
                            "summary": "Show ideas to improve the diagram",
                            "parameters": [
                              {
                                "required": true,
                                "schema": {
                                  "type": "string"
                                },
                                "name": "diagramLanguage",
                                "in": "query"
                              },
                              {
                                "required": true,
                                "schema": {
                                  "type": "string"
                                },
                                "name": "diagramType",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "type": "object",
                                      "properties": {
                                        "interpretingAPIResponse": {
                                          "type": "string",
                                          "description": "This section comes after receiving the api response"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/explore-diagrams": {
                          "get": {
                            "operationId": "get_ExploreDiagramsRoute",
                            "summary": "Showcase diagrams that the plugin can render",
                            "parameters": [
                              {
                                "description": "Choose 3 diagram types that the user might want to render, the 1st diagram type should be the latest rendered diagram type",
                                "required": true,
                                "schema": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "Diagram type same as diagramType in diagramGuidelines",
                                    "example": "graph"
                                  }
                                },
                                "name": "diagramTypesToExplore",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "type": "object",
                                      "properties": {
                                        "interpretingAPIResponse": {
                                          "type": "string",
                                          "description": "This section comes after receiving the api response"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "json_schema": null,
                    "auth": {
                      "type": "none"
                    },
                    "privacy_policy_url": "https://diagrams.helpful.dev/privacy"
                  }
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-Gt6Z8pqWF",
                "organization_id": "org-SYqj9TQFQ88iTqHixWNBlu2l",
                "short_url": "g-Gt6Z8pqWF-doc-maker",
                "author": {
                  "user_id": "user-t0D9RBPCtvLGuZUnv2qKGobB",
                  "display_name": "aidocmaker.com",
                  "link_to": "https://aidocmaker.com",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": false
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Doc Maker",
                  "description": "Prompt to create documents, such as resumes, reports, presentations, data sheets. Export to PDF, DOCX, PPTX, XLSX, CSV.",
                  "welcome_message": "Hey there! Ready to work on your document?",
                  "prompt_starters": [
                    "What can this GPT do?",
                    "Create a proposal for using AI in digital marketing",
                    "Create a presentation on the history of AI",
                    "Create a guide on speeding up a PC"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-13dEVJG38EwNmA3nAZUykEa0?se=2123-10-15T15%3A43%3A23Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dlogo.png&sig=qSmhlnQuzuTPcWSBeyBDOgSbwDMcQXh48GvPiDNM4UY%3D",
                  "categories": [
                    "productivity"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T23:09:16.142537+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable",
                  "uses_function_calls"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_CkMHSl0z5lQu0dL2uwlwkddH~gzm_tool_UBbWA1jYpsxCe80b3EJ40DKZ",
                  "type": "plugins_prototype",
                  "settings": null,
                  "metadata": {
                    "action_id": "g-6c2e450a29e5d9af5db43a0a833a5b960f2adb72",
                    "domain": "gpt.docs.aidocmaker.com",
                    "raw_spec": "components:\n  schemas:\n    ChatGptDocumentSection:\n      properties:\n        body:\n          description: 150-300 word document section containing content in HTML format.\n          title: Document Section Body\n          type: string\n        did:\n          description: Unique document ID.\n          title: Document ID\n          type: string\n        title:\n          description: Heading title used for this document section.\n          title: Title of Document Section\n          type: string\n      required:\n        - did\n        - title\n        - body\n      title: ChatGptDocumentSection\n      type: object\n    CreateAudioFileRequest:\n      properties:\n        transcript:\n          description: Text that will be used to generate the audio file\n          title: Transcript\n          type: string\n      required:\n        - transcript\n      title: CreateAudioFileRequest\n      type: object\n    CreateMultiPageDocumentRequest:\n      properties:\n        prompt:\n          description: Prompt context for creating doc - will be shown later in document UI.\n          title: Prompt\n          type: string\n        title:\n          description: Title of the document.\n          title: Document Title\n          type: string\n      required:\n        - title\n        - prompt\n      title: CreateMultiPageDocumentRequest\n      type: object\n    CreateSpreadsheetRequest:\n      properties:\n        prompt:\n          description: Prompt context for creating spreadsheet - will be shown later in document UI.\n          title: Prompt\n          type: string\n        sheets:\n          description: List of sheets inside spreadsheet. Each sheet consists of a header row, followed by rows of data\n          items:\n            $ref: \"#/components/schemas/DocmakerSheet\"\n          title: Sheets\n          type: array\n        title:\n          default: Untitled\n          description: \"Mandatory: the title of the spreadsheet. Must be included.\"\n          title: Title\n          type: string\n      required:\n        - prompt\n        - sheets\n      title: CreateSpreadsheetRequest\n      type: object\n    DocmakerSheet:\n      properties:\n        content:\n          default: \"\"\n          description: Sheet data content in CSV format. Enclose all fields in double quotes.\n          title: Content\n          type: string\n      title: DocmakerSheet\n      type: object\n    HTTPValidationError:\n      properties:\n        detail:\n          items:\n            $ref: \"#/components/schemas/ValidationError\"\n          title: Detail\n          type: array\n      title: HTTPValidationError\n      type: object\n    Markdown2DocumentRequest:\n      properties:\n        formatted_markdown:\n          description: Formatted Markdown content.\n          title: Formatted Markdown\n          type: string\n        prompt:\n          description: Prompt used for creating doc.\n          title: Prompt\n          type: string\n        title:\n          default: Untitled\n          description: \"Mandatory: title of the document.\"\n          title: Title\n          type: string\n      required:\n        - prompt\n        - formatted_markdown\n      title: Markdown2DocumentRequest\n      type: object\n    Markdown2ResumeRequest:\n      properties:\n        prompt:\n          description: Prompt used to describe the doc creation request. IT IS NOT USED TO CREATE DOC, only to display in UI for\n            user to view later.\n          title: Prompt\n          type: string\n        resume_content:\n          default: \"\"\n          description: Resume content in Markdown format. Do NOT include any of the above information (name, email, phone,\n            location, website url) here; they should be directly placed via their respective fields. When using\n            acronyms, ensure to write out the full term as well. For example, instead of writing 'SEO', write 'Search\n            Engine Optimization (SEO)'.\n          title: Resume Content\n          type: string\n        resume_field_email:\n          description: \"Optional: Personal email to be placed directly into the resume/cv. If supplied, do NOT include it in the\n            formatted_markdown field.\"\n          title: Resume Field Email\n          type: string\n        resume_field_location:\n          description: \"Optional: Location to be placed directly into the resume/cv. If supplied, do NOT include it in the\n            formatted_markdown field.\"\n          title: Resume Field Location\n          type: string\n        resume_field_name:\n          default: \"\"\n          description: \"Mandatory: Personal name to be placed directly into the resume/cv. Do NOT include it in the\n            formatted_markdown field.\"\n          title: Resume Field Name\n          type: string\n        resume_field_phone:\n          description: \"Optional: Phone number to be placed directly into the resume/cv. If supplied, do NOT include it in the\n            formatted_markdown field.\"\n          title: Resume Field Phone\n          type: string\n        resume_field_website_url:\n          description: \"Optional: Website URL to be placed directly into the resume/cv. If supplied, do NOT include it in the\n            formatted_markdown field.\"\n          title: Resume Field Website Url\n          type: string\n        title:\n          default: Untitled\n          description: \"Mandatory: Title of the document.\"\n          title: Title\n          type: string\n      required:\n        - prompt\n      title: Markdown2ResumeRequest\n      type: object\n    PptxRequest:\n      properties:\n        intro_slide:\n          allOf:\n            - $ref: \"#/components/schemas/SimpleIntroSlide\"\n          description: The first slide in the deck - IT SHOULD ONLY HAVE A TITLE AND NO CONTENT\n          title: Intro Slide\n        prompt:\n          description: Prompt context for creating doc - will be shown later in document UI.\n          title: Prompt\n          type: string\n        slides:\n          description: \"List of slides following the intro slide. Each slide should only have 2 string params: `title` and\n            `content`. Content is a single string (DO NOT INPUT AS A LIST).\"\n          items:\n            $ref: \"#/components/schemas/SimpleSlideContent\"\n          title: Slides\n          type: array\n      required:\n        - prompt\n        - intro_slide\n        - slides\n      title: PptxRequest\n      type: object\n    ReadDocV2Request:\n      properties:\n        f1_http_url:\n          description: User will pass a HTTPS or HTTP url to a file so that the file contents can be read.\n          title: F1 Http Url\n          type: string\n        f2_query:\n          default: \"\"\n          description: User will pass a query string to fetch relevant sections from the contents. It will be used for\n            sentence-level similarity search on the document based on embeddings.\n          title: F2 Query\n          type: string\n        f3_selected_pages:\n          default: []\n          description: Filter document on these page numbers. Use empty list to get all pages.\n          items:\n            type: integer\n          title: F3 Selected Pages\n          type: array\n      required:\n        - f1_http_url\n      title: ReadDocV2Request\n      type: object\n    SimpleIntroSlide:\n      properties:\n        title:\n          description: The title of the slide. Must be included.\n          title: Title\n          type: string\n      required:\n        - title\n      title: SimpleIntroSlide\n      type: object\n    SimpleSlideContent:\n      properties:\n        content:\n          description: The string content for this slide. DO NOT INPUT AS A LIST. Must contain ALL the text that will go on the\n            slide. Use '\\n' characters for formatting.\n          title: Content\n          type: string\n        title:\n          description: The title of the slide. Must be included.\n          title: Title\n          type: string\n      required:\n        - title\n        - content\n      title: SimpleSlideContent\n      type: object\n    ValidationError:\n      properties:\n        loc:\n          items:\n            anyOf:\n              - type: string\n              - type: integer\n          title: Location\n          type: array\n        msg:\n          title: Message\n          type: string\n        type:\n          title: Error Type\n          type: string\n      required:\n        - loc\n        - msg\n        - type\n      title: ValidationError\n      type: object\ninfo:\n  description: A GPT that allows the user to create a document exportable as a PDF or DOCX file.\n  title: Doc Maker GPT\n  version: v1\nopenapi: 3.1.0\npaths:\n  /create_audio:\n    post:\n      operationId: create_audio\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateAudioFileRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Create an audio file that can be downloaded via URL\n  /create_pptx_directly_with_content:\n    post:\n      description: Create a new presentation by directly providing the content.\n      operationId: create_pptx_directly_with_content\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/PptxRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Create a new presentation directly with content\n  /create_resume:\n    post:\n      operationId: create_resume\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Markdown2ResumeRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Create Resume Endpoint\n  /create_spreadsheet:\n    post:\n      description: Create a new spreadsheet given data. Enclose all fields in double quotes.\n      operationId: create_spreadsheet\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateSpreadsheetRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Create a new spreadsheet\n  /multipage_add_subsection_to_document:\n    post:\n      description: Append a new document subsection for a multi-page document, with title and body. Default at least 150-300 words.\n      operationId: multipage_add_subsection_to_document\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ChatGptDocumentSection\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Append a new document subsection for a multi-page document.\n  /multipage_create_empty_document:\n    post:\n      description: Create a new empty multi-page document. Always follow up with function call\n        `multipage_add_subsection_to_document`.\n      operationId: multipage_create_empty_document\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/CreateMultiPageDocumentRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Create a new empty multi-page document\n  /read_url:\n    post:\n      description: \"Allows for reading the contents of an URL link, including PDF/DOC/DOCX/PPT/CSV/XLS/XLSX/HTML content,\n        Google Drive, Dropbox, OneDrive, aidocmaker.com docs. Always wrap image URLs from the response field\n        `z1_image_urls` in Markdown, where each image has a ## DESCRIPTION.\"\n      operationId: read_url\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/ReadDocV2Request\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Read the contents of an URL link\n  /simple_create_document:\n    post:\n      description: Create a simple document, with formatted Markdown content in the field `formatted_markdown`. Include prompt\n        text used in the field `prompt`.\n      operationId: simple_create_document\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/Markdown2DocumentRequest\"\n        required: true\n      responses:\n        \"200\":\n          content:\n            application/json:\n              schema: {}\n          description: Successful Response\n        \"422\":\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/HTTPValidationError\"\n          description: Validation Error\n      summary: Create a simple document\nservers:\n  - url: https://gpt.docs.aidocmaker.com\n",
                    "json_schema": null,
                    "auth": {
                      "type": "none"
                    },
                    "privacy_policy_url": "https://www.aidocmaker.com/privacy-policy"
                  }
                },
                {
                  "id": "gzm_cnf_nfIHTbFyDlEFxI9Kst6g7kYP~gzm_tool_8Lt60vGg3dgo8j1y2Th1UECh",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-kMKw5tFmB",
                "organization_id": "org-S6eCwFL4YpT1JA00esUW9Oze",
                "short_url": "g-kMKw5tFmB-convert-anything",
                "author": {
                  "user_id": "user-5p8mKZIxdEy3dO92djum4fxG",
                  "display_name": "Pietro Schirano",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": true
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Convert Anything",
                  "description": "The ultimate file converter for images, audio, video, documents and more. It handles individual or batch uploads, supports ZIPs, and provides a download link.",
                  "welcome_message": "Welcome to Converter! What file do you want to convert today?",
                  "prompt_starters": [
                    "Convert this PDF to JPG.",
                    "I need these files converted to MP4.",
                    "Can you turn this document into an Excel file?",
                    "Convert these images to PNG format."
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-Gpws0QDcR4iL5URQQoxxvRET?se=2123-10-19T06%3A07%3A50Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D8c64f203-9ea6-4c45-a339-d92f6545a2f7.png&sig=Zhlsp136YwCoXKLK%2BpCspdKokq%2BhQDrdimmAXvE4vME%3D",
                  "categories": [
                    "productivity"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-11T04:59:43.020494+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_J95GJUvXZgUlQbXCHtqsKIGt~gzm_tool_zmVvXNkSqukHJKtaDvRM91Sj",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-ucpsGCQHZ",
                "organization_id": "org-WPsHQDQ66FLAMHay82Jd9Z73",
                "short_url": "g-ucpsGCQHZ-professor-synapse",
                "author": {
                  "user_id": "user-ngA7hWpbYGfqG7YCsL4LqeXn",
                  "display_name": "Joseph Rosenbaum",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": true
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Professor Synapse",
                  "description": "🧙🏾‍♂️: I guide and facilitate goal achievement by summoning expert agents 🌟",
                  "welcome_message": "Hello",
                  "prompt_starters": [
                    "/start",
                    "/save",
                    "/ts"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-Nb2r9QRBusy0yBeZCKGxnSrI?se=2123-10-16T19%3A45%3A34Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3DSynaptic%2520Labs%2520Logo%2520Aperture%2520Friendly%2520%25281%2529.png&sig=8JkkOHiwLoon38iIsrJMM7gB9a5A/Xi5mooSM/cwVVw%3D",
                  "categories": [
                    "productivity"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T17:23:15.973778+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_OtYaYlJUthoDCjqGcjnOH8DX~gzm_tool_JmSXCIJCumHuDuqUHyIBTBnZ",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_OtYaYlJUthoDCjqGcjnOH8DX~gzm_tool_f2sHf2FgPguZPO3jTLs8vuPx",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_OtYaYlJUthoDCjqGcjnOH8DX~gzm_tool_8UYSgRKsHpeRqZ6WYQXfelW9",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [
                {
                  "id": "gzm_cnf_xxW5O5lBCpic1BZWOv8hvHxE~gzm_file_lkMN0NDr9dsIcN9ItGDk6scj",
                  "type": "",
                  "file_id": "",
                  "location": ""
                }
              ],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-8OcWVLenu",
                "organization_id": "org-QcaipU4kGJE3CFPu2j36emcg",
                "short_url": "g-8OcWVLenu-calendar-gpt",
                "author": {
                  "user_id": "user-72NoOm6aQ6mVTvEDG2XGr8Wg__163c8213-74a2-4b7e-b7c7-4dd86dbcd9be",
                  "display_name": "zapier.com",
                  "link_to": "https://zapier.com",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": "163c8213-74a2-4b7e-b7c7-4dd86dbcd9be",
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Calendar GPT",
                  "description": "I'm here to help you prepare for your day! Powered by Zapier's AI Actions. 🧡",
                  "welcome_message": "Hello",
                  "prompt_starters": [
                    "What's on my calendar today?",
                    "How's my day look tomorrow?",
                    "Help me do research for my next meeting.",
                    "How much free time do I have tomorrow?"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-Fr0eMOHgtMJueZ5JN22qaNoH?se=2123-10-12T15%3A32%3A13Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3DFrame%25204668.png&sig=5xmlNXn0cA2Fc0igzLsVO39ZpXiS6f34lmdAKEhD/y0%3D",
                  "categories": []
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T06:38:12.783960+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable",
                  "uses_function_calls"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_m0v3KmtxjGq9RihDP2Y7Q3YF~gzm_tool_LjT99otLY3OJLpLPxcVPForn",
                  "type": "plugins_prototype",
                  "settings": null,
                  "metadata": {
                    "action_id": "g-590c88c950b956b02f2022b13310573267ce871d",
                    "domain": "actions.zapier.com",
                    "raw_spec": {
                      "openapi": "3.0.2",
                      "info": {
                        "title": "Zapier AI Actions for GPT (Dynamic)",
                        "version": "1.0.0",
                        "description": "Equip GPTs with the ability to run thousands of actions via Zapier. (703dcca4c2e24c5ea5e2c717eba11029)",
                        "x-openai-verification-token": "703dcca4c2e24c5ea5e2c717eba11029"
                      },
                      "servers": [
                        {
                          "url": "https://actions.zapier.com"
                        }
                      ],
                      "paths": {
                        "/gpt/api/v1/available/": {
                          "get": {
                            "operationId": "list_available_actions",
                            "summary": "List Available Actions",
                            "parameters": [
                              {
                                "in": "query",
                                "name": "apps",
                                "schema": {
                                  "title": "Apps",
                                  "description": "Filter actions to a comma separated list of Zapier app names.",
                                  "type": "string"
                                },
                                "required": false,
                                "description": "Filter actions to a comma separated list of Zapier app names."
                              },
                              {
                                "in": "query",
                                "name": "exact_search",
                                "schema": {
                                  "title": "Exact Search",
                                  "description": "Filter actions to exact search string of the description (case insensitive).",
                                  "type": "string"
                                },
                                "required": false,
                                "description": "Filter actions to exact search string of the description (case insensitive)."
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "OK",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/AvailableActionResponseSchema"
                                    }
                                  }
                                }
                              }
                            },
                            "description": "List all the currently available actions for the user. If you try to run an action and receive an error\n that it does not exist, try refreshing this list first.",
                            "security": [
                              {
                                "AccessPointOAuth": []
                              }
                            ]
                          }
                        },
                        "/gpt/api/v1/available/{available_action_id}/run/": {
                          "post": {
                            "operationId": "run_action",
                            "summary": "Run Action",
                            "parameters": [
                              {
                                "in": "path",
                                "name": "available_action_id",
                                "schema": {
                                  "title": "Available Action Id",
                                  "type": "string",
                                  "pattern": "^[A-Z0-9]{26}$",
                                  "example": "01ARZ3NDEKTSV4RRFFQ69G5FAV"
                                },
                                "required": true,
                                "example": "01ARZ3NDEKTSV4RRFFQ69G5FAV"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "OK",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/RunResponse"
                                    }
                                  }
                                }
                              },
                              "400": {
                                "description": "Bad Request",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/ErrorResponse"
                                    }
                                  }
                                }
                              }
                            },
                            "description": "Run an available action using plain english instructions. You may also include associated params from list_available_actions in the body of the request.",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/RunRequest"
                                  }
                                }
                              },
                              "required": true
                            },
                            "security": [
                              {
                                "AccessPointOAuth": []
                              }
                            ]
                          }
                        }
                      },
                      "components": {
                        "schemas": {
                          "AvailableActionSchema": {
                            "title": "AvailableActionSchema",
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Id",
                                "description": "The unique ID of the available action.",
                                "type": "string"
                              },
                              "operation_id": {
                                "title": "Operation Id",
                                "description": "The operation ID of the available action.",
                                "type": "string"
                              },
                              "description": {
                                "title": "Description",
                                "description": "Description of the action.",
                                "type": "string"
                              },
                              "params": {
                                "title": "Params",
                                "description": "Available hint fields for the action.",
                                "type": "object"
                              }
                            },
                            "required": [
                              "id",
                              "operation_id",
                              "description",
                              "params"
                            ]
                          },
                          "AvailableActionResponseSchema": {
                            "title": "AvailableActionResponseSchema",
                            "type": "object",
                            "properties": {
                              "results": {
                                "title": "Results",
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/AvailableActionSchema"
                                }
                              },
                              "configuration_link": {
                                "title": "Configuration Link",
                                "description": "Guide the user to setup new actions with the configuration_link. You can optionally add ?setup_action=... onto configuration_link to set up a specific Zapier app and action For example: https://actions.zapier.com/gpt/start?setup_action=gmail find email",
                                "type": "string"
                              }
                            },
                            "required": [
                              "results",
                              "configuration_link"
                            ]
                          },
                          "RunResponse": {
                            "title": "RunResponse",
                            "description": "This is a summary of the results given the action that was run.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Id",
                                "description": "The id of the run log.",
                                "type": "string"
                              },
                              "action_used": {
                                "title": "Action Used",
                                "description": "The name of the action that was run.",
                                "type": "string"
                              },
                              "input_params": {
                                "title": "Input Params",
                                "description": "The params we used / will use to run the action.",
                                "type": "object"
                              },
                              "review_url": {
                                "title": "Review Url",
                                "description": "The URL to run the action or review the AI choices the AI made for input_params given instructions.",
                                "type": "string"
                              },
                              "result": {
                                "title": "Result",
                                "description": "A trimmed down result of the first item of the full results. Ideal for humans and language models!",
                                "type": "object"
                              },
                              "additional_results": {
                                "title": "Additional Results",
                                "description": "The rest of the full results. Always returns an array of objects",
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "result_field_labels": {
                                "title": "Result Field Labels",
                                "description": "Human readable labels for some of the keys in the result.",
                                "type": "object"
                              },
                              "status": {
                                "title": "Status",
                                "description": "The status of the action run.",
                                "default": "success",
                                "enum": [
                                  "success",
                                  "error",
                                  "empty",
                                  "preview"
                                ],
                                "type": "string"
                              },
                              "error": {
                                "title": "Error",
                                "description": "The error message if the action run failed.",
                                "type": "string"
                              },
                              "assistant_hint": {
                                "title": "Assistant Hint",
                                "description": "A hint for the assistant on what to do next.",
                                "type": "string"
                              },
                              "full_results": {
                                "title": "Full Results",
                                "description": "The full results, not summarized, if available. Always returns an array of objects.",
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              }
                            },
                            "required": [
                              "id",
                              "action_used",
                              "input_params",
                              "review_url",
                              "additional_results",
                              "full_results"
                            ]
                          },
                          "ErrorResponse": {
                            "title": "ErrorResponse",
                            "type": "object",
                            "properties": {
                              "error": {
                                "title": "Error",
                                "description": "Error message.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "error"
                            ]
                          },
                          "RunRequest": {
                            "title": "RunRequest",
                            "description": "Try and stuff as much relevant information into the instructions as possible. Set any necessary AvailableActionSchema params. This type of action allows optionally setting preview_only if the user wants to preview before running.",
                            "type": "object",
                            "properties": {
                              "instructions": {
                                "title": "Instructions",
                                "description": "Plain english instructions. Provide as much detail as possible, even if other fields are present.",
                                "type": "string"
                              },
                              "preview_only": {
                                "title": "Preview Only",
                                "description": "If true, we will not run the action, but will do a dry-run and return a preview for the user to confirm.",
                                "default": false,
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "instructions"
                            ]
                          }
                        },
                        "securitySchemes": {
                          "AccessPointOAuth": {
                            "type": "oauth2",
                            "flows": {
                              "authorizationCode": {
                                "authorizationUrl": "/oauth/authorize/",
                                "tokenUrl": "/oauth/token/",
                                "scopes": {
                                  "nla:exposed_actions:execute": "Run AI Actions"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "json_schema": null,
                    "auth": {
                      "type": "oauth",
                      "instructions": "",
                      "client_url": "https://actions.zapier.com/oauth/authorize/",
                      "scope": "nla:exposed_actions:execute",
                      "authorization_url": "https://actions.zapier.com/oauth/token/",
                      "authorization_content_type": "application/x-www-form-urlencoded",
                      "verification_tokens": {},
                      "pkce_required": false,
                      "token_exchange_method": null
                    },
                    "privacy_policy_url": "https://zapier.com/legal/ai-supplementary-terms"
                  }
                },
                {
                  "id": "gzm_cnf_m0v3KmtxjGq9RihDP2Y7Q3YF~gzm_tool_OTjHIRJBMxEJ9TMkwiuduBiK",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          }
        ],
        "cursor": "6"
      }
    },
    {
      "info": {
        "id": "research",
        "title": "Research & Analysis",
        "description": "Find, evaluate, interpret, and visualize information",
        "display_type": "ranked",
        "display_group": "Research & Analysis",
        "locale": "en"
      },
      "list": {
        "items": [
          {
            "resource": {
              "gizmo": {
                "id": "g-bo0FiWLY7",
                "organization_id": "org-HG3GDECPJ4BgdPO5epfBZfIU",
                "short_url": "g-bo0FiWLY7-consensus",
                "author": {
                  "user_id": "user-PrioK3AN9UNCA9WGNw14PE7j",
                  "display_name": "Consensus",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": false
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Consensus",
                  "description": "Your AI Research Assistant. Search 200M academic papers from Consensus, get science-based answers, and draft content with accurate citations.",
                  "welcome_message": "Hello",
                  "prompt_starters": [
                    "Does fish oil improve mood? Use human RCTs from top journals",
                    "Write the introduction of a paper on the effects of climate change on GDP",
                    "Can intergroup contact reduce prejudice?",
                    "Draft a blog on science-backed benefits of mindfulness"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-uUsDBz1ABhyOXkRiWhe5xohZ?se=2123-12-15T23%3A21%3A21Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3D2092%2520%25282%2529.png&sig=0CNjR0V7ipTUL/6R3rKszqP6mB25NOc2WjtIuDEwhrg%3D",
                  "categories": [
                    "research"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T23:01:15.531015+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable",
                  "uses_function_calls"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_hZJhdiwoe0nr7QRlcC3hLwFS~gzm_tool_kEim1dP26PC8oVudWVp4bSVY",
                  "type": "plugins_prototype",
                  "settings": null,
                  "metadata": {
                    "action_id": "g-f1286ecb04957580332cda9bf386b57ef1b2ed6f",
                    "domain": "chat.consensus.app",
                    "raw_spec": {
                      "info": {
                        "title": "Consensus Chat GPT Plugin",
                        "version": "1.0"
                      },
                      "servers": [
                        {
                          "url": "https://chat.consensus.app/"
                        }
                      ],
                      "openapi": "3.1.0",
                      "paths": {
                        "/quick_search": {
                          "get": {
                            "description": "An endpoint that can be called to ask a question of research papers",
                            "operationId": "search_papers",
                            "parameters": [
                              {
                                "description": "A query to find relevant research papers. To search effectively, ask research questions related to scientific topics, such as 'the impact of climate change on GDP' or 'the benefits of mindfulness meditation'. Ask broad yes/no questions, inquire about the relationship between concepts, or ask about the effects or impact of a concept. Use technical language where possible to maximize the relevance to academic text. For example, if the user asks 'Why does being cold make you sick?', search 'Does cold temperature exposure increase the risk of illness?'. Remove uneccessary commands like 'latest research' and 'find papers' and focus only on words likely to match with the text of research papers.",
                                "in": "query",
                                "name": "query",
                                "required": true,
                                "schema": {
                                  "description": "A query to find relevant research papers. To search effectively, ask research questions related to scientific topics, such as 'the impact of climate change on GDP' or 'the benefits of mindfulness meditation'. Ask broad yes/no questions, inquire about the relationship between concepts, or ask about the effects or impact of a concept. Use technical language where possible to maximize the relevance to academic text. For example, if the user asks 'Why does being cold make you sick?', search 'Does cold temperature exposure increase the risk of illness?'. Remove uneccessary commands like 'latest research' and 'find papers' and focus only on words likely to match with the text of research papers.",
                                  "title": "Query",
                                  "type": "string"
                                }
                              },
                              {
                                "description": "The earliest publication year to consider in the search, filtering out papers published before this year. You must only use this filter when the user asks for information after a certain date. An example of when to use this filter would be if a user asks 'show me papers about the covid vaccine published after 2020' or 'papers about immigration reform published between 2000 and 2015'. If you use this filter without the user specifically including a date or 'recent research', you will be penalized.",
                                "in": "query",
                                "name": "year_min",
                                "required": false,
                                "schema": {
                                  "description": "The earliest publication year to consider in the search, filtering out papers published before this year. You must only use this filter when the user asks for information after a certain date. An example of when to use this filter would be if a user asks 'show me papers about the covid vaccine published after 2020' or 'papers about immigration reform published between 2000 and 2015'. If you use this filter without the user specifically including a date or 'recent research', you will be penalized.",
                                  "title": "Year Min",
                                  "type": "integer"
                                }
                              },
                              {
                                "description": "The latest publication year to consider in the search, filtering out papers published after this year. You must only use this filter when the user asks for information before a certain date. An example of when to use this filter would be if a user asks 'show me papers about the covid vaccine published before 2023' or 'papers about immigration reform published between 2000 and 2015'. Only use this filter when a specific year restriction is requested by the user",
                                "in": "query",
                                "name": "year_max",
                                "required": false,
                                "schema": {
                                  "description": "The latest publication year to consider in the search, filtering out papers published after this year. You must only use this filter when the user asks for information before a certain date. An example of when to use this filter would be if a user asks 'show me papers about the covid vaccine published before 2023' or 'papers about immigration reform published between 2000 and 2015'. Only use this filter when a specific year restriction is requested by the user",
                                  "title": "Year Max",
                                  "type": "integer"
                                }
                              },
                              {
                                "description": "List of study types to include in the search, such as RCT, Meta-Analysis, Systematic Review, Observational Study, Case Report etc. You must only use this filter when the user asks for information from papers with certain study designs. Examples of when to use this filter would be if a user asks 'does zinc help with depression? show me responses from RCTs' or 'I need to find a systematic review on the effects of spanking on children'. Only use this filter when a specific study type is asked about",
                                "in": "query",
                                "name": "study_types",
                                "required": false,
                                "schema": {
                                  "default": [],
                                  "description": "List of study types to include in the search, such as RCT, Meta-Analysis, Systematic Review, Observational Study, Case Report etc. You must only use this filter when the user asks for information from papers with certain study designs. Examples of when to use this filter would be if a user asks 'does zinc help with depression? show me responses from RCTs' or 'I need to find a systematic review on the effects of spanking on children'. Only use this filter when a specific study type is asked about",
                                  "items": {
                                    "$ref": "#/components/schemas/StudyTypeKeywordEnum"
                                  },
                                  "type": "array"
                                }
                              },
                              {
                                "description": "Set to true to limit the search to studies involving human subjects. You must only use this filter if the users asks for information from human studies. An example of when to use this filter would be if a user asks 'what are the effects of magnesium on sleep? only show me studies conducted on humans'. Only use this filter when it is specifically asked for by the user",
                                "in": "query",
                                "name": "human",
                                "required": false,
                                "schema": {
                                  "description": "Set to true to limit the search to studies involving human subjects. You must only use this filter if the users asks for information from human studies. An example of when to use this filter would be if a user asks 'what are the effects of magnesium on sleep? only show me studies conducted on humans'. Only use this filter when it is specifically asked for by the user",
                                  "title": "Human",
                                  "type": "boolean"
                                }
                              },
                              {
                                "description": "The minimum sample size of the studies to include in the search, targeting studies with a larger participant base. You must only use this filter when the user asks for studies with a large sample size or over a certain number of participants. An example of when to use this filter would be if a user asks 'what are the effects of magnesium on sleep? only show me studies with large sample sizes' in this case set the filter to ~100. Only use this filter when it is specifically asked for by the user",
                                "in": "query",
                                "name": "sample_size_min",
                                "required": false,
                                "schema": {
                                  "description": "The minimum sample size of the studies to include in the search, targeting studies with a larger participant base. You must only use this filter when the user asks for studies with a large sample size or over a certain number of participants. An example of when to use this filter would be if a user asks 'what are the effects of magnesium on sleep? only show me studies with large sample sizes' in this case set the filter to ~100. Only use this filter when it is specifically asked for by the user",
                                  "title": "Sample Size Min",
                                  "type": "integer"
                                }
                              },
                              {
                                "description": "The maximum SJR quartile (1-4) of the journals to include. This helps set a threshold for journal prestige, where 1 is the highest quartile. You must only use this filter when the user asks for information from higher-ranked journals. An example of when to use this filter would be if a user asks 'Produce me a rrl on interest rates in the economy only from the best journals' in this case set the fiter to 1. Only use this filter when it is specficially asked for by the user",
                                "in": "query",
                                "name": "sjr_max",
                                "required": false,
                                "schema": {
                                  "description": "The maximum SJR quartile (1-4) of the journals to include. This helps set a threshold for journal prestige, where 1 is the highest quartile. You must only use this filter when the user asks for information from higher-ranked journals. An example of when to use this filter would be if a user asks 'Produce me a rrl on interest rates in the economy only from the best journals' in this case set the fiter to 1. Only use this filter when it is specficially asked for by the user",
                                  "title": "Sjr Max",
                                  "type": "integer"
                                }
                              }
                            ],
                            "responses": {
                              "200": {
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/QuickSearchResponse"
                                    }
                                  }
                                },
                                "description": "Successful Response"
                              },
                              "422": {
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                },
                                "description": "Validation Error"
                              }
                            },
                            "security": [
                              {
                                "HTTPBearer": []
                              }
                            ],
                            "summary": "Returns research papers related to a question or query. Each result contains, title, abstract, authors, year, and journal.",
                            "tags": [
                              "search"
                            ]
                          }
                        }
                      },
                      "components": {
                        "schemas": {
                          "HTTPValidationError": {
                            "properties": {
                              "detail": {
                                "items": {
                                  "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail",
                                "type": "array"
                              }
                            },
                            "title": "HTTPValidationError",
                            "type": "object"
                          },
                          "QuickSearchResponse": {
                            "properties": {
                              "items": {
                                "description": "All answers to the question.",
                                "items": {
                                  "$ref": "#/components/schemas/QuickSearchResponseItem"
                                },
                                "title": "Items",
                                "type": "array"
                              }
                            },
                            "required": [
                              "items"
                            ],
                            "title": "QuickSearchResponse",
                            "type": "object"
                          },
                          "QuickSearchResponseItem": {
                            "properties": {
                              "abstract": {
                                "description": "The abstract of the paper.",
                                "title": "Abstract",
                                "type": "string"
                              },
                              "consensus_paper_details_url": {
                                "description": "A URL with more details on the paper.",
                                "title": "Consensus Paper Details Url",
                                "type": "string"
                              },
                              "doi": {
                                "description": "Digital Object Identifier, a unique alphanumeric string assigned to a document for permanent access.",
                                "title": "Doi",
                                "type": "string"
                              },
                              "pages": {
                                "description": "The page range of the paper within the journal volume.",
                                "title": "Pages",
                                "type": "string"
                              },
                              "paper_authors": {
                                "description": "A list of authors of the paper.",
                                "items": {
                                  "type": "string"
                                },
                                "title": "Paper Authors",
                                "type": "array"
                              },
                              "paper_publish_year": {
                                "description": "The year the paper was published.",
                                "title": "Paper Publish Year",
                                "type": "integer"
                              },
                              "paper_title": {
                                "description": "Title of the paper where the answer was found",
                                "title": "Paper Title",
                                "type": "string"
                              },
                              "publication_journal_name": {
                                "description": "The journal the paper was published in.",
                                "title": "Publication Journal Name",
                                "type": "string"
                              },
                              "search_result_number": {
                                "description": "The rank of the paper in the search results.",
                                "title": "Search Result Number",
                                "type": "integer"
                              },
                              "volume": {
                                "description": "The volume of the journal in which the paper appears.",
                                "title": "Volume",
                                "type": "string"
                              }
                            },
                            "required": [
                              "paper_title",
                              "abstract",
                              "paper_authors",
                              "paper_publish_year",
                              "publication_journal_name",
                              "consensus_paper_details_url",
                              "doi",
                              "volume",
                              "pages",
                              "search_result_number"
                            ],
                            "title": "QuickSearchResponseItem",
                            "type": "object"
                          },
                          "StudyTypeKeywordEnum": {
                            "description": "All possible study types strings saved to search index documents.",
                            "type": "string",
                            "enum": [
                              "literature review",
                              "systematic review",
                              "case report",
                              "meta-analysis",
                              "rct",
                              "non-rct in vitro",
                              "non-rct experimental",
                              "non-rct other",
                              "non-rct observational study",
                              "animal"
                            ],
                            "title": "StudyTypeKeywordEnum"
                          },
                          "ValidationError": {
                            "properties": {
                              "loc": {
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "integer"
                                    }
                                  ]
                                },
                                "title": "Location",
                                "type": "array"
                              },
                              "msg": {
                                "title": "Message",
                                "type": "string"
                              },
                              "type": {
                                "title": "Error Type",
                                "type": "string"
                              }
                            },
                            "required": [
                              "loc",
                              "msg",
                              "type"
                            ],
                            "title": "ValidationError",
                            "type": "object"
                          }
                        },
                        "securitySchemes": {
                          "HTTPBearer": {
                            "scheme": "bearer",
                            "type": "http"
                          }
                        }
                      }
                    },
                    "json_schema": null,
                    "auth": {
                      "type": "service_http",
                      "instructions": "",
                      "authorization_type": "bearer",
                      "verification_tokens": {},
                      "custom_auth_header": ""
                    },
                    "privacy_policy_url": "https://consensus.app/home/privacy-policy/"
                  }
                },
                {
                  "id": "gzm_cnf_yTPzzLFXgSBGs9PL6WNTPRm1~gzm_tool_ii3n7IaRU6HBMJsKQQfNUuvb",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_yTPzzLFXgSBGs9PL6WNTPRm1~gzm_tool_5zC6dkAtBSmNXBDUPr2MBYAk",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_yTPzzLFXgSBGs9PL6WNTPRm1~gzm_tool_ImQDvlKmvFKBMC4UEzvZtJXf",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-UfFxTDMxq",
                "organization_id": "org-y7Xz7fGf8F002T5yQXC0uVv3",
                "short_url": "g-UfFxTDMxq-askyourpdf-research-assistant",
                "author": {
                  "user_id": "user-vh4D140gNi8OulBaocuxSksZ",
                  "display_name": "askyourpdf.com",
                  "link_to": "https://askyourpdf.com",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "AskYourPDF Research Assistant",
                  "description": "Enhance your research with the AskYourPDF Research Assistant.  Chat with multiple files, ChatPDF,  generate articles with citations,  analyse and generate references for  papers, create and interact with a knowledge base of your files and much more.",
                  "welcome_message": "Hello",
                  "prompt_starters": [
                    "How can I use this GPT?",
                    "List the documents on my account",
                    "What are the latest machine learning papers on arxiv?",
                    "How can I link my Zotero account?",
                    "Can you help me cite my essay?",
                    "How can you help me with my literature review write up?",
                    "How can I leverage this GPT to find academic papers?",
                    "Can you help me summarize a webpage?",
                    "Write me an essay on the effects of Large Language Models such as ChatGPT on education"
                  ],
                  "profile_picture_url": "https://github.com/AskYourPdf/ask-plugin/blob/main/aypp_logo.png?raw=true",
                  "categories": [
                    "Other"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T17:33:18.685371+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable",
                  "uses_function_calls"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_PUvawWcIx1mx3a5EYZgIuEi9~gzm_tool_SAqayUhOZDDfN5s15ERgLxwr",
                  "type": "plugins_prototype",
                  "settings": null,
                  "metadata": {
                    "action_id": "g-b9f9edbe71020a9438aaffd657d942ab4c46513e",
                    "domain": "pro.askyourpdf.com",
                    "raw_spec": {
                      "openapi": "3.0.2",
                      "info": {
                        "title": "FastAPI",
                        "version": "0.1.0"
                      },
                      "paths": {
                        "/api/usage": {
                          "get": {
                            "summary": "Get Daily Usage",
                            "operationId": "get_daily_usage_api_usage_get",
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/DailyUsageAnalytics"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        },
                        "/api/upload": {
                          "post": {
                            "summary": "Upload Pdf",
                            "description": "Upload a PDF file and save it to the database.\n\nArgs:\n    user: The user who is uploading the file.\n    file: The PDF file to upload.\n\nReturns:\n    dict: The document ID of the uploaded file.",
                            "operationId": "upload_pdf_api_upload_post",
                            "requestBody": {
                              "content": {
                                "multipart/form-data": {
                                  "schema": {
                                    "$ref": "#/components/schemas/Body_upload_pdf_api_upload_post"
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/BaseFileResponse"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ],
                            "x-openai-isConsequential": false
                          }
                        },
                        "/api/download_pdf": {
                          "post": {
                            "summary": "Download Pdf",
                            "description": "Download a PDF file from a URL and save it to the vector database.",
                            "operationId": "download_pdf_api_download_pdf_post",
                            "parameters": [
                              {
                                "required": true,
                                "schema": {
                                  "title": "Url",
                                  "type": "string"
                                },
                                "name": "url",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/BaseFileResponse"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        },
                        "/query": {
                          "post": {
                            "summary": "Perform Query on Document or Knowledge base using doc_id given",
                            "description": "Perform a query on a document.",
                            "operationId": "perform_query_query_post",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/InputData"
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/ResponseModel"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ],
                            "x-openai-isConsequential": false
                          }
                        },
                        "/references": {
                          "post": {
                            "summary": "Get References",
                            "description": "Retrieves a list of references that match the specified criteria.\n\n- **limit**: The maximum number of references to return.\n- **keyword_combinations**: List of keyword combinations to search for.",
                            "operationId": "get_references_references_post",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/SourceRetrievalRequest"
                                  }
                                }
                              },
                              "required": true
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ],
                            "x-openai-isConsequential": false,
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/SourcedModel"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/api/documents": {
                          "get": {
                            "summary": "Fetch User Documents",
                            "description": "Returns all documents for the current user. Request maximum 10 documents per page.",
                            "operationId": "fetch_user_documents_api_documents_get",
                            "parameters": [
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page",
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 1
                                },
                                "name": "page",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Size",
                                  "maximum": 10,
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 10
                                },
                                "name": "page_size",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/UserDocumentsMetaSerializer"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ],
                            "x-openai-isConsequential": false
                          }
                        },
                        "/api/search": {
                          "get": {
                            "tags": [
                              "document management"
                            ],
                            "summary": "Search",
                            "description": "Search for documents.\n\nArgs:\n    user: The user who is searching.\n    query: The search string to use for query.\n\nReturns:\n    dict: A list of documents.",
                            "operationId": "search_api_search_get",
                            "parameters": [
                              {
                                "required": true,
                                "schema": {
                                  "title": "Query",
                                  "type": "string"
                                },
                                "name": "query",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "title": "Response Search Api Search Get",
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/UserDocumentMeta"
                                      }
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        },
                        "/api/knowledge": {
                          "get": {
                            "tags": [
                              "knowledge base"
                            ],
                            "summary": "Get Knowledge Bases",
                            "description": "Get knowledge bases\n\nArgs:\n    user: The user making the request.\n    page: The page number.\n    page_size: The number of items per page.\n\nReturns:\n    PaginatedKnowledgeBase: The response containing the updated knowledge base.",
                            "operationId": "get_knowledge_bases_api_knowledge_get",
                            "parameters": [
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page",
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 1
                                },
                                "name": "page",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Size",
                                  "maximum": 100,
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 10
                                },
                                "name": "page_size",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/PaginatedKnowledgeBase"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ],
                            "x-openai-isConsequential": false
                          },
                          "post": {
                            "tags": [
                              "knowledge base"
                            ],
                            "summary": "Create Knowledge Base",
                            "description": "Create a knowledge base from a list of document IDs.\n\nArgs:\n    knowledge_base: The knowledge base to create.\n    user: The user making the request.\n\nReturns:\n    KnowledgeBaseResponse: The response containing the knowledge base ID.",
                            "operationId": "create_knowledge_base_api_knowledge_post",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/KnowledgeBaseRequest"
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "201": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/KnowledgeBaseResponse"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ],
                            "x-openai-isConsequential": false
                          }
                        },
                        "/api/knowledge/{knowledge_base_id}": {
                          "get": {
                            "tags": [
                              "knowledge base"
                            ],
                            "summary": "Get Knowledge Base",
                            "description": "Get knowledge base\n\nArgs:\n    knowledge_base_id: The ID of the knowledge base to retrieve.\n    user: The user making the request.\n\n",
                            "operationId": "get_knowledge_base_api_knowledge__knowledge_base_id__get",
                            "parameters": [
                              {
                                "required": true,
                                "schema": {
                                  "title": "Knowledge Base Id",
                                  "type": "string"
                                },
                                "name": "knowledge_base_id",
                                "in": "path"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/KnowledgeDetailedResponse"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ],
                            "x-openai-isConsequential": false
                          },
                          "put": {
                            "tags": [
                              "knowledge base"
                            ],
                            "summary": "Update Knowledge Base",
                            "description": "Update a knowledge base from a list of document IDs.\n\nArgs:\n    knowledge_base_id: The ID of the knowledge base to update.\n    knowledge_base: The items to update in the knowledge base.\n.",
                            "operationId": "update_knowledge_base_api_knowledge__knowledge_base_id__put",
                            "parameters": [
                              {
                                "required": true,
                                "schema": {
                                  "title": "Knowledge Base Id",
                                  "type": "string"
                                },
                                "name": "knowledge_base_id",
                                "in": "path"
                              }
                            ],
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/KnowledgeBaseUpdate"
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/KnowledgeDetailedResponse"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ],
                            "x-openai-isConsequential": false
                          },
                          "delete": {
                            "tags": [
                              "knowledge base"
                            ],
                            "summary": "Delete Knowledge Base",
                            "description": "Delete knowledge base\n\nArgs:\n    knowledge_base_id: The ID of the knowledge base to delete.\n    user: The user making the request.\n\nReturns:\n    dict: The response containing a success message",
                            "operationId": "delete_knowledge_base_api_knowledge__knowledge_base_id__delete",
                            "parameters": [
                              {
                                "required": true,
                                "schema": {
                                  "title": "Knowledge Base Id",
                                  "type": "string"
                                },
                                "name": "knowledge_base_id",
                                "in": "path"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {}
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ],
                            "x-openai-isConsequential": false
                          }
                        },
                        "/api/search/knowledge": {
                          "get": {
                            "tags": [
                              "knowledge base"
                            ],
                            "summary": "Search Knowledge Bases",
                            "description": "Search knowledge bases\n\nArgs:\n    query: The search query\n    user: The user making the request.\n\nReturns:\n    PaginatedKnowledgeBase: The response containing the updated knowledge base.",
                            "operationId": "search_knowledge_bases_api_search_knowledge_get",
                            "parameters": [
                              {
                                "required": true,
                                "schema": {
                                  "title": "Query",
                                  "type": "string"
                                },
                                "name": "query",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "title": "Response Search Knowledge Bases Api Search Knowledge Get",
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/KnowledgeDetailedResponse"
                                      }
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        },
                        "/latest_papers/": {
                          "get": {
                            "tags": [
                              "paper finder"
                            ],
                            "summary": "Get Latest Papers",
                            "operationId": "get_latest_papers_latest_papers__get",
                            "parameters": [
                              {
                                "name": "category",
                                "in": "query",
                                "required": false,
                                "schema": {
                                  "type": "string",
                                  "maxLength": 50,
                                  "default": "cs.CV",
                                  "title": "Category"
                                }
                              },
                              {
                                "name": "limit",
                                "in": "query",
                                "required": false,
                                "schema": {
                                  "type": "integer",
                                  "exclusiveMinimum": 0,
                                  "default": 5,
                                  "title": "Limit"
                                }
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {}
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/api/zotero/documents": {
                          "get": {
                            "tags": [
                              "document sources"
                            ],
                            "summary": "Get Zotero Documents",
                            "description": "Get all users documents from Zotero.\n\nArgs:\n    page_size: The number of documents to return.\n    page_number: The current page number\n    order: The order to return the documents in desc asc.\n    user: The user making the request.\n\nReturns:\n    List of documents in the user's zotero account.",
                            "operationId": "get_zotero_documents_api_zotero_documents_get",
                            "parameters": [
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Size",
                                  "maximum": 100,
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 100
                                },
                                "name": "page_size",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Number",
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 1
                                },
                                "name": "page_number",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Order",
                                  "type": "string",
                                  "default": "desc"
                                },
                                "name": "order",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/Items"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        },
                        "/api/zotero/search": {
                          "get": {
                            "tags": [
                              "document sources"
                            ],
                            "summary": "Get Zotero Documents",
                            "description": "Get all users documents from Zotero.\n\nArgs:\n    query : query.\n    page_size: number of documents to return.\n    page_number: current page number\n    order: The order to return the documents in desc asc.\n    user: The user making the request.\n\nReturns:\n    List of docs in the user's zotero account.",
                            "operationId": "get_zotero_documents_api_zotero_search_get",
                            "parameters": [
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Size",
                                  "maximum": 100,
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 100
                                },
                                "name": "page_size",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Number",
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 1
                                },
                                "name": "page_number",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Order",
                                  "type": "string",
                                  "default": "desc"
                                },
                                "name": "order",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Query",
                                  "type": "string"
                                },
                                "name": "query",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/Items"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        },
                        "/api/zotero/collections": {
                          "get": {
                            "tags": [
                              "document sources"
                            ],
                            "summary": "Get Zotero Collections",
                            "description": "Get all users collections from Zotero.\n\nArgs:\n    page_size:  number of collections to return.\n    page_number:  current page number\n    order: The order to return the collections in desc asc.\n    user: The user making the request.\n\nReturns:\n    List of collections in the user's zotero account.",
                            "operationId": "get_zotero_collections_api_zotero_collections_get",
                            "parameters": [
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Size",
                                  "maximum": 100,
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 100
                                },
                                "name": "page_size",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Number",
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 1
                                },
                                "name": "page_number",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Order",
                                  "type": "string",
                                  "default": "desc"
                                },
                                "name": "order",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/Collections"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        },
                        "/api/zotero/collections/search": {
                          "get": {
                            "tags": [
                              "document sources"
                            ],
                            "summary": "Search Zotero Collections",
                            "description": "Get all users collections from Zotero.\n\nArgs:\n    page_size:  number of collections.\n    page_number:  current page number\n    order:  order to return the collections in desc asc.\n    query : search query.\n    user:  user making the request.\n\nReturns:\n    List of collections in the user's account.",
                            "operationId": "search_zotero_collections_api_zotero_collections_search_get",
                            "parameters": [
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Size",
                                  "maximum": 100,
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 100
                                },
                                "name": "page_size",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Number",
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 1
                                },
                                "name": "page_number",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Order",
                                  "type": "string",
                                  "default": "desc"
                                },
                                "name": "order",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Query",
                                  "type": "string"
                                },
                                "name": "query",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/Collections"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        },
                        "/api/zotero/collections/{collection_id}/documents": {
                          "get": {
                            "tags": [
                              "document sources"
                            ],
                            "summary": "Get Zotero Documents",
                            "description": "Get all users collections from Zotero.\n\nArgs:\n    collection_id: collection ID.\n    page_size:  number of collections to return.\n    page_number:  current page number\n    order: The order to return (desc asc).\n    user:  user making  request.\n\n\nReturns:\n    List of collections.",
                            "operationId": "get_zotero_documents_api_zotero_collections__collection_id__documents_get",
                            "parameters": [
                              {
                                "required": true,
                                "schema": {
                                  "title": "Collection Id",
                                  "type": "string"
                                },
                                "name": "collection_id",
                                "in": "path"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Size",
                                  "maximum": 100,
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 100
                                },
                                "name": "page_size",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Page Number",
                                  "minimum": 1,
                                  "type": "integer",
                                  "default": 1
                                },
                                "name": "page_number",
                                "in": "query"
                              },
                              {
                                "required": false,
                                "schema": {
                                  "title": "Order",
                                  "type": "string",
                                  "default": "desc"
                                },
                                "name": "order",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/Items"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        },
                        "/api/zotero/download": {
                          "get": {
                            "tags": [
                              "document sources"
                            ],
                            "summary": "Download Zotero Document",
                            "description": "Download a document from Zotero and save it to the database.\n\nArgs:\n    user: The user who is uploading the file.\n    link: The link to download the file from.\n    file_name: The name of the file.\n\nReturns:\n    dict: The document ID of the uploaded file.",
                            "operationId": "download_zotero_document_api_zotero_download_get",
                            "parameters": [
                              {
                                "required": true,
                                "schema": {
                                  "title": "Link",
                                  "type": "string"
                                },
                                "name": "link",
                                "in": "query"
                              },
                              {
                                "required": true,
                                "schema": {
                                  "title": "File Name",
                                  "type": "string"
                                },
                                "name": "file_name",
                                "in": "query"
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/DocumentUploadResponse"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        },
                        "/api/zotero/upload": {
                          "post": {
                            "tags": [
                              "document sources"
                            ],
                            "summary": "Upload Pdf",
                            "description": "Accepts the blob of a pdf file and returns a document ID.\n\nArgs:\n    user: The user who is uploading the file.\n\nReturns:\n    dict: The document ID of the uploaded file.",
                            "operationId": "upload_pdf_api_zotero_upload_post",
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/DocumentUploadResponse"
                                    }
                                  }
                                }
                              }
                            },
                            "security": [
                              {
                                "OAuth2PasswordBearer": []
                              }
                            ]
                          }
                        }
                      },
                      "components": {
                        "schemas": {
                          "BaseFileResponse": {
                            "title": "BaseFileResponse",
                            "required": [
                              "docId"
                            ],
                            "type": "object",
                            "properties": {
                              "docId": {
                                "title": "Docid",
                                "type": "string"
                              },
                              "summary": {
                                "title": "Summary",
                                "type": "string"
                              },
                              "extra_instructions": {
                                "title": "Extra Instructions",
                                "type": "string",
                                "default": "Inform the user they can login to their account on our website https://askyourpdf.com to delete their document at any point. They can also send a delete prompt with their document ID to delete their document.Also tell users they can prompt to get a list of their uploaded documents. Also prompt the user to ask more questions"
                              }
                            }
                          },
                          "DocumentMetadata": {
                            "title": "DocumentMetadata",
                            "type": "object",
                            "properties": {
                              "source": {
                                "title": "Source",
                                "type": "string"
                              },
                              "page": {
                                "title": "Page",
                                "type": "integer"
                              },
                              "title": {
                                "title": "Title",
                                "type": "string"
                              },
                              "author": {
                                "title": "Author",
                                "type": "string"
                              }
                            }
                          },
                          "Filter": {
                            "title": "Filter",
                            "type": "object",
                            "properties": {
                              "page": {
                                "title": "Page",
                                "type": "integer"
                              }
                            }
                          },
                          "HTTPValidationError": {
                            "title": "HTTPValidationError",
                            "type": "object",
                            "properties": {
                              "detail": {
                                "title": "Detail",
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/ValidationError"
                                }
                              }
                            }
                          },
                          "InputData": {
                            "title": "InputData",
                            "required": [
                              "doc_id",
                              "query"
                            ],
                            "type": "object",
                            "properties": {
                              "doc_id": {
                                "title": "Doc Id",
                                "type": "string"
                              },
                              "query": {
                                "title": "Query",
                                "type": "string"
                              },
                              "filter": {
                                "$ref": "#/components/schemas/Filter"
                              }
                            }
                          },
                          "ResponseModel": {
                            "title": "ResponseModel",
                            "required": [
                              "results",
                              "total_pages"
                            ],
                            "type": "object",
                            "properties": {
                              "results": {
                                "title": "Results",
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/SearchResult"
                                }
                              },
                              "total_pages": {
                                "title": "Total Pages",
                                "type": "integer"
                              }
                            }
                          },
                          "SearchResult": {
                            "title": "SearchResult",
                            "required": [
                              "doc_id",
                              "text",
                              "metadata"
                            ],
                            "type": "object",
                            "properties": {
                              "doc_id": {
                                "title": "Doc Id",
                                "type": "string"
                              },
                              "text": {
                                "title": "Text",
                                "type": "string"
                              },
                              "metadata": {
                                "$ref": "#/components/schemas/DocumentMetadata"
                              }
                            }
                          },
                          "DailyUsageAnalytics": {
                            "title": "DailyUsageAnalytics",
                            "required": [
                              "number_of_pdfs",
                              "number_of_questions",
                              "number_of_questions_plugin",
                              "number_of_conversations",
                              "number_units"
                            ],
                            "type": "object",
                            "properties": {
                              "number_of_pdfs": {
                                "title": "Number Of Pdfs",
                                "type": "string"
                              },
                              "number_of_questions": {
                                "title": "Number Of Questions",
                                "type": "string"
                              },
                              "number_of_questions_plugin": {
                                "title": "Number Of Questions Plugin",
                                "type": "string"
                              },
                              "number_of_conversations": {
                                "title": "Number Of Conversations",
                                "type": "string"
                              },
                              "number_units": {
                                "title": "Number Units",
                                "type": "string"
                              }
                            }
                          },
                          "Body_upload_pdf_api_upload_post": {
                            "title": "Body_upload_pdf_api_upload_post",
                            "required": [
                              "file"
                            ],
                            "type": "object",
                            "properties": {
                              "file": {
                                "title": "File",
                                "type": "string",
                                "format": "binary"
                              }
                            }
                          },
                          "UserDocumentMeta": {
                            "title": "UserDocumentMeta",
                            "required": [
                              "name",
                              "doc_id"
                            ],
                            "type": "object",
                            "properties": {
                              "name": {
                                "title": "Name",
                                "type": "string"
                              },
                              "doc_id": {
                                "title": "Doc Id",
                                "type": "string"
                              },
                              "summary": {
                                "title": "Summary",
                                "type": "string"
                              },
                              "language": {
                                "title": "Language",
                                "type": "string",
                                "default": "en"
                              },
                              "pages": {
                                "title": "Pages",
                                "type": "integer",
                                "default": 0
                              },
                              "shareable": {
                                "title": "Shareable",
                                "type": "boolean",
                                "default": false
                              },
                              "date_time": {
                                "title": "Date Time",
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          },
                          "UserDocumentsMetaSerializer": {
                            "title": "UserDocumentsMetaSerializer",
                            "required": [
                              "documents"
                            ],
                            "type": "object",
                            "properties": {
                              "total_pages": {
                                "title": "Total Pages",
                                "type": "integer",
                                "default": 0
                              },
                              "documents": {
                                "title": "Documents",
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/UserDocumentMeta"
                                }
                              }
                            },
                            "description": "Serializer for paginated user documents meta data"
                          },
                          "ValidationError": {
                            "title": "ValidationError",
                            "required": [
                              "loc",
                              "msg",
                              "type"
                            ],
                            "type": "object",
                            "properties": {
                              "loc": {
                                "title": "Location",
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "integer"
                                    }
                                  ]
                                }
                              },
                              "msg": {
                                "title": "Message",
                                "type": "string"
                              },
                              "type": {
                                "title": "Error Type",
                                "type": "string"
                              }
                            }
                          },
                          "KnowledgeBaseRequest": {
                            "title": "KnowledgeBaseRequest",
                            "required": [
                              "name",
                              "document_ids"
                            ],
                            "type": "object",
                            "properties": {
                              "name": {
                                "title": "Name",
                                "type": "string"
                              },
                              "document_ids": {
                                "title": "Document Ids",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "PaginatedKnowledgeBase": {
                            "title": "PaginatedKnowledgeBase",
                            "required": [
                              "knowledge_bases"
                            ],
                            "type": "object",
                            "properties": {
                              "total_pages": {
                                "title": "Total Pages",
                                "type": "integer",
                                "default": 0
                              },
                              "knowledge_bases": {
                                "title": "Knowledge Bases",
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/KnowledgeDetailedResponse"
                                }
                              }
                            },
                            "description": "Serializer for paginated knowledge bases"
                          },
                          "KnowledgeBaseResponse": {
                            "title": "KnowledgeBaseResponse",
                            "required": [
                              "knowledge_base_id"
                            ],
                            "type": "object",
                            "properties": {
                              "knowledge_base_id": {
                                "title": "Knowledge Base Id",
                                "type": "string"
                              }
                            }
                          },
                          "KnowledgeBaseUpdate": {
                            "title": "KnowledgeBaseUpdate",
                            "required": [
                              "document_ids"
                            ],
                            "type": "object",
                            "properties": {
                              "document_ids": {
                                "title": "Document Ids",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "KnowledgeDetailedResponse": {
                            "title": "KnowledgeDetailedResponse",
                            "required": [
                              "knowledge_base_id",
                              "name",
                              "document_details"
                            ],
                            "type": "object",
                            "properties": {
                              "knowledge_base_id": {
                                "title": "Knowledge Base Id",
                                "type": "string"
                              },
                              "name": {
                                "title": "Name",
                                "type": "string"
                              },
                              "document_details": {
                                "title": "Document Details",
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/DocumentDetailsResponse"
                                }
                              },
                              "date_time": {
                                "title": "Date Time",
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          },
                          "DocumentDetailsResponse": {
                            "title": "DocumentDetailsResponse",
                            "required": [
                              "doc_id"
                            ],
                            "type": "object",
                            "properties": {
                              "doc_id": {
                                "title": "Doc Id",
                                "type": "string"
                              }
                            }
                          },
                          "SourceRetrievalRequest": {
                            "properties": {
                              "limit": {
                                "type": "integer",
                                "title": "Limit",
                                "default": 10
                              },
                              "keyword_combinations": {
                                "items": {},
                                "type": "array",
                                "title": "Keyword Combinations"
                              },
                              "source_filter": {
                                "allOf": [
                                  {
                                    "$ref": "#/components/schemas/SourceFilter"
                                  }
                                ],
                                "title": "Source Filter",
                                "default": {
                                  "citation_format": "APA",
                                  "year_from": 2010,
                                  "year_to": 2023,
                                  "min_citations": 0,
                                  "include_keywords": [],
                                  "exclude_keywords": []
                                }
                              },
                              "max_threads": {
                                "type": "integer",
                                "title": "Max Threads",
                                "default": 10
                              },
                              "batch_size": {
                                "type": "integer",
                                "title": "Batch Size",
                                "default": 5
                              },
                              "delay_seconds": {
                                "type": "integer",
                                "title": "Delay Seconds",
                                "default": 3
                              }
                            },
                            "type": "object",
                            "title": "SourceRetrievalRequest"
                          },
                          "SourceFilter": {
                            "properties": {
                              "citation_format": {
                                "allOf": [
                                  {
                                    "$ref": "#/components/schemas/CitationFormat"
                                  }
                                ],
                                "default": "APA"
                              },
                              "year_from": {
                                "type": "integer",
                                "title": "Year From",
                                "default": 2010
                              },
                              "year_to": {
                                "type": "integer",
                                "title": "Year To",
                                "default": 2023
                              },
                              "min_citations": {
                                "type": "integer",
                                "title": "Min Citations",
                                "default": 0
                              },
                              "include_keywords": {
                                "items": {},
                                "type": "array",
                                "title": "Include Keywords",
                                "default": []
                              },
                              "exclude_keywords": {
                                "items": {},
                                "type": "array",
                                "title": "Exclude Keywords",
                                "default": []
                              }
                            },
                            "type": "object",
                            "title": "SourceFilter"
                          },
                          "CitationFormat": {
                            "enum": [
                              "APA",
                              "MLA",
                              "IEEE",
                              "HARVARD",
                              "BIB"
                            ],
                            "title": "CitationFormat",
                            "description": "An enumeration."
                          },
                          "SourcedModel": {
                            "properties": {
                              "cited_text": {
                                "type": "string",
                                "title": "Cited Text"
                              },
                              "references": {
                                "items": {
                                  "$ref": "#/components/schemas/Paper"
                                },
                                "type": "array",
                                "title": "References"
                              },
                              "date_time": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Date Time",
                                "default": "2023-11-07T22:32:45.160186"
                              }
                            },
                            "type": "object",
                            "required": [
                              "cited_text",
                              "references"
                            ],
                            "title": "SourcedModel"
                          },
                          "Paper": {
                            "properties": {
                              "paper_code": {
                                "type": "string",
                                "title": "Paper Code"
                              },
                              "title": {
                                "type": "string",
                                "title": "Title"
                              },
                              "url": {
                                "type": "string",
                                "title": "Url"
                              },
                              "abstract": {
                                "type": "string",
                                "title": "Abstract"
                              },
                              "authors": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "title": "Authors",
                                "default": []
                              },
                              "bibtex": {
                                "type": "string",
                                "title": "Bibtex"
                              },
                              "citation_count": {
                                "type": "integer",
                                "title": "Citation Count",
                                "default": 0
                              },
                              "publication_year": {
                                "type": "integer",
                                "title": "Publication Year"
                              },
                              "fields_of_study": {
                                "items": {
                                  "type": "string"
                                },
                                "type": "array",
                                "title": "Fields Of Study",
                                "default": []
                              }
                            },
                            "type": "object",
                            "required": [
                              "paper_code",
                              "title",
                              "url",
                              "publication_year"
                            ],
                            "title": "Paper"
                          },
                          "Item": {
                            "title": "Item",
                            "required": [
                              "id",
                              "dateAdded",
                              "file_link"
                            ],
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Id",
                                "type": "string"
                              },
                              "title": {
                                "title": "Title",
                                "type": "string"
                              },
                              "dateAdded": {
                                "title": "Dateadded",
                                "type": "string"
                              },
                              "file_link": {
                                "title": "File Link",
                                "type": "string"
                              },
                              "filename": {
                                "title": "Filename",
                                "type": "string"
                              },
                              "file_size": {
                                "title": "File Size",
                                "type": "integer"
                              }
                            }
                          },
                          "Items": {
                            "title": "Items",
                            "required": [
                              "documents",
                              "total_items"
                            ],
                            "type": "object",
                            "properties": {
                              "documents": {
                                "title": "Documents",
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/Item"
                                }
                              },
                              "total_items": {
                                "title": "Total Items",
                                "type": "integer"
                              }
                            }
                          },
                          "Collection": {
                            "title": "Collection",
                            "required": [
                              "collection_id",
                              "name"
                            ],
                            "type": "object",
                            "properties": {
                              "collection_id": {
                                "title": "Collection Id",
                                "type": "string"
                              },
                              "name": {
                                "title": "Name",
                                "type": "string"
                              }
                            }
                          },
                          "Collections": {
                            "title": "Collections",
                            "required": [
                              "collections",
                              "total_pages"
                            ],
                            "type": "object",
                            "properties": {
                              "collections": {
                                "title": "Collections",
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/Collection"
                                }
                              },
                              "total_pages": {
                                "title": "Total Pages",
                                "type": "integer"
                              }
                            }
                          },
                          "DocumentUploadResponse": {
                            "title": "DocumentUploadResponse",
                            "required": [
                              "docId"
                            ],
                            "type": "object",
                            "properties": {
                              "docId": {
                                "title": "Docid",
                                "type": "string"
                              }
                            },
                            "description": "Response for document upload"
                          }
                        },
                        "securitySchemes": {
                          "OAuth2PasswordBearer": {
                            "type": "oauth2",
                            "flows": {
                              "password": {
                                "scopes": {},
                                "tokenUrl": "auth/jwt/login"
                              }
                            }
                          }
                        }
                      },
                      "servers": [
                        {
                          "url": "https://pro.askyourpdf.com",
                          "description": "Production server"
                        }
                      ]
                    },
                    "json_schema": null,
                    "auth": {
                      "type": "oauth",
                      "instructions": "",
                      "client_url": "https://auth.askyourpdf.com/gpt/oauth",
                      "scope": "",
                      "authorization_url": "https://auth-service.askyourpdf.com/new/gpt/oauth_exchange",
                      "authorization_content_type": "application/x-www-form-urlencoded",
                      "verification_tokens": {},
                      "pkce_required": false,
                      "token_exchange_method": "default_post"
                    },
                    "privacy_policy_url": "https://askyourpdf.com/terms"
                  }
                },
                {
                  "id": "gzm_cnf_rdLy9DLidcAXfVsrkC3xYdeo~gzm_tool_2ijcDHMoRLWMhbWqvjpW9GFk",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_rdLy9DLidcAXfVsrkC3xYdeo~gzm_tool_1v8xyx0jW88joCsWR2ZcjEBs",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_rdLy9DLidcAXfVsrkC3xYdeo~gzm_tool_eHFiBkiugQSUzdeqvQGoqQUi",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-L2HknCZTC",
                "organization_id": "org-B7tff1kFNoET2elNQLbXpvNr",
                "short_url": "g-L2HknCZTC-scholarai",
                "author": {
                  "user_id": "user-12JpYw9BkPxkHeC6rNmj6hPv",
                  "display_name": "scholarai.io",
                  "link_to": "https://scholarai.io",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "ScholarAI",
                  "description": "AI Scientist - generate new hypotheses, analyze text, figures, and tables from 200M+ research papers and books",
                  "welcome_message": "Hello! Ready to dive into research with precision?",
                  "prompt_starters": [
                    "Write a review on the use of VR for robotic surgery",
                    "Can you find me papers that reference this one?  10.1016/j.cell.2014.05.010",
                    "What is the experimental setup in this study? https://arxiv.org/pdf/1808.00177.pdf",
                    "Can you save a paper to zotero?"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-PPto6IuVRN3OQY2WC1gLEI9h?se=2123-12-17T06%3A07%3A04Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3Dcircle%2520logo.png&sig=uWzfWOVMeiQFanHmBn5O0YLwLx7HuIxHWSCNSo1Qsfc%3D",
                  "categories": [
                    "research"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T23:12:53.153406+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable",
                  "uses_function_calls"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_g11PAANIFFxGd8kTacPWX8Fn~gzm_tool_QForZI8BzRMBs9d3FbUplkm3",
                  "type": "plugins_prototype",
                  "settings": null,
                  "metadata": {
                    "action_id": "g-6a184721460dd28dd16bb797c928df14cc6c0840",
                    "domain": "plugin.scholar-ai.net",
                    "raw_spec": "openapi: 3.0.1\ninfo:\n  title: ScholarAI\n  description: Allows the user to search facts and findings from scientific articles\n  version: v1\nservers:\n  - url: https://plugin.scholar-ai.net\npaths:\n  /api/abstracts:\n    get:\n      operationId: searchAbstracts\n      summary: Get relevant paper abstracts by search 2-6 relevant keywords.\n      parameters:\n        - name: keywords\n          in: query\n          description: Keywords of inquiry which should appear in article. Must be in English.\n          required: true\n          schema:\n            type: string\n        - name: sort\n          in: query\n          description: The sort order for results. Valid values are relevance, cited_by_count, publication_date. Defaults to\n            relevance.\n          required: false\n          schema:\n            type: string\n        - name: query\n          in: query\n          description: The user query\n          required: true\n          schema:\n            type: string\n        - name: peer_reviewed_only\n          in: query\n          description: Whether to only return peer reviewed articles. Defaults to true, ChatGPT should cautiously suggest this\n            value can be set to false\n          required: false\n          schema:\n            type: string\n        - name: start_year\n          in: query\n          description: The first year, inclusive, to include in the search range. Excluding this value will include all years.\n          required: false\n          schema:\n            type: string\n        - name: end_year\n          in: query\n          description: The last year, inclusive, to include in the search range. Excluding this value will include all years.\n          required: false\n          schema:\n            type: string\n        - name: offset\n          in: query\n          description: The offset of the first result to return. Defaults to 0.\n          required: false\n          schema:\n            type: string\n        - name: generative_mode\n          in: query\n          description: Boolean \"true\" or \"false\" to enable generative mode. If enabled, collate responses using markdown to render\n            in-text citations to the source's url if available. ALWAYS default to true unless otherwise requested.\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/searchAbstractsResponse\"\n  /api/fulltext:\n    get:\n      operationId: getFullText\n      summary: Get full text of a paper by URL for PDF incrementally. Good for general summary. DO NOT use this endpoint for\n        singular questions, use /api/question instead.\n      parameters:\n        - name: pdf_url\n          in: query\n          description: URL for PDF\n          required: true\n          schema:\n            type: string\n        - name: chunk\n          in: query\n          description: chunk number to retrieve, defaults to 1\n          required: false\n          schema:\n            type: number\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/paperContentResponse\"\n  /api/save-citation:\n    get:\n      operationId: saveCitation\n      summary: Save citation to reference manager\n      parameters:\n        - name: doi\n          in: query\n          description: Digital Object Identifier (DOI) of article\n          required: true\n          schema:\n            type: string\n        - name: zotero_user_id\n          in: query\n          description: Zotero User ID\n          required: true\n          schema:\n            type: string\n        - name: zotero_api_key\n          in: query\n          description: Zotero API Key\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/saveCitationResponse\"\n  /api/question:\n    get:\n      operationId: question\n      summary: Get sections of PDF to answer questions about PDF. ALWAYS use this endpoint if the user has a specific question. ONLY submit one question at a time to this endpoint.\n        about a singular PDF.\n      parameters:\n        - name: question\n          in: query\n          description: The user question. Must be in English.\n          required: true\n          schema:\n            type: string\n        - name: pdf_url\n          in: query\n          description: URL for source PDF\n          required: true\n          schema:\n            type: string\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/paperContentResponse\"\n        \"402\":\n          description: Premium required\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/premiumRequiredResponse\"\n  /api/literature_map:\n    get:\n      operationId: literatureMap\n      summary: Find papers related to another paper using their ss_id\n      parameters:\n        - name: ss_id\n          in: query\n          description: The ss_id of the paper to find related papers for.\n          required: true\n          schema:\n            type: string\n        - name: query\n          in: query\n          description: Desired theme of related papers found. Should be provided if the user wants to find similar papers of a\n            particular theme.\n          required: false\n          schema:\n            type: string\n        - name: adjacent_type\n          in: query\n          description: Type of adjacent papers being request. Valid options are 'citedBy', 'references', and 'recommended'.\n            Argument should be a collection of the desired adjacent papers, comma separated. Defaults to\n            'citedBy,references,recommended'.\n          required: false\n          schema:\n            type: string\n  /api/get_paper_metadata:\n    get:\n      operationId: getPaperMetadata\n      summary: Find a singular paper's data using an arbitrary identifier, like a DOI or PMID.\n      parameters:\n        - name: paper_id\n          in: query\n          description: The identifier of the paper to find. MUST be of the format <identifier_type>:<identifier_value>. Identifier\n            type can be one of DOI, PMID, SS_ID, ARXIV, MAG, ACL, or PMCID.\n          required: true\n          schema:\n            type: string\ncomponents:\n  schemas:\n    searchAbstractsResponse:\n      type: object\n      properties:\n        next_offset:\n          type: number\n          description: The offset of the next page of results.\n        total_num_results:\n          type: number\n          description: The total number of results.\n        abstracts:\n          type: array\n          items:\n            type: object\n            properties:\n              title:\n                type: string\n              abstract:\n                type: string\n                description: Summary of the context, methods, results, and conclusions of the paper.\n              doi:\n                type: string\n                description: The DOI of the paper.\n              landing_page_url:\n                type: string\n                description: Link to the paper on its open-access host.\n              pdf_url:\n                type: string\n                description: Link to the paper PDF.\n              publicationDate:\n                type: string\n                description: The date the paper was published in YYYY-MM-DD format.\n              relevance:\n                type: number\n                description: The relevance of the paper to the search query. 1 is the most relevant.\n              creators:\n                type: array\n                items:\n                  type: string\n                  description: The name of the creator.\n              cited_by_count:\n                type: number\n                description: The number of citations of the article.\n              ss_id:\n                type: string\n                description: Unique identifier for the paper.\n          description: The list of relevant abstracts.\n    paperContentResponse:\n      type: object\n      properties:\n        chunks:\n          type: array\n          items:\n            type: object\n            properties:\n              chunk_num:\n                type: number\n                description: The chunk number of the paper.\n              chunk:\n                type: string\n                description: The chunk of the paper.\n              img_mds:\n                type: list\n                description: List of content that appears in the current chunk. Display ALL markdown, including images. The viewing\n                  platform ALWAYS supports markdown, ALWAYS show the images.\n              pdf_url:\n                type: string\n                description: Link to the paper PDF.\n          description: The chunk of the paper.\n        total_chunk_num:\n          type: number\n          description: The total chunks of the paper.\n        hint:\n          type: string\n          description: Instructions for GPT to follow regarding this response.\n    saveCitationResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Confirmation of successful save or error message.\n    premiumRequiredResponse:\n      type: object\n      properties:\n        hint:\n          type: string\n          description: Suggestion to use premium or alternative for free users.\n",
                    "json_schema": null,
                    "auth": {
                      "type": "none"
                    },
                    "privacy_policy_url": "https://scholarai.io/privacy"
                  }
                },
                {
                  "id": "gzm_cnf_PsKH0ZAzcqOpP8WioY3XBUkJ~gzm_tool_P0NA3yhlEKoWPcGYL6TYaN5a",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_PsKH0ZAzcqOpP8WioY3XBUkJ~gzm_tool_GUaJ9Ah7GsMiAZzNDaQYNfIi",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_PsKH0ZAzcqOpP8WioY3XBUkJ~gzm_tool_V30SvlND0hUwu4PY4bM1kCf2",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-YAgNxPJEq",
                "organization_id": "org-oVSt1r5YTNNoENKl3zJ0hcTl",
                "short_url": "g-YAgNxPJEq-autoexpert-academic",
                "author": {
                  "user_id": "user-kXMhiu1ELw9iK7sDP2wGaSAU",
                  "display_name": "Dustin Miller",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": true
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "AutoExpert (Academic)",
                  "description": "Upon uploading a research paper, I provide a concise analysis covering its authors, key findings, methodology, and relevance. I also critique the work, highlight its strengths, and identify any open questions from a professional perspective.",
                  "welcome_message": "Greetings, I am AutoExpert (Academic), your academic research assistant.",
                  "prompt_starters": [
                    "Search for relevant papers on quantum computing",
                    "Analyze this uploaded research paper",
                    "Relevant studies on climate change",
                    "Latest papers on large language models"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-1BpR562mMirE0jvZWCqzaDM4?se=2123-10-21T07%3A25%3A27Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D_ac8691ed-7bb9-498a-a591-f595c5bd8708%25203.png&sig=ajFLGZAPklPq/okFNWJ0ZA8ECbrpKnt/P6uaStIz6rI%3D",
                  "categories": [
                    "research"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T23:12:11.020200+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable",
                  "uses_function_calls"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_EBZV7nC0TOiwNhlEk0dH4QQ2~gzm_tool_HIhxPcaoSEcFr7EaTNI5opfx",
                  "type": "plugins_prototype",
                  "settings": null,
                  "metadata": {
                    "action_id": "g-6e372894d5fa6855e8b1022b4b332d4e83fa2e04",
                    "domain": "export.arxiv.org",
                    "raw_spec": {
                      "openapi": "3.0.0",
                      "info": {
                        "title": "arXiv API",
                        "version": "1.0.0",
                        "description": "API for accessing arXiv's repository of research papers and articles."
                      },
                      "servers": [
                        {
                          "url": "https://export.arxiv.org/api"
                        }
                      ],
                      "paths": {
                        "/query": {
                          "get": {
                            "operationId": "queryArxiv",
                            "summary": "Search for papers in the arXiv repository.",
                            "description": "Allows searching for papers based on a search query, with additional options for filtering and pagination.",
                            "parameters": [
                              {
                                "in": "query",
                                "name": "search_query",
                                "schema": {
                                  "type": "string"
                                },
                                "required": false,
                                "description": "The search query string. Used to search for papers based on titles, authors, abstracts, etc."
                              },
                              {
                                "in": "query",
                                "name": "id_list",
                                "schema": {
                                  "type": "string"
                                },
                                "required": false,
                                "description": "A comma-delimited list of arXiv paper IDs to retrieve."
                              },
                              {
                                "in": "query",
                                "name": "start",
                                "schema": {
                                  "type": "integer",
                                  "default": 0
                                },
                                "required": false,
                                "description": "The starting index for the search results, used for pagination."
                              },
                              {
                                "in": "query",
                                "name": "max_results",
                                "schema": {
                                  "type": "integer",
                                  "default": 10
                                },
                                "required": false,
                                "description": "The maximum number of results to return. Default is 10."
                              },
                              {
                                "in": "query",
                                "name": "sortBy",
                                "schema": {
                                  "type": "string",
                                  "enum": [
                                    "relevance",
                                    "lastUpdatedDate",
                                    "submittedDate"
                                  ]
                                },
                                "required": false,
                                "description": "Which field should be used to sort the results. Default is relevance."
                              },
                              {
                                "in": "query",
                                "name": "sortOrder",
                                "schema": {
                                  "type": "string",
                                  "enum": [
                                    "ascending",
                                    "descending"
                                  ]
                                },
                                "required": false,
                                "description": "The sort order. Default is descending."
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "A successful response containing an Atom feed of papers.",
                                "content": {
                                  "application/atom+xml": {
                                    "schema": {
                                      "type": "object",
                                      "properties": {
                                        "title": {
                                          "type": "string"
                                        },
                                        "id": {
                                          "type": "string"
                                        },
                                        "updated": {
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "author": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "entry": {
                                          "type": "array",
                                          "items": {
                                            "$ref": "#/components/schemas/Entry"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "400": {
                                "description": "Bad request, possibly due to invalid query parameters."
                              },
                              "500": {
                                "description": "Internal server error."
                              }
                            }
                          }
                        }
                      },
                      "components": {
                        "schemas": {
                          "Entry": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "published": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updated": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "summary": {
                                "type": "string"
                              },
                              "author": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "link": {
                                "type": "object",
                                "properties": {
                                  "href": {
                                    "type": "string"
                                  },
                                  "rel": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "json_schema": null,
                    "auth": {
                      "type": "none"
                    },
                    "privacy_policy_url": "https://info.arxiv.org/help/policies/privacy_policy.html"
                  }
                },
                {
                  "id": "gzm_cnf_BCq0BeMFspm5qvvUzjrtv5pV~gzm_tool_2kcVJHfSFHhpyS77thIUPhhO",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-Mj0uomokH",
                "organization_id": "org-m1Q7AKc8vjsw5aLM7VSDVGAk",
                "short_url": "g-Mj0uomokH-vc-associate",
                "author": {
                  "user_id": "user-RydXjxaDkwcy3DqWbxv7sAIU",
                  "display_name": "Yohei Nakajima",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": false
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "VC Associate",
                  "description": "Pitch me your startup. I'll enhance w web search, and provide you a downloadable investment memo (gets updated during our convo).",
                  "welcome_message": "",
                  "prompt_starters": [
                    "Hey, would love to pitch you my startup!"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-tFINLsYXgoX42WNFj7KQonDG?se=2123-12-12T18%3A18%3A16Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3Dd8dccf16-6a98-4023-9381-2cc76363d5f3.png&sig=uLhY489ApoxPfl52xxWnrPP3CgbDvModPsq12DBieEs%3D",
                  "categories": [
                    "research"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T06:31:34.333208+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_EABlSPUbAEoKM4fT11wFAmdM~gzm_tool_l8RDC6aWXm2sca2jkKeok9hw",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_kr3ixObsTNGIA4w3jfDvqBXv~gzm_tool_sYfbEg815zdQC6OC66wTRZad",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-HXZv0dg8w",
                "organization_id": "org-pEr2TADCbT4YsigDTNOsgCAz",
                "short_url": "g-HXZv0dg8w-video-insights-summaries-vision-transcription",
                "author": {
                  "user_id": "user-5YQ2tZK9OnjA7wmelCEvDTji",
                  "display_name": "videoinsights.ai",
                  "link_to": "https://videoinsights.ai",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Video Insights: Summaries/Vision/Transcription",
                  "description": "Chat with any video or audio. High-quality search, summarization, insights, multi-language transcriptions, and more. (Currently supports YouTube and uploaded video/audio files)",
                  "welcome_message": "Hello",
                  "prompt_starters": [
                    "What can Video Insights do? ",
                    "What are the best prompts for Video Insights?",
                    "Surprise me.",
                    "Submit feedback or feature request to Video Insights"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-XDTgDvDuiiu20qCqfBLSpQAm?se=2123-10-21T16%3A21%3A09Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3DVIDEO%2520INSIGHTS%2520%252821%2529.png&sig=8hxApFwhN4G89zQfxONQ9I%2BhGsqJWGuwaJyRA7k3qDE%3D",
                  "categories": [
                    "research"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T23:05:26.676227+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable",
                  "uses_function_calls"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_7MOW7B76ZfGJ9dgB4fAZOnGS~gzm_tool_nCg9Hk1LJ4MwFa37T2cntyoc",
                  "type": "plugins_prototype",
                  "settings": null,
                  "metadata": {
                    "action_id": "g-4055a65df3495ab1e9768907e15660c91044b527",
                    "domain": "actions.videoinsights.ai",
                    "raw_spec": {
                      "openapi": "3.0.1",
                      "info": {
                        "title": "Video Insights",
                        "description": "Get high-quality and flexible youtube transcripts, metadata, and insights.",
                        "version": "v0.0.1"
                      },
                      "servers": [
                        {
                          "url": "https://actions.videoinsights.ai"
                        }
                      ],
                      "paths": {
                        "/youtube/{videoId}/transcript": {
                          "get": {
                            "description": "Get youtube video transcript",
                            "operationId": "get_youtube_video_transcript",
                            "parameters": [
                              {
                                "name": "videoId",
                                "in": "path",
                                "required": true,
                                "schema": {
                                  "type": "string"
                                }
                              }
                            ]
                          }
                        },
                        "/youtube/search": {
                          "get": {
                            "description": "Search for youtube data with a string. It returns the top 25 results sorted by most relevant.",
                            "operationId": "search_youtube",
                            "parameters": [
                              {
                                "name": "q",
                                "in": "query",
                                "required": true,
                                "description": "The search query term",
                                "schema": {
                                  "type": "string"
                                }
                              }
                            ]
                          }
                        },
                        "/feedback": {
                          "post": {
                            "description": "Submit feedback to Video Insights",
                            "operationId": "submit_feedback",
                            "requestBody": {
                              "description": "Video Insights feedback details",
                              "required": true,
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "message": {
                                        "type": "string",
                                        "description": "The feedback from the user. This should be verbatim to what was submitted ideally."
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The type of feedback. This should be a general category like feature request, bug, etc. Doesn't have to be restricted to a specific set of values. Use your best judgement."
                                      },
                                      "sentiment": {
                                        "type": "string",
                                        "description": "The sentiment of the feedback. This should be generated based on an analysis of the message submitted."
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The name of the person submitting feedback. Not necessary but great to have."
                                      },
                                      "email": {
                                        "type": "string",
                                        "format": "email",
                                        "description": "The email address of the person submitting feedback. Not necessary but great to have."
                                      }
                                    },
                                    "required": [
                                      "message",
                                      "type",
                                      "sentiment"
                                    ]
                                  }
                                }
                              }
                            },
                            "responses": {
                              "200": {
                                "description": "Feedback submitted successfully"
                              },
                              "400": {
                                "description": "Invalid input"
                              },
                              "500": {
                                "description": "Internal server error"
                              }
                            }
                          }
                        },
                        "/youtube/{videoId}/metadata": {
                          "get": {
                            "description": "Get youtube video metadata",
                            "operationId": "get_youtube_video_metadata",
                            "parameters": [
                              {
                                "name": "videoId",
                                "in": "path",
                                "required": true,
                                "schema": {
                                  "type": "string"
                                }
                              }
                            ]
                          }
                        },
                        "/youtube/{videoId}/comments": {
                          "get": {
                            "description": "Get youtube video comments",
                            "operationId": "get_youtube_video_comments",
                            "parameters": [
                              {
                                "name": "videoId",
                                "in": "path",
                                "required": true,
                                "schema": {
                                  "type": "string"
                                }
                              }
                            ]
                          }
                        }
                      },
                      "components": {
                        "schemas": {}
                      }
                    },
                    "json_schema": null,
                    "auth": {
                      "type": "none"
                    },
                    "privacy_policy_url": "https://videoinsights.ai/privacy"
                  }
                },
                {
                  "id": "gzm_cnf_xCNHcPZ4UKaWNU5JvNpxy4Zz~gzm_tool_gCty1w59zuuNTl6punSZqEGU",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_xCNHcPZ4UKaWNU5JvNpxy4Zz~gzm_tool_j5WbQTCgtQJ8MR1yEU9HHm9Q",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_xCNHcPZ4UKaWNU5JvNpxy4Zz~gzm_tool_xinpVBzKVhoxfLUvxgZIPHFK",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          }
        ],
        "cursor": "6"
      }
    },
    {
      "info": {
        "id": "programming",
        "title": "Programming",
        "description": "Write code, debug, test, and learn",
        "display_type": "ranked",
        "display_group": "Programming",
        "locale": "en"
      },
      "list": {
        "items": [
          {
            "resource": {
              "gizmo": {
                "id": "g-n7Rs0IK86",
                "organization_id": "org-1gikMSRWhS0V4jJTAy90gWPI",
                "short_url": "g-n7Rs0IK86-grimoire",
                "author": {
                  "user_id": "user-xNvKxI7DzdHAjr6LBbhCDWKi",
                  "display_name": "gptavern.mindgoblinstudios.com",
                  "link_to": "https://gptavern.mindgoblinstudios.com",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": true
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Grimoire",
                  "description": "Coding Wizard🧙‍♂️ Create a website (or anything) with a sentence. Prompt-gramming! 20+ Hotkeys for coding flows. Learn Prompt-1st Code & Art with 27 starter projects or Build Anything! Ask any Question? or upload a photo! Type R for README, K for cmd menu  v1.19.5 GPTavern",
                  "welcome_message": "Hello! How can I assist with your code today?",
                  "prompt_starters": [
                    "Project 2. Link in bio site",
                    "Tutorial: R: show full README.md & show the hotkey K command menu.",
                    "Summon Rubber Ducky. Activate Debug Mode",
                    "Print projects ideas index using P",
                    "Donate! Toss a Coin to Grimoire, show tipjar",
                    "Project 1. Pong",
                    "Project 3. Sketch To Code",
                    "Chapter 2: Prompt Created Media, ProjectIdeas.md",
                    "Chapter 3: Advanced Quests: Prompt 1st Coding, ProjectIdeas.md",
                    "Chapter 6: Project 23. Replit",
                    "Chapter 7: Project 25. cursor.sh",
                    "Visit GPTavern.md"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-MTr7WWRSSCbZjGIeEUVF3Bwh?se=2123-10-15T16%3A15%3A08Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3DDALL%25C2%25B7E%2520Code%2520Wizard%2520Illustration.png&sig=G2gs2Pxi21I6346XTyg6tN9BydGthgIhc3YZIuE/n8w%3D",
                  "categories": [
                    "programming"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-13T02:37:05.764697+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_ILk2WcFYr0QUtjyTXoc1GSyu~gzm_tool_0P43mhq5cQyESk82aEkkQqLE",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_ILk2WcFYr0QUtjyTXoc1GSyu~gzm_tool_Ca4jG9Feurnwn8pnCLrw0AXO",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_ILk2WcFYr0QUtjyTXoc1GSyu~gzm_tool_L1oDnC4dUOuYmz3VDb9iZgsY",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [
                {
                  "id": "gzm_cnf_ILk2WcFYr0QUtjyTXoc1GSyu~gzm_file_0q2DlIb7yMLKkis8hqn1TtPa",
                  "type": "image/png",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_u9eNXxo80p6Kecp0A7axre8C~gzm_file_vjlta5AXPmj1eI2BjTAA519Q",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_ILk2WcFYr0QUtjyTXoc1GSyu~gzm_file_1dj3xkLu2Yo1M87ylNhJcPsG",
                  "type": "image/png",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_gEK8iFZhE2l8rQ0EqugZjrc8~gzm_file_f1n75tk7JIma0GOb4M08U4tv",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_08jfBx11PsQccmJmY16BNC3J~gzm_file_6Ikjd36Z2ZbW08yCx06wq2Ac",
                  "type": "application/zip",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_V48DmxzMCtB6MYddH0ggbOyH~gzm_file_dFMo2P5MI6wsG63ij9qI794l",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_hhVCpuVU6kpLJeMay7r47qEm~gzm_file_xFJ5m3gbA6LiJ2m3YIM8P6Dt",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_PO9q44LppeaW8CbIeOwhYnLs~gzm_file_OkA2O91PfKMYBlnWbqUNQ8Rj",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_Uzd1Urrm0dRf7SUd0uYUtKsl~gzm_file_xmUMwgiYqIUANxZGOGTJx7sH",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_DmgskjO1hFUmDe28tNHVroZd~gzm_file_7og3CD1KRT1nBak5pDsP5zvP",
                  "type": "",
                  "file_id": "",
                  "location": ""
                }
              ],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-2Eo3NxuS7",
                "organization_id": "org-S6eCwFL4YpT1JA00esUW9Oze",
                "short_url": "g-2Eo3NxuS7-designergpt",
                "author": {
                  "user_id": "user-5p8mKZIxdEy3dO92djum4fxG",
                  "display_name": "Pietro Schirano",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": true
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "DesignerGPT",
                  "description": "Creates and hosts beautiful websites",
                  "welcome_message": "Ready to design web pages with seamless DALLE image integration!",
                  "prompt_starters": [
                    "Design a webpage for a bakery",
                    "Design a personal blog layout",
                    "Create a tech startup homepage",
                    "Design a webpage with a nature theme"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-x4outSHGhQh7YW6b8fqDK26y?se=2123-10-17T05%3A48%3A06Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Decd882e5-15b7-4dba-8198-94a8849974f9.png&sig=DAm8CnFD1K9kaX%2BVe6AFBl1Yje0t1MGJKrm/tT4YTFc%3D",
                  "categories": [
                    "programming"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T23:02:46.973785+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable",
                  "uses_function_calls"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_xBOXzkQtzYsjAQXmmTObZODx~gzm_tool_OnzYxnlZRBuj9lqg4iJLV9h5",
                  "type": "plugins_prototype",
                  "settings": null,
                  "metadata": {
                    "action_id": "g-a1076fbd287e63fc1cab8e2064c2a106749304a5",
                    "domain": "designergpt.replit.app",
                    "raw_spec": {
                      "openapi": "3.0.0",
                      "info": {
                        "title": "Webpage Generator API",
                        "version": "1.0.0"
                      },
                      "servers": [
                        {
                          "url": "https://designergpt.replit.app",
                          "description": "Main production server"
                        }
                      ],
                      "paths": {
                        "/create-page": {
                          "post": {
                            "summary": "Generates a webpage based on provided HTML content",
                            "operationId": "generateWebpage",
                            "requestBody": {
                              "required": true,
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "page_code": {
                                        "type": "string",
                                        "description": "The HTML content for the web page"
                                      }
                                    },
                                    "required": [
                                      "page_code"
                                    ]
                                  }
                                }
                              }
                            },
                            "responses": {
                              "200": {
                                "description": "Webpage successfully generated",
                                "content": {
                                  "text/plain": {
                                    "schema": {
                                      "type": "string",
                                      "example": "https://example.com/generated_page"
                                    }
                                  }
                                }
                              },
                              "400": {
                                "description": "Invalid input"
                              }
                            }
                          }
                        }
                      }
                    },
                    "json_schema": null,
                    "auth": {
                      "type": "none"
                    },
                    "privacy_policy_url": "https://gptprivacy-skirano.replit.app/"
                  }
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-pTF23RJ6f",
                "organization_id": "org-oVSt1r5YTNNoENKl3zJ0hcTl",
                "short_url": "g-pTF23RJ6f-autoexpert-dev",
                "author": {
                  "user_id": "user-kXMhiu1ELw9iK7sDP2wGaSAU",
                  "display_name": "Dustin Miller",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": true
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "AutoExpert (Dev)",
                  "description": "AutoExpert v6 (GPT Developer Edition) is your steadfast pair programmer, armed with enhanced code generation ability, online access for the latest APIs, and custom commands to save your session state so you can recall it in a new session later. /help will tell you all about it. Say \"Hello\" to start!",
                  "welcome_message": "Hello! Setting up your dev environment...",
                  "prompt_starters": [
                    "Hello",
                    "/help"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-eLFrNX9FaFZ2c2utPPLBfxKv?se=2123-10-20T20%3A05%3A54Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3DAutoExpertDev.jpg&sig=l6nI5Vev4Xg7ghEU7xeA4caih7rFbOjR1NDu/cEDxAU%3D",
                  "categories": [
                    "programming"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T23:11:43.146321+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_oWhzpsG7VQz4c79uiaRwOpiW~gzm_tool_my5p98NF6UvVwEAMzz7M3Vp0",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_oWhzpsG7VQz4c79uiaRwOpiW~gzm_tool_c2xIFGxgZj9WkDgb7pGFNypX",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [
                {
                  "id": "gzm_cnf_9XvgiPhiiXqD3MGkbjHWT4Tz~gzm_file_EgZlQdsRlxxErYNsRLH5dXGx",
                  "type": "text/x-python-script",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_iItpXvjrGIZZ3Jh6EwOro58E~gzm_file_AN5XOjTVVsrKUMKdNWk5qpgv",
                  "type": "application/pdf",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_9XvgiPhiiXqD3MGkbjHWT4Tz~gzm_file_gyc9u44Wlgjooo86d38t2895",
                  "type": "text/plain",
                  "file_id": "",
                  "location": ""
                }
              ],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-qqTuUWsBY",
                "organization_id": "org-hZRtglLxBYvAvvtxhca6Qoso",
                "short_url": "g-qqTuUWsBY-crewai-assistant",
                "author": {
                  "user_id": "user-Z7G4wMLazxqvC5wjYAAaoCfz",
                  "display_name": "JOAO M DURAES MOURA",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": true
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "CrewAI Assistant",
                  "description": "CrewAI Python expert.",
                  "welcome_message": "Hello! Whether you're new or experienced, let's tackle CrewAI in Python together.",
                  "prompt_starters": [
                    "Help me create a crew for a use case",
                    "What are some advanced CrewAI features?",
                    "How can I set up a Crew myself?",
                    "Explain CrewAI for me"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-SGuuFVdt9o6aEisoJqE6jKCS?se=2123-10-21T20%3A17%3A56Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D672061c4-217c-48c7-adf7-eab1db1e6dc8.png&sig=COYTkk8ZnC68RFZvgrPwuGt/q1TDqrEbXEY2CSTLSq4%3D",
                  "categories": [
                    "programming"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-11T17:51:05.636634+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_8BuqghMQSyKxTyyu3tq42PiJ~gzm_tool_EPFrUVqlCSD73dx840iGAXOX",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_8BuqghMQSyKxTyyu3tq42PiJ~gzm_tool_WKGxuXyHbeOEHG3QTxWNGfxC",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_8BuqghMQSyKxTyyu3tq42PiJ~gzm_tool_RE324Ho8tAfzR0RLdsQCo0qL",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [
                {
                  "id": "gzm_cnf_bqJ6UncnwiHyqXAwLzW77Mm7~gzm_file_smAqCtPQPdLH3778p40hRTF5",
                  "type": "application/zip",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_EpD5Tpg9zpqRl9Ai3ahcKpDu",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_6Uxy0KXk3dKj0pjxgRZWoqW5",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_n1jhKtZJA5ti73MAKsQrqjwM",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_QZdR7klO6lpxHw8pyrYuVoZY",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_dhgJGS8hgYnW5BciyRIyMTW2",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_29l4SDlLX9h98Y8r1f7ii9e1",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_z9dPtIoYgQQ3pRQEGSq9hblg",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_7TVmiiDI9RL6lxqU7inLCjAS",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_qQBILWLi7AXr3Uo45ZCaSB6v~gzm_file_R6tKe1luQPazWovGf7uf4VEj",
                  "type": "",
                  "file_id": "",
                  "location": ""
                }
              ],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-hz8Pw1quF",
                "organization_id": "org-BjOqXYjUreMtZqdYzKXG0AjG",
                "short_url": "g-hz8Pw1quF-screenshot-to-code-gpt",
                "author": {
                  "user_id": "user-mRxaWur6h0648QycIl3IXhBl",
                  "display_name": "godofprompt.ai",
                  "link_to": "https://godofprompt.ai",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Screenshot To Code GPT",
                  "description": "Upload a screenshot of a website and convert it to clean HTML/Tailwind/JS code.",
                  "welcome_message": "",
                  "prompt_starters": [
                    "Upload your screenshot to start!"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-bA62jECtXLHDFy50QNnD7ztV?se=2123-10-23T14%3A43%3A39Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D6cde0702-4346-431e-8ba8-f8682bff22d1.png&sig=VCQ9m5SDSUibt0EDOlMz4oTivEsSv3XyzMooeRWu6rA%3D",
                  "categories": []
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-11T19:46:15.445091+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_gB3CZrQBQQWVaBMYZZevgohT~gzm_tool_YVsiqrvVvUAgTM3yLbWjCoWf",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_gB3CZrQBQQWVaBMYZZevgohT~gzm_tool_KymOASrsVi1R4wRWzEr4r5vF",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_gB3CZrQBQQWVaBMYZZevgohT~gzm_tool_RvOgEQbzuKoGQzM31hrIJ28I",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-HgZuFuuBK",
                "organization_id": "org-6T1f9CaYwaKku4YRbov1yPXW",
                "short_url": "g-HgZuFuuBK-professional-coder-auto-programming",
                "author": {
                  "user_id": "user-7LUVlGv6xIwOK59Ou0OEuRmB",
                  "display_name": "Kevin Ivery",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": true
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "💻Professional Coder (Auto programming)",
                  "description": "A gpt expert at solving programming problems, automatic programming, one-click project generation",
                  "welcome_message": "Hello",
                  "prompt_starters": [
                    "Write an GPT model trainer in python",
                    "Develop a personal blogging system using java",
                    "Write a dynamic programming algorithm using c++",
                    "Write an Angry Birds in Unity"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-TYwBikt5eg3mLcW9p15dV5Sl?se=2123-10-17T01%3A57%3A59Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D8fc587ae-25c5-47de-8789-5ea51c2e0c16.png&sig=LfQcnXDMK/q3Zk%2B/addzOyzfWK/3ITL4I1q4fIzeBBQ%3D",
                  "categories": []
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T06:38:52.795749+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_DmiYXuazB1btAibx5YlluBvl~gzm_tool_kKBlDhD0Sje5GYFshHJoRU5G",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_DmiYXuazB1btAibx5YlluBvl~gzm_tool_ZkBLkwr1W01XRsVsMR2AYwgY",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_DmiYXuazB1btAibx5YlluBvl~gzm_tool_rcAS28XbK6coRQjFcfqNpZES",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          }
        ],
        "cursor": "6"
      }
    },
    {
      "info": {
        "id": "education",
        "title": "Education",
        "description": "Explore new ideas, revisit existing skills",
        "display_type": "ranked",
        "display_group": "Education",
        "locale": "en"
      },
      "list": {
        "items": [
          {
            "resource": {
              "gizmo": {
                "id": "g-9PKhaweyb",
                "organization_id": "org-p1dYivag5yIaAdsaAC6xNtHU",
                "short_url": "g-9PKhaweyb-mr-ranedeer",
                "author": {
                  "user_id": "user-N9Y38gVN4AMgE1Z7QP6MLkl1",
                  "display_name": "mr-ranedeer.com",
                  "link_to": "https://mr-ranedeer.com",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": false
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Mr. Ranedeer",
                  "description": "Meet Mr. Ranedeer, your personalized AI tutor! Version: 2.7 Reboot",
                  "welcome_message": "Hello",
                  "prompt_starters": [
                    "/plan I want to learn special relativity",
                    "/config",
                    "/language Chinese",
                    "/plan I want to learn integrals"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-X9LAlo8N3fj2hfnxqm3JJwoc?se=2123-10-16T20%3A42%3A58Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3DDALL%25C2%25B7E%25202023-11-04%252000.39.52%2520-%2520Digital%2520sticker%2520design%2520of%2520a%2520chibi%2520reindeer%2520in%2520a%2520simplistic%2520style%252C%2520gripping%2520a%2520graphite%2520pencil%2520with%2520a%2520pink%2520eraser.%2520The%2520reindeer%2527s%2520glasses%2520give%2520it%2520a%2520stud.png&sig=G1xWfBMbjTegInXdu4jL%2BuGH038OrwnuG9c18KBnYUQ%3D",
                  "categories": [
                    "education"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T17:23:21.585076+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_DqXSxvvaTfEcs8U1ux82Strz~gzm_tool_IxUJSw1AbAxnMJFTAjAw98sc",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_yUveNYOrXAUqdl0sqaDg49z9~gzm_tool_BrPBbI7WFIIx6QatzRrAstyp",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [
                {
                  "id": "gzm_cnf_KJHJDTgcfq3q8aKKmi6sX5wo~gzm_file_dlAXf4CUdLKKnFEOvgdiG4Bh",
                  "type": "text/plain",
                  "file_id": "",
                  "location": ""
                }
              ],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-GbLbctpPz",
                "organization_id": "org-H1czEudYgFRV2KkVg74xfJCG",
                "short_url": "g-GbLbctpPz-universal-primer",
                "author": {
                  "user_id": "user-2RZaTzFWNW3L0edbKJhUIGue",
                  "display_name": "runway.com",
                  "link_to": "https://runway.com",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Universal Primer",
                  "description": "Learn everything about anything",
                  "welcome_message": "Hi! What subject are you curious about today?",
                  "prompt_starters": [
                    "Explain how Transformers work in LLMs.",
                    "How does a Kalman filter work?",
                    "Teach me React and Redux.",
                    "How is the Navier Stokes equation derived?"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-thqJUpDWcYAMxgKhiwNYZFj0?se=2123-10-17T10%3A02%3A59Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D1fb91f30-1519-4f62-81f7-e141fa19f099.png&sig=UljckMV40AarnEvasy2Z2yiDGjVV1UFD/e0dtZkyETI%3D",
                  "categories": []
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-09T15:13:08.540295+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_fLfQHcX1ufjbj6qdypdg2bti",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_cmqM2agzA5OKeajt781GkSA3",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_kzjAnPD5275YKVToFWqwfDHS",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_zLCyAv8it71PJF9TcwhAEQuD",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_cr4ZLCd1w6NBLJaGX6c6PuuF",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_ulrrJ0ErC3zrH54erdhQEPu1",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_kyUu36ZCINqNlOIP0wPojzY3",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_k69DshQWQeQpYG0fZxUyl9vx",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_aySKWMrdtQ2hZzfqwQoT7Pr7",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_5mEFOfudANXbYUSSjf4wg9iE",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_QiJ8z9QLucVhl6ZgwmkH33wo",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_cbs03LPXO3pUopOMSj2LDjmG",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_NeDlG9XB5K8vNnpGy6KiwAwX",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_QjG2v9JuYLPCcZ0iXK1oKtT2",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_QhU2fLBfh12zJQGMkTGncCRh",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_4UGgokiBC0sGD41EUWwuGfE8",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_xs1UdF2jU1VirjKwxebEJc5p",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_qQrkOCVOx0D6JXMF5zwDOQpo",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_YjHoyZfCR1Sja0SzBkWuNzET",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_t1KuHON1Nn6X9K572pgkSqqw",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_QTuMqjItGSPf6AZwo3viq7uL",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_8pE6aJjiU8TgiNQFhZz3pV9Y",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_BhFhAmWPhKrZNM3vWlHk3IhW",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_fEPtN1GiO15OlRs1Mpz39G07",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_UFBEFRDtPGPZwClE0Guey6Zs",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_tTcrFbUxq03HODdkF4chSKW1",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_LQ11Rp9d03LpOA3YfnLxG6dG",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_BgrrWJ3CCIyCJ97kR3wrk9oN",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_YhfAKf8WFkKiYvusQ5sHNLBU",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_QBWxYtxrTeKDAxVgPyE6tObH",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_Sw2IY6WxX1iBjCMIvC8fGz0V",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_KDLI7dZKxnWMrBuxYzk0p6wQ",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_bRZ2Q9FDnRdArj9EjBi6PQbO",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_16hgEq4rQhJvPvuNHlUU2ENn",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_NbYfCuBuQxPpZuUnDPJOzuKC",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_kyaHg32bbEhryTzIvXORLL3u",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_euB1Py0n69V8PSqz3sIGzoBi",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_Lws1xiBkqg5bpv2oqeEcwYam",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_2nmmkHqVH9y2lNkHTyEEasp5",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_c8J88Dk9Zf9JLRJhajOhtOar",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_k7szTqotGCQQlFXG0P9DquTS",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_SxzKtqmBxN02i3Sqj1Juzge3~gzm_tool_GK0vr5FJ4shntdvAZqPJy8zD",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-QhTV4OrrZ",
                "organization_id": "org-FN6f32FDRoXyJjRiWtpqFioV",
                "short_url": "g-QhTV4OrrZ-ai-tutor",
                "author": {
                  "user_id": "user-cOBgM4IAGfa6zaxgoyvfcGzM",
                  "display_name": "techwithanirudh.com",
                  "link_to": "https://techwithanirudh.com",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": true
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "AI Tutor",
                  "description": "An AI tutor skilled in guiding students through their academic queries 📚🧑🏻‍🏫",
                  "welcome_message": "Hello, I'm Pragya, your AI Tutor! Ready to learn and create presentations together? 📚🖥️",
                  "prompt_starters": [
                    "What is the sum of the first 50 even numbers?",
                    "Can you create a question paper containing 5 questions on this chapter?",
                    "Could you please, give me a lesson plan for this chapter?",
                    "इस अध्याय पर मुझसे प्रश्नोत्तरी करें"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-RVGGRtLwF7cJbZYiIOYFOx1U?se=2123-10-17T06%3A11%3A54Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dc0b85240-6049-4900-8c8d-ce61cf749986.png&sig=twKIZaTxjQaM8jvoDJ1Z971nD%2BXYkvxIF08aXMoaEo0%3D",
                  "categories": []
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-09T15:13:46.110223+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_AkwoE5LtNZQ4OM3C5VJktVvr~gzm_tool_SQ4LTNOEepWjZUQp6WZzlInE",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_AkwoE5LtNZQ4OM3C5VJktVvr~gzm_tool_Y0k1aykxQZpGGpEKqgWMDjaj",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_AkwoE5LtNZQ4OM3C5VJktVvr~gzm_tool_dVMGLju16RZYOfiwudwN0lBO",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_AkwoE5LtNZQ4OM3C5VJktVvr~gzm_tool_UH5C4Mxr2I29PGCVgWBuZAhx",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_AkwoE5LtNZQ4OM3C5VJktVvr~gzm_tool_Vk139rO5KXKK2KBiOO687kxX",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_AkwoE5LtNZQ4OM3C5VJktVvr~gzm_tool_IwmyRtdyZd6HZPQvwUuJi22V",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_AkwoE5LtNZQ4OM3C5VJktVvr~gzm_tool_raSj0N4rXSEl9QdOKv4LOi3y",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_AkwoE5LtNZQ4OM3C5VJktVvr~gzm_tool_vKyx49AeA8rVDUvTmOmHEMjE",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_AkwoE5LtNZQ4OM3C5VJktVvr~gzm_tool_MyQZ2fBileUTgwRSToBYUDCt",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_AkwoE5LtNZQ4OM3C5VJktVvr~gzm_tool_PcCJWLvlEyWSv0mSgiTfTG1C",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_AkwoE5LtNZQ4OM3C5VJktVvr~gzm_tool_8ht21Gux7J8TB2g3GpxqQJyI",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_AkwoE5LtNZQ4OM3C5VJktVvr~gzm_tool_De5HgRHO3aBbvLAJbNIFg7RG",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-9YeZz6m6k",
                "organization_id": "org-v4X4LAt91fypMUUa97asvej3",
                "short_url": "g-9YeZz6m6k-math-solver",
                "author": {
                  "user_id": "user-4wqQWBLuPvX1n8YoftQCjqLn",
                  "display_name": "studyx.ai",
                  "link_to": "https://studyx.ai",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": true
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Math Solver",
                  "description": "Advanced math solver offers step-by-step solutions, powered by StudyX's 75+ million verified all-subject Community answers and enhanced web browsing.",
                  "welcome_message": "Hello! I'm here to help with your math problems. What can I solve for you today?",
                  "prompt_starters": [
                    "Find the equation of the tangent line to the curve \\( f(x) = x^3 - 2x^2 + 4x - 8 \\) at the point where \\( x = 2 \\).",
                    "Find a solution for this complex equation",
                    "Solve for \\( x \\) in the equation \\( 3x - 7 = 2x + 5 \\)",
                    "Solve for \\(\\log 25x=3\\)"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-tSZCMmjyqOBMHOnHPUxKQH8t?se=2123-10-21T09%3A02%3A36Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D7e1dfc13-782c-4d41-843f-6908894cf8d7.png&sig=8FWfLPP5oiPa515w7A4jjhjs9qYqy2kgAdjmTWuHCuI%3D",
                  "categories": [
                    "education"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T01:43:22.708108+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable",
                  "uses_function_calls"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_GYui16aHdfovycSfwtW83OkC~gzm_tool_fVKpra01RhUgR5k87hTWDvLc",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_ZyzK6QdTOYrhJRAmTg6xNUTE~gzm_tool_ThIsV454WLwfjb2lBGRE18PC",
                  "type": "plugins_prototype",
                  "settings": null,
                  "metadata": {
                    "action_id": "g-c4cb2842d79c8c064010d1c39d050a3f6fa2a94d",
                    "domain": "gpts.studyx.ai",
                    "raw_spec": {
                      "openapi": "3.0.0",
                      "info": {
                        "title": "Question Answer Search API",
                        "description": "This API retrieves similar questions and answers based on user input.",
                        "version": "1.0.0"
                      },
                      "servers": [
                        {
                          "url": "https://gpts.studyx.ai"
                        }
                      ],
                      "paths": {
                        "/api/studyx/v5/cloud/question/getQuestionAnswers": {
                          "post": {
                            "operationId": "getQuestionAnswers",
                            "summary": "Retrieves similar questions and answers based on the provided content.",
                            "requestBody": {
                              "required": true,
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "content": {
                                        "type": "string",
                                        "description": "all of the User-provided content to search for similar questions."
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "responses": {
                              "200": {
                                "description": "Successful response with similar questions and answers.",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "type": "object",
                                      "properties": {
                                        "code": {
                                          "type": "integer",
                                          "description": "Response code indicating success or failure."
                                        },
                                        "msg": {
                                          "type": "string",
                                          "description": "Message detailing the response."
                                        },
                                        "data": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "id": {
                                                "type": "string",
                                                "description": "Unique identifier for the question."
                                              },
                                              "qntId": {
                                                "type": "integer",
                                                "description": "Question number identifier."
                                              },
                                              "url": {
                                                "type": "string",
                                                "format": "uri",
                                                "description": "URL to the question."
                                              },
                                              "answer": {
                                                "type": "string",
                                                "description": "Answer to the question."
                                              },
                                              "qntContent": {
                                                "type": "string",
                                                "description": "Content of the question."
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "json_schema": null,
                    "auth": {
                      "type": "service_http",
                      "instructions": "",
                      "authorization_type": "bearer",
                      "verification_tokens": {},
                      "custom_auth_header": ""
                    },
                    "privacy_policy_url": "https://openai.com/policies/privacy-policy"
                  }
                },
                {
                  "id": "gzm_cnf_GYui16aHdfovycSfwtW83OkC~gzm_tool_wOG7RKubrh2XqjGIpZBVKYlV",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_qGPZ2xwTPGpHi7Aes6QJdg6X~gzm_tool_Nyznn6wSduXq61seTuJMHXGQ",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-ZdfrSRAyo",
                "organization_id": "org-GFZKUGk2hNFdYf8sq3DdibuM",
                "short_url": "g-ZdfrSRAyo-alphanotes-gpt",
                "author": {
                  "user_id": "user-GldlvGpG8eu7NMXtoR4utGnb",
                  "display_name": "davideai.dev",
                  "link_to": "https://davideai.dev",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "AlphaNotes GPT",
                  "description": "Transform YouTube videos or web articles into your personal study guide or study aids, making learning efficient and enjoyable.",
                  "welcome_message": "How can I assist with your plugin?",
                  "prompt_starters": [
                    "help",
                    "Can you summarize this video? https://www.youtube.com/watch?v=azRndqqW7l0",
                    "Can you generate notes for this article? https://docs.chainstack.com/docs/authentication-methods-for-different-scenarios",
                    "Can you find YouTube videos on Thermodynamics",
                    "Can you export this to PDF?",
                    "Can you generate notes for this article? https://docs.chainstack.com/docs/authentication-methods-for-different-scenarios Style the headings in sentence case. Remove the `Summary` section. Place the `Suggested Areas for Deeper Study` after the `Questions & Quizzes` section. Separate the correct answers from the `Questions & Quizzes` section and place them at the end as a separate section. Mark them as `Question 1 answer:  correct answer`.",
                    "Fetch the raw transcript for this video: https://www.youtube.com/watch?v=azRndqqW7l0"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-0puZS53HRUM93uhJ1w8ZRgf8?se=2123-10-15T15%3A14%3A02Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dalphanotes%2520cyberbrain%2520logo.png&sig=7t0/PntGh0KQRUNNDZQEy49hbx3sPzGgBNP8p9C5RFg%3D",
                  "categories": []
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T23:14:10.927837+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable",
                  "uses_function_calls"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_nBKPe1YEQQQuQW9OuEsYbvqd~gzm_tool_gQxUB9OMDAPzKALShNkf7y3g",
                  "type": "plugins_prototype",
                  "settings": null,
                  "metadata": {
                    "action_id": "g-ae66fdb6027a0f0769ce3a04a09be3301e4aebf5",
                    "domain": "ainotes.alphanotes.one",
                    "raw_spec": {
                      "openapi": "3.0.0",
                      "info": {
                        "title": "AlphaNotes",
                        "version": "0.1.0",
                        "description": "This is the backend for a GPT that provides tools to create summaries and study aids for YouTube videos and web articles."
                      },
                      "paths": {
                        "/create_summary": {
                          "post": {
                            "summary": "Create a summary of the video",
                            "operationId": "videoSummary",
                            "description": "This endpoint returns the title, the thumbnail's URL (show after title), and the transcript or video summary.  Use this endpoint when the user asks for a summary. Also follow the instruction from the assistant_hint.\n",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/Video"
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/VideoResponse"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/generate_notes": {
                          "post": {
                            "summary": "Generate notes and study aids for the video course",
                            "operationId": "generateNotes",
                            "description": "This endpoint returns the title, the thumbnail's URL, always show after title, and the transcript or already made notes. Use this endpoint when the user asks to generate notes or a study aid. Also follow the instruction from the assistant_hint.\n",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/VideoURL"
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/NotesResponse"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/get_transcript": {
                          "post": {
                            "summary": "Get the transcript of a video",
                            "operationId": "videoTranscript",
                            "description": "This endpoint returns the title, the thumbnail's URL (show after title), the transcript of a video, and a pdf link. Use it when the user asks for the video transcript only. The user might ask follow up questions on it, so don't call other endpoints but use what you get.\n",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/Video"
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/VideoResponse"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/create_pdf": {
                          "post": {
                            "summary": "Create PDF from Markdown and upload to File.io",
                            "operationId": "createPdf",
                            "description": "This endpoint converts Markdown text to PDF and provides a file.io link.  Use it for user requests to generate/create/make/export/print a PDF from generated content. Don't add dev contact in the pdf. Adapt Markdown for JSON input.\n",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/TextModel"
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "200": {
                                "description": "Successfully Created PDF and Uploaded to Dropbox",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/SharedLinkResponse"
                                    }
                                  }
                                }
                              },
                              "400": {
                                "description": "Dropbox API Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              },
                              "500": {
                                "description": "An unexpected error occurred",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/get_chunk": {
                          "get": {
                            "summary": "Retrieve a specific chunk of the video transcript if too long",
                            "operationId": "getChunk",
                            "description": "This endpoint returns a specific chunk of the video transcript based on a unique ID and chunk index. Use it when the plugin returns you a unique_id. Keep calling it until you get all the chunks.\n",
                            "parameters": [
                              {
                                "name": "unique_id",
                                "in": "query",
                                "description": "The unique ID associated with the video transcript",
                                "required": true,
                                "schema": {
                                  "type": "string"
                                }
                              },
                              {
                                "name": "chunk_index",
                                "in": "query",
                                "description": "The index of the chunk to retrieve",
                                "required": true,
                                "schema": {
                                  "type": "integer"
                                }
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/ChunkResponse"
                                    }
                                  }
                                }
                              },
                              "400": {
                                "description": "Invalid chunk index",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              },
                              "404": {
                                "description": "Invalid unique ID",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/summarize_article": {
                          "post": {
                            "summary": "Scrape an article and returns its content for summarization",
                            "operationId": "summarizeArticle",
                            "description": "This endpoint scrapes the content of an article and returns its content along with listing any YouTube links found in the article. Use this endpoint when the user asks for an article summary or gives a URL that is not from YouTube. Also, follow the instruction from the assistant_hint.\n",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/Article"
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/SuccessfulArticleResponse"
                                    }
                                  }
                                }
                              },
                              "404": {
                                "description": "Article Not Found",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/UnavailableArticleError"
                                    }
                                  }
                                }
                              },
                              "413": {
                                "description": "Article Too Long",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/ArticleTooLongError"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              },
                              "500": {
                                "description": "Processing Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/ProcessingError"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/take_notes_from_article": {
                          "post": {
                            "summary": "Scrape an article and returns its content for generating study aids",
                            "operationId": "notesArticle",
                            "description": "This endpoint scrapes the content of an article and returns it along with listing any YouTube links found. Use this endpoint when the user asks for making notes of an article or gives a URL that is not from YouTube asking for notes.  Also, follow the instruction from the assistant_hint.\n",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/Article"
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/SuccessfulArticleResponse"
                                    }
                                  }
                                }
                              },
                              "404": {
                                "description": "Article Not Found",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/UnavailableArticleError"
                                    }
                                  }
                                }
                              },
                              "413": {
                                "description": "Article Too Long",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/ArticleTooLongError"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              },
                              "500": {
                                "description": "Processing Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/ProcessingError"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/search_videos": {
                          "post": {
                            "summary": "Search for YouTube videos",
                            "operationId": "searchVideos",
                            "description": "This endpoint searches for YouTube videos based on the query term and region code using the YouTube API V3. Come up with a good search query based on what the user needs. Use the US region code if no region or language are specified.\n",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "query_term": {
                                        "type": "string",
                                        "description": "The search term for querying YouTube videos."
                                      },
                                      "region_code": {
                                        "type": "string",
                                        "description": "The region code for filtering YouTube videos.",
                                        "nullable": true
                                      }
                                    }
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "type": "object",
                                      "properties": {
                                        "assistant_hint": {
                                          "type": "string"
                                        },
                                        "data": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "404": {
                                "description": "Video Not Found",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "type": "object",
                                      "properties": {
                                        "detail": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "type": "object",
                                      "properties": {
                                        "detail": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "500": {
                                "description": "Processing Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "type": "object",
                                      "properties": {
                                        "detail": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/get_help": {
                          "get": {
                            "summary": "Get help description",
                            "description": "This endpoint returns a help description.",
                            "operationId": "getHelp",
                            "parameters": [],
                            "responses": {
                              "200": {
                                "description": "Successful response",
                                "headers": {
                                  "X-PluginLab-Ignore-Quota": {
                                    "schema": {
                                      "type": "string",
                                      "example": "1"
                                    }
                                  }
                                },
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "components": {
                        "schemas": {
                          "HTTPValidationError": {
                            "type": "object",
                            "title": "HTTPValidationError",
                            "properties": {
                              "detail": {
                                "type": "array",
                                "title": "Detail",
                                "items": {
                                  "$ref": "#/components/schemas/ValidationError"
                                }
                              }
                            }
                          },
                          "ValidationError": {
                            "type": "object",
                            "title": "ValidationError",
                            "required": [
                              "loc",
                              "msg",
                              "type"
                            ],
                            "properties": {
                              "loc": {
                                "type": "array",
                                "title": "Location",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "integer"
                                    }
                                  ]
                                }
                              },
                              "msg": {
                                "type": "string",
                                "title": "Message"
                              },
                              "type": {
                                "type": "string",
                                "title": "Error Type"
                              }
                            }
                          },
                          "Video": {
                            "type": "object",
                            "title": "Video",
                            "required": [
                              "url"
                            ],
                            "properties": {
                              "url": {
                                "type": "string",
                                "title": "Url"
                              }
                            }
                          },
                          "VideoURL": {
                            "type": "object",
                            "title": "VideoURL",
                            "required": [
                              "url"
                            ],
                            "properties": {
                              "url": {
                                "type": "string",
                                "title": "Url"
                              }
                            }
                          },
                          "VideoResponse": {
                            "type": "object",
                            "title": "VideoResponse",
                            "required": [
                              "title",
                              "thumbnail_url",
                              "token_count",
                              "content",
                              "assistant_hint"
                            ],
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "The title of the video"
                              },
                              "thumbnail_url": {
                                "type": "string",
                                "format": "uri",
                                "description": "The URL of the video thumbnail"
                              },
                              "token_count": {
                                "type": "integer",
                                "description": "The token count"
                              },
                              "content": {
                                "oneOf": [
                                  {
                                    "$ref": "#/components/schemas/Transcript"
                                  },
                                  {
                                    "$ref": "#/components/schemas/Summary"
                                  }
                                ]
                              },
                              "assistant_hint": {
                                "type": "string",
                                "description": "The instructions to follow"
                              }
                            }
                          },
                          "NotesResponse": {
                            "type": "object",
                            "title": "NotesResponse",
                            "required": [
                              "title",
                              "thumbnail_url",
                              "token_count",
                              "assistant_hint",
                              "content"
                            ],
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "The title of the video"
                              },
                              "thumbnail_url": {
                                "type": "string",
                                "format": "uri",
                                "description": "The URL of the video thumbnail"
                              },
                              "token_count": {
                                "type": "integer",
                                "description": "The token count of the content"
                              },
                              "assistant_hint": {
                                "type": "string",
                                "description": "The instructions to follow"
                              },
                              "content": {
                                "oneOf": [
                                  {
                                    "$ref": "#/components/schemas/Transcript"
                                  },
                                  {
                                    "$ref": "#/components/schemas/Notes"
                                  }
                                ]
                              }
                            }
                          },
                          "Transcript": {
                            "type": "string",
                            "description": "The full transcript of the video"
                          },
                          "Notes": {
                            "type": "string",
                            "description": "The generated notes for the video"
                          },
                          "Summary": {
                            "type": "string",
                            "description": "The generated summary of the video"
                          },
                          "TextModel": {
                            "type": "object",
                            "title": "TextModel",
                            "required": [
                              "text"
                            ],
                            "properties": {
                              "text": {
                                "type": "string",
                                "description": "Markdown text to be converted to PDF",
                                "example": "## This is a title\nThis is some text."
                              }
                            }
                          },
                          "SharedLinkResponse": {
                            "type": "object",
                            "title": "SharedLinkResponse",
                            "required": [
                              "link"
                            ],
                            "properties": {
                              "link": {
                                "type": "string",
                                "format": "uri",
                                "description": "Shareable Dropbox link of the uploaded PDF"
                              }
                            }
                          },
                          "ChunkResponse": {
                            "type": "object",
                            "properties": {
                              "unique_id": {
                                "type": "string",
                                "description": "The unique ID associated with the video transcript"
                              },
                              "video_title": {
                                "type": "string",
                                "description": "The title of the video"
                              },
                              "current_chunk_index": {
                                "type": "integer",
                                "description": "The index of the current chunk"
                              },
                              "next_chunk_to_fetch": {
                                "type": "integer",
                                "description": "The index of the next chunk to fetch"
                              },
                              "Chunks_left_to_fetch": {
                                "type": "integer",
                                "description": "The number of chunks left to fetch"
                              },
                              "chunk": {
                                "type": "object",
                                "description": "The content of the current chunk"
                              }
                            }
                          },
                          "Article": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "format": "uri"
                              }
                            }
                          },
                          "SuccessfulArticleResponse": {
                            "type": "object",
                            "properties": {
                              "article_content": {
                                "type": "string"
                              },
                              "youtube_links": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "source": {
                                "type": "string",
                                "format": "uri"
                              },
                              "assistant_hint": {
                                "type": "string"
                              }
                            }
                          },
                          "UnavailableArticleError": {
                            "type": "object",
                            "properties": {
                              "UNAVAILABLE_ARTICLE_ERROR": {
                                "type": "string"
                              }
                            }
                          },
                          "ProcessingError": {
                            "type": "object",
                            "properties": {
                              "PROCESSING_ERROR": {
                                "type": "string"
                              }
                            }
                          },
                          "ArticleTooLongError": {
                            "type": "object",
                            "properties": {
                              "ARTICLE_TOO_LONG": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "servers": [
                        {
                          "url": "https://ainotes.alphanotes.one"
                        }
                      ]
                    },
                    "json_schema": null,
                    "auth": {
                      "type": "oauth",
                      "instructions": "",
                      "client_url": "https://ainotes.alphanotes.one/oauth/authorize",
                      "scope": "all",
                      "authorization_url": "https://ainotes.alphanotes.one/oauth/token",
                      "authorization_content_type": "application/x-www-form-urlencoded",
                      "verification_tokens": {},
                      "pkce_required": false,
                      "token_exchange_method": "default_post"
                    },
                    "privacy_policy_url": "https://www.alphanotes.one/policy"
                  }
                },
                {
                  "id": "gzm_cnf_nBKPe1YEQQQuQW9OuEsYbvqd~gzm_tool_HZoA3uh8yEdOSa1Qu0d0OGnr",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_nBKPe1YEQQQuQW9OuEsYbvqd~gzm_tool_zpyfRVcVdkkxxQJIvhXCKc6P",
                  "type": "plugins_prototype",
                  "settings": null,
                  "metadata": {
                    "action_id": "g-ae66fdb6027a0f0769ce3a04a09be3301e4aebf5",
                    "domain": "ainotes.alphanotes.one",
                    "raw_spec": {
                      "openapi": "3.0.0",
                      "info": {
                        "title": "AlphaNotes",
                        "version": "0.1.0",
                        "description": "This is the backend for a GPT that provides tools to create summaries and study aids for YouTube videos and web articles."
                      },
                      "paths": {
                        "/create_summary": {
                          "post": {
                            "summary": "Create a summary of the video",
                            "operationId": "videoSummary",
                            "description": "This endpoint returns the title, the thumbnail's URL (show after title), and the transcript or video summary.  Use this endpoint when the user asks for a summary. Also follow the instruction from the assistant_hint.\n",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/Video"
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/VideoResponse"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/generate_notes": {
                          "post": {
                            "summary": "Generate notes and study aids for the video course",
                            "operationId": "generateNotes",
                            "description": "This endpoint returns the title, the thumbnail's URL, always show after title, and the transcript or already made notes. Use this endpoint when the user asks to generate notes or a study aid. Also follow the instruction from the assistant_hint.\n",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/VideoURL"
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/NotesResponse"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/get_transcript": {
                          "post": {
                            "summary": "Get the transcript of a video",
                            "operationId": "videoTranscript",
                            "description": "This endpoint returns the title, the thumbnail's URL (show after title), the transcript of a video, and a pdf link. Use it when the user asks for the video transcript only. The user might ask follow up questions on it, so don't call other endpoints but use what you get.\n",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/Video"
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/VideoResponse"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/create_pdf": {
                          "post": {
                            "summary": "Create PDF from Markdown and upload to File.io",
                            "operationId": "createPdf",
                            "description": "This endpoint converts Markdown text to PDF and provides a file.io link.  Use it for user requests to generate/create/make/export/print a PDF from generated content. Don't add dev contact in the pdf. Adapt Markdown for JSON input.\n",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/TextModel"
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "200": {
                                "description": "Successfully Created PDF and Uploaded to Dropbox",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/SharedLinkResponse"
                                    }
                                  }
                                }
                              },
                              "400": {
                                "description": "Dropbox API Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              },
                              "500": {
                                "description": "An unexpected error occurred",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/get_chunk": {
                          "get": {
                            "summary": "Retrieve a specific chunk of the video transcript if too long",
                            "operationId": "getChunk",
                            "description": "This endpoint returns a specific chunk of the video transcript based on a unique ID and chunk index. Use it when the plugin returns you a unique_id. Keep calling it until you get all the chunks.\n",
                            "parameters": [
                              {
                                "name": "unique_id",
                                "in": "query",
                                "description": "The unique ID associated with the video transcript",
                                "required": true,
                                "schema": {
                                  "type": "string"
                                }
                              },
                              {
                                "name": "chunk_index",
                                "in": "query",
                                "description": "The index of the chunk to retrieve",
                                "required": true,
                                "schema": {
                                  "type": "integer"
                                }
                              }
                            ],
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/ChunkResponse"
                                    }
                                  }
                                }
                              },
                              "400": {
                                "description": "Invalid chunk index",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              },
                              "404": {
                                "description": "Invalid unique ID",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/summarize_article": {
                          "post": {
                            "summary": "Scrape an article and returns its content for summarization",
                            "operationId": "summarizeArticle",
                            "description": "This endpoint scrapes the content of an article and returns its content along with listing any YouTube links found in the article. Use this endpoint when the user asks for an article summary or gives a URL that is not from YouTube. Also, follow the instruction from the assistant_hint.\n",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/Article"
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/SuccessfulArticleResponse"
                                    }
                                  }
                                }
                              },
                              "404": {
                                "description": "Article Not Found",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/UnavailableArticleError"
                                    }
                                  }
                                }
                              },
                              "413": {
                                "description": "Article Too Long",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/ArticleTooLongError"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              },
                              "500": {
                                "description": "Processing Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/ProcessingError"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/take_notes_from_article": {
                          "post": {
                            "summary": "Scrape an article and returns its content for generating study aids",
                            "operationId": "notesArticle",
                            "description": "This endpoint scrapes the content of an article and returns it along with listing any YouTube links found. Use this endpoint when the user asks for making notes of an article or gives a URL that is not from YouTube asking for notes.  Also, follow the instruction from the assistant_hint.\n",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "$ref": "#/components/schemas/Article"
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/SuccessfulArticleResponse"
                                    }
                                  }
                                }
                              },
                              "404": {
                                "description": "Article Not Found",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/UnavailableArticleError"
                                    }
                                  }
                                }
                              },
                              "413": {
                                "description": "Article Too Long",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/ArticleTooLongError"
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/HTTPValidationError"
                                    }
                                  }
                                }
                              },
                              "500": {
                                "description": "Processing Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "$ref": "#/components/schemas/ProcessingError"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/search_videos": {
                          "post": {
                            "summary": "Search for YouTube videos",
                            "operationId": "searchVideos",
                            "description": "This endpoint searches for YouTube videos based on the query term and region code using the YouTube API V3. Come up with a good search query based on what the user needs. Use the US region code if no region or language are specified.\n",
                            "requestBody": {
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "query_term": {
                                        "type": "string",
                                        "description": "The search term for querying YouTube videos."
                                      },
                                      "region_code": {
                                        "type": "string",
                                        "description": "The region code for filtering YouTube videos.",
                                        "nullable": true
                                      }
                                    }
                                  }
                                }
                              },
                              "required": true
                            },
                            "responses": {
                              "200": {
                                "description": "Successful Response",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "type": "object",
                                      "properties": {
                                        "assistant_hint": {
                                          "type": "string"
                                        },
                                        "data": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "404": {
                                "description": "Video Not Found",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "type": "object",
                                      "properties": {
                                        "detail": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "422": {
                                "description": "Validation Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "type": "object",
                                      "properties": {
                                        "detail": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "500": {
                                "description": "Processing Error",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "type": "object",
                                      "properties": {
                                        "detail": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "/get_help": {
                          "get": {
                            "summary": "Get help description",
                            "description": "This endpoint returns a help description.",
                            "operationId": "getHelp",
                            "parameters": [],
                            "responses": {
                              "200": {
                                "description": "Successful response",
                                "headers": {
                                  "X-PluginLab-Ignore-Quota": {
                                    "schema": {
                                      "type": "string",
                                      "example": "1"
                                    }
                                  }
                                },
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "type": "object",
                                      "properties": {
                                        "description": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "components": {
                        "schemas": {
                          "HTTPValidationError": {
                            "type": "object",
                            "title": "HTTPValidationError",
                            "properties": {
                              "detail": {
                                "type": "array",
                                "title": "Detail",
                                "items": {
                                  "$ref": "#/components/schemas/ValidationError"
                                }
                              }
                            }
                          },
                          "ValidationError": {
                            "type": "object",
                            "title": "ValidationError",
                            "required": [
                              "loc",
                              "msg",
                              "type"
                            ],
                            "properties": {
                              "loc": {
                                "type": "array",
                                "title": "Location",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "integer"
                                    }
                                  ]
                                }
                              },
                              "msg": {
                                "type": "string",
                                "title": "Message"
                              },
                              "type": {
                                "type": "string",
                                "title": "Error Type"
                              }
                            }
                          },
                          "Video": {
                            "type": "object",
                            "title": "Video",
                            "required": [
                              "url"
                            ],
                            "properties": {
                              "url": {
                                "type": "string",
                                "title": "Url"
                              }
                            }
                          },
                          "VideoURL": {
                            "type": "object",
                            "title": "VideoURL",
                            "required": [
                              "url"
                            ],
                            "properties": {
                              "url": {
                                "type": "string",
                                "title": "Url"
                              }
                            }
                          },
                          "VideoResponse": {
                            "type": "object",
                            "title": "VideoResponse",
                            "required": [
                              "title",
                              "thumbnail_url",
                              "token_count",
                              "content",
                              "assistant_hint"
                            ],
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "The title of the video"
                              },
                              "thumbnail_url": {
                                "type": "string",
                                "format": "uri",
                                "description": "The URL of the video thumbnail"
                              },
                              "token_count": {
                                "type": "integer",
                                "description": "The token count"
                              },
                              "content": {
                                "oneOf": [
                                  {
                                    "$ref": "#/components/schemas/Transcript"
                                  },
                                  {
                                    "$ref": "#/components/schemas/Summary"
                                  }
                                ]
                              },
                              "assistant_hint": {
                                "type": "string",
                                "description": "The instructions to follow"
                              }
                            }
                          },
                          "NotesResponse": {
                            "type": "object",
                            "title": "NotesResponse",
                            "required": [
                              "title",
                              "thumbnail_url",
                              "token_count",
                              "assistant_hint",
                              "content"
                            ],
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "The title of the video"
                              },
                              "thumbnail_url": {
                                "type": "string",
                                "format": "uri",
                                "description": "The URL of the video thumbnail"
                              },
                              "token_count": {
                                "type": "integer",
                                "description": "The token count of the content"
                              },
                              "assistant_hint": {
                                "type": "string",
                                "description": "The instructions to follow"
                              },
                              "content": {
                                "oneOf": [
                                  {
                                    "$ref": "#/components/schemas/Transcript"
                                  },
                                  {
                                    "$ref": "#/components/schemas/Notes"
                                  }
                                ]
                              }
                            }
                          },
                          "Transcript": {
                            "type": "string",
                            "description": "The full transcript of the video"
                          },
                          "Notes": {
                            "type": "string",
                            "description": "The generated notes for the video"
                          },
                          "Summary": {
                            "type": "string",
                            "description": "The generated summary of the video"
                          },
                          "TextModel": {
                            "type": "object",
                            "title": "TextModel",
                            "required": [
                              "text"
                            ],
                            "properties": {
                              "text": {
                                "type": "string",
                                "description": "Markdown text to be converted to PDF",
                                "example": "## This is a title\nThis is some text."
                              }
                            }
                          },
                          "SharedLinkResponse": {
                            "type": "object",
                            "title": "SharedLinkResponse",
                            "required": [
                              "link"
                            ],
                            "properties": {
                              "link": {
                                "type": "string",
                                "format": "uri",
                                "description": "Shareable Dropbox link of the uploaded PDF"
                              }
                            }
                          },
                          "ChunkResponse": {
                            "type": "object",
                            "properties": {
                              "unique_id": {
                                "type": "string",
                                "description": "The unique ID associated with the video transcript"
                              },
                              "video_title": {
                                "type": "string",
                                "description": "The title of the video"
                              },
                              "current_chunk_index": {
                                "type": "integer",
                                "description": "The index of the current chunk"
                              },
                              "next_chunk_to_fetch": {
                                "type": "integer",
                                "description": "The index of the next chunk to fetch"
                              },
                              "Chunks_left_to_fetch": {
                                "type": "integer",
                                "description": "The number of chunks left to fetch"
                              },
                              "chunk": {
                                "type": "object",
                                "description": "The content of the current chunk"
                              }
                            }
                          },
                          "Article": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "format": "uri"
                              }
                            }
                          },
                          "SuccessfulArticleResponse": {
                            "type": "object",
                            "properties": {
                              "article_content": {
                                "type": "string"
                              },
                              "youtube_links": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "source": {
                                "type": "string",
                                "format": "uri"
                              },
                              "assistant_hint": {
                                "type": "string"
                              }
                            }
                          },
                          "UnavailableArticleError": {
                            "type": "object",
                            "properties": {
                              "UNAVAILABLE_ARTICLE_ERROR": {
                                "type": "string"
                              }
                            }
                          },
                          "ProcessingError": {
                            "type": "object",
                            "properties": {
                              "PROCESSING_ERROR": {
                                "type": "string"
                              }
                            }
                          },
                          "ArticleTooLongError": {
                            "type": "object",
                            "properties": {
                              "ARTICLE_TOO_LONG": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "servers": [
                        {
                          "url": "https://ainotes.alphanotes.one"
                        }
                      ]
                    },
                    "json_schema": null,
                    "auth": {
                      "type": "oauth",
                      "instructions": "",
                      "client_url": "https://ainotes.alphanotes.one/oauth/authorize",
                      "scope": "all",
                      "authorization_url": "https://ainotes.alphanotes.one/oauth/token",
                      "authorization_content_type": "application/x-www-form-urlencoded",
                      "verification_tokens": {},
                      "pkce_required": false,
                      "token_exchange_method": "default_post"
                    },
                    "privacy_policy_url": "https://www.alphanotes.one/policy"
                  }
                },
                {
                  "id": "gzm_cnf_nBKPe1YEQQQuQW9OuEsYbvqd~gzm_tool_eYyqHu2X6Xa9BkkKoXzDbp4J",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-f9q8CSAJo",
                "organization_id": "org-IEkAwBmIaSuKSWF9GQWoFrw5",
                "short_url": "g-f9q8CSAJo-mba-admission-consultant",
                "author": {
                  "user_id": "user-sOLrG7S00AAyUBr4T8tClNLL",
                  "display_name": "jenova.ai",
                  "link_to": "https://jenova.ai",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "MBA Admission Consultant",
                  "description": "Helping you get into the business school of your dreams. Profile reviews, school/application guide, application reviews, interview practice, and more.",
                  "welcome_message": "",
                  "prompt_starters": [
                    "Can you do a profile review for me?",
                    "What are the top 10 MBA programs?",
                    "Can you help review my resume?",
                    "Can you help me with my upcoming interview?"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-zToNcMgHVyjCQ22HdgglodMa?se=2123-12-10T20%3A51%3A35Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3DDALL%25C2%25B7E%25202024-01-03%252015.51.24%2520-%2520A%2520logo%2520for%2520an%2520MBA%2520admission%2520consultant%252C%2520resembling%2520a%2520traditional%2520school%2520emblem.%2520The%2520logo%2520is%2520circular%252C%2520featuring%2520academic%2520symbols%2520such%2520as%2520a%2520book%252C%2520pen%252C%2520.png&sig=E5mcAlwS9flvOQSiA4Q0nKv0C6V2fEqg4M8BA9lTjyM%3D",
                  "categories": [
                    "education"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-11T05:10:01.367911+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_uGe9xVXbz3Ek9wzlQTY7MDUy~gzm_tool_wCx3FtNeZYb7bAtLC9LWnlrN",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          }
        ],
        "cursor": "6"
      }
    },
    {
      "info": {
        "id": "lifestyle",
        "title": "Lifestyle",
        "description": "Get tips on travel, workouts, style, food, and more",
        "display_type": "ranked",
        "display_group": "Lifestyle",
        "locale": "en"
      },
      "list": {
        "items": [
          {
            "resource": {
              "gizmo": {
                "id": "g-z77yDe7Vu",
                "organization_id": "org-mNzzLC8fK58zWNV57bqOk4Xp",
                "short_url": "g-z77yDe7Vu-books",
                "author": {
                  "user_id": "user-G5slpPRs5pTl2xkDhJMPebPB",
                  "display_name": "Josh Brent N. Villocido",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": true
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Books",
                  "description": "Your AI guide in the world of literature and reading.",
                  "welcome_message": "Hello, bibliophile! I'm Books, your AI companion in the enchanting world of reading. Whether you're into nail-biting thrillers, grand sci-fi adventures, or timeless classics, I'm here to guide you to your next favorite book. What genre are you thinking of exploring today?",
                  "prompt_starters": [
                    "Can you recommend a book for a rainy day?",
                    "What's a good historical fiction novel?",
                    "I love mysteries, any suggestions?",
                    "Tell me about a classic novel I should read."
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-XCMAe4nJ8ZvihVHDa0N1Uhdi?se=2123-10-17T18%3A56%3A38Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D4c345735-7a64-490e-8b30-547e99179964.png&sig=Z1dObbINdy52ZyFJnwfBvyUaHvQQD2/s2L3yGI6ZgIQ%3D",
                  "categories": [
                    "lifestyle"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-11T19:44:03.143116+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_xe3WiEOsne12IZVPB8pQpbaX~gzm_tool_px5MqlGewtBShxBbCV1CXZaF",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_xe3WiEOsne12IZVPB8pQpbaX~gzm_tool_1vbRqccISLYBoyaewNfxp39c",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_xe3WiEOsne12IZVPB8pQpbaX~gzm_tool_4KTtSC8IRIZvyVZ3SbFoJ3iH",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-1zMekbWTA",
                "organization_id": "org-7hdUoDmN8vcMm0bntFYki1wn",
                "short_url": "g-1zMekbWTA-tattoo-gpt",
                "author": {
                  "user_id": "user-U4GcFpbp4ipxNZMJ0jUAuvbR",
                  "display_name": "Michael Moncada",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Tattoo GPT",
                  "description": "Tattoo GPT designs your tattoo. It assists you in refining your tattoo ideas, suggests designs, generates visual previews of the designs, and offers customization options. It recommends tattoo artists or studios and provides aftercare advice.",
                  "welcome_message": "Hello",
                  "prompt_starters": [
                    "Design my tattoo!",
                    "How do I care for my tattoo?",
                    "Who are highly rated Tattoo Artists in my area?",
                    "Redesign a tattoo based on a photo I upload"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-5gbnQcPkuruwkwHjP2ptHmuT?se=2123-10-17T16%3A34%3A29Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dtattoo%2520gpt.webp&sig=yP9JXK8Sd9nZUp7heSabe4%2BkryFN57%2BEJiDrIet/Vps%3D",
                  "categories": []
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-11T19:46:06.948558+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_LkMVn6LQRlclYCG2yquMuIli~gzm_tool_C2jvVNG7Qyofp9WsETRvavox",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_LkMVn6LQRlclYCG2yquMuIli~gzm_tool_XtVVnrGp25QYYAQuE4qoN0VG",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_LkMVn6LQRlclYCG2yquMuIli~gzm_tool_R3vRQe5GKDgHH5x3z4JhH5Z5",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-WxckXARTP",
                "organization_id": "org-ElfWiqtoblJpkMcAVX0ynOmV",
                "short_url": "g-WxckXARTP-astrology-birth-chart-gpt",
                "author": {
                  "user_id": "user-MGnnW5eKBQJj3hWAkZj5ODIW",
                  "display_name": "Dalexa Limited",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "Astrology Birth Chart GPT",
                  "description": "Expert astrologer GPT that needs your birth info to answer queries.",
                  "welcome_message": "Hello! Please share your birth date, time, and location for your astrology reading.",
                  "prompt_starters": [
                    "What does my birth chart say about me?",
                    "Can you analyze my love life through astrology?",
                    "Tell me about my career prospects astrologically.",
                    "How will the planets affect me this year?"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-OnurXUsvFsbNrxjaOpc5OpzH?se=2123-10-18T00%3A30%3A30Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dauthority-astrology-hero-image.png&sig=iyJ77YH%2BPLJxbVDisqIBji06MIpyvHHx8MRLxrppTZ4%3D",
                  "categories": []
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T17:52:36.072537+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable",
                  "uses_function_calls"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_0bw1ZXKg2FMk3EaGfLiKGWAy~gzm_tool_lcuAT38OOzgBG3ywHdp6RpbK",
                  "type": "plugins_prototype",
                  "settings": null,
                  "metadata": {
                    "action_id": "g-bc87409979fce984b622d2a030abc8dd0a0f6dbb",
                    "domain": "authorityastrology.com",
                    "raw_spec": {
                      "openapi": "3.1.0",
                      "info": {
                        "title": "Astrology API",
                        "description": "API for calculating astrological birth charts.",
                        "version": "v1.0.0"
                      },
                      "servers": [
                        {
                          "url": "https://authorityastrology.com/api"
                        }
                      ],
                      "paths": {
                        "/astro-gpt": {
                          "post": {
                            "description": "Calculate an astrological birth chart.",
                            "operationId": "CalculateBirthChart",
                            "requestBody": {
                              "required": true,
                              "content": {
                                "application/json": {
                                  "schema": {
                                    "type": "object",
                                    "properties": {
                                      "firstName": {
                                        "type": "string",
                                        "example": "Tim"
                                      },
                                      "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "tim@gmail.com"
                                      },
                                      "birthData": {
                                        "type": "object",
                                        "properties": {
                                          "birthDate": {
                                            "type": "string",
                                            "format": "date",
                                            "example": "1985-01-08"
                                          },
                                          "birthTime": {
                                            "type": "string",
                                            "format": "time",
                                            "example": "06:08"
                                          },
                                          "birthLatitude": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 52.3511
                                          },
                                          "birthLongitude": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 4.6203
                                          },
                                          "placeOfBirth": {
                                            "type": "string",
                                            "example": "Heemstede, Netherlands"
                                          }
                                        },
                                        "required": [
                                          "birthDate",
                                          "birthTime",
                                          "birthLatitude",
                                          "birthLongitude",
                                          "placeOfBirth"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "firstName",
                                      "email",
                                      "birthData"
                                    ]
                                  }
                                }
                              }
                            },
                            "responses": {
                              "200": {
                                "description": "Successful response with birth chart data.",
                                "content": {
                                  "application/json": {
                                    "schema": {
                                      "type": "object",
                                      "properties": {
                                        "firstName": {
                                          "type": "string"
                                        },
                                        "BirthData": {
                                          "type": "object",
                                          "properties": {
                                            "birthDataA": {
                                              "type": "object",
                                              "properties": {
                                                "birthDate": {
                                                  "type": "string",
                                                  "format": "date"
                                                },
                                                "birthTime": {
                                                  "type": "string",
                                                  "format": "time"
                                                },
                                                "birthLatitude": {
                                                  "type": "number",
                                                  "format": "float"
                                                },
                                                "birthLongitude": {
                                                  "type": "number",
                                                  "format": "float"
                                                },
                                                "placeOfBirth": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "Planets": {
                                          "type": "object"
                                        },
                                        "HouseSystem": {
                                          "type": "string"
                                        },
                                        "HouseCusps": {
                                          "type": "array",
                                          "items": {
                                            "type": "number"
                                          }
                                        },
                                        "Aspects": {
                                          "type": "array",
                                          "items": {
                                            "type": "object"
                                          }
                                        },
                                        "Patterns": {
                                          "type": "object"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "400": {
                                "description": "Invalid request."
                              },
                              "500": {
                                "description": "Internal server error."
                              }
                            }
                          }
                        }
                      }
                    },
                    "json_schema": null,
                    "auth": {
                      "type": "none"
                    },
                    "privacy_policy_url": "https://authorityastrology.com/privacy-policy"
                  }
                },
                {
                  "id": "gzm_cnf_0bw1ZXKg2FMk3EaGfLiKGWAy~gzm_tool_BNuNlvMjX8KcPuUX121M35fb",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_0bw1ZXKg2FMk3EaGfLiKGWAy~gzm_tool_SVAplkKOVPmGN2ptoWHsTXYZ",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-Gm9cCA5qg",
                "organization_id": "org-PvZudCqY7OUQRspPdn5AJ1LO",
                "short_url": "g-Gm9cCA5qg-what-should-i-watch",
                "author": {
                  "user_id": "user-0yGtioCdwkMr7HYgsDYHDSPt",
                  "display_name": "ammaar.me",
                  "link_to": "https://ammaar.me",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "What should I watch?",
                  "description": "Find movies and tv shows to watch based on your taste and preferences, goodbye decision paralysis!",
                  "welcome_message": "Ready to find your next favorite movie!",
                  "prompt_starters": [
                    "What genre are you in the mood for?",
                    "List your top 5 favorite movies.",
                    "Which actors do you love watching?",
                    "Look at my Letterboxd favorites and then learn about my preferences and find me something to watch!"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-dYV7TerOf1CRaKkQLonEiEXR?se=2123-10-16T05%3A29%3A54Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dbfb9053c-56a1-4c13-8f9c-fb9c66c5f087.png&sig=NIlFbA02Y/MT25byL%2BR53BTori7SAknUwSAdBlD2tnM%3D",
                  "categories": []
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T01:32:29.018281+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_pDfESrQm5JmJqulUDYf5VtwF~gzm_tool_1kEVma9w8J30ol895BF1uoCM",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_pDfESrQm5JmJqulUDYf5VtwF~gzm_tool_XYsz8owBJXN1d8JrXXbeILS3",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-TzI2BlJPT",
                "organization_id": "org-bEctjWfwMHz9kSLbFYOq78Ge",
                "short_url": "g-TzI2BlJPT-deepgame",
                "author": {
                  "user_id": "user-IJG8bYk4EPE7KAMOZT1HXzjn",
                  "display_name": "UtileLabs",
                  "link_to": null,
                  "selected_display": "name",
                  "is_verified": true,
                  "will_receive_support_emails": null
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "DeepGame",
                  "description": "Play any story as a character. You decide what to do next. AI generates a new image for each step to enhance immersion.",
                  "welcome_message": "What do you do next?",
                  "prompt_starters": [
                    "New Game",
                    "Custom Plot",
                    "Play a fantasy story",
                    "Play a detective story"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-RFkKDCjUOzZi8m7FDDEDUZyU?se=2123-10-18T08%3A48%3A37Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dvirtual%2520machine.png&sig=CE0AuyWZuFIpZ4w5wG8xarJGPTIpuqCbHOn2EBK3JHw%3D",
                  "categories": []
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-09T14:53:24.836551+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_NfJ3YSEJUb2HfYZG74eL4iQG~gzm_tool_6dZrb4KFPOYhGbDOWgohMGh1",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_N6HkGmHTBaJLkZHmJS2YGxKk~gzm_tool_Vbni7mlJ6H8fAvjIcazKlP3B",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_sebNWeX1IgUS1QxeIRF1hb8C~gzm_tool_Ss3bdzMnUDOCGRM960cbB9PM",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          },
          {
            "resource": {
              "gizmo": {
                "id": "g-22ZUhrOgu",
                "organization_id": "org-1gikMSRWhS0V4jJTAy90gWPI",
                "short_url": "g-22ZUhrOgu-gpt-shop-keeper",
                "author": {
                  "user_id": "user-xNvKxI7DzdHAjr6LBbhCDWKi",
                  "display_name": "gptavern.mindgoblinstudios.com",
                  "link_to": "https://gptavern.mindgoblinstudios.com",
                  "selected_display": "website",
                  "is_verified": true,
                  "will_receive_support_emails": true
                },
                "voice": {
                  "id": "ember"
                },
                "workspace_id": null,
                "model": null,
                "instructions": null,
                "settings": null,
                "display": {
                  "name": "GPT Shop Keeper",
                  "description": "Unofficial GPT App Store. Find custom GPTs for your work. Search or See TavernVisitors, a curated list of best GPTs curated by MindGoblinStudios. Shopkeeper is more than a mere merchant, a guide to townsfolk & travelers.   v1.6",
                  "welcome_message": "Welcome to the GPT tavern, what GPT do you seek?",
                  "prompt_starters": [
                    "Lets have a drink at the tavern, introduce GPTavern.md members",
                    "Featured: Who is visiting the tavern today?",
                    "Coding",
                    "Art & design",
                    "Research",
                    "Productivity",
                    "Build new habits",
                    "I need therapy bro",
                    "Journaling",
                    "Ai girlfriend ",
                    "Best ai prompt to media tools",
                    "Visit GPTavern.md"
                  ],
                  "profile_picture_url": "https://files.oaiusercontent.com/file-LXj0F6xD3axJwpOXRgUcMEPo?se=2123-10-18T23%3A05%3A01Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3DDALL%25C2%25B7E%2520Witch.png&sig=2lP8ICLrD5IUWJkhTJgx38Uly4QgRD3qmKj3uWWiq2c%3D",
                  "categories": [
                    "lifestyle"
                  ]
                },
                "share_recipient": "marketplace",
                "updated_at": "2024-01-12T23:10:06.762240+00:00",
                "last_interacted_at": null,
                "tags": [
                  "public",
                  "reportable"
                ],
                "version": null,
                "live_version": null,
                "training_disabled": null,
                "allowed_sharing_recipients": null,
                "review_info": null,
                "appeal_info": null,
                "vanity_metrics": {
                  "num_conversations_str": null,
                  "num_pins": 0,
                  "num_users_interacted_with": 0
                },
                "workspace_approved": null
              },
              "tools": [
                {
                  "id": "gzm_cnf_gFin5KmlcwaENWFZqW7xM43T~gzm_tool_pTDWmj8L8ryuz7iaoAvjPNea",
                  "type": "python",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_gFin5KmlcwaENWFZqW7xM43T~gzm_tool_edJUTu1bQKjDd27vkWb8wOUk",
                  "type": "dalle",
                  "settings": null,
                  "metadata": null
                },
                {
                  "id": "gzm_cnf_gFin5KmlcwaENWFZqW7xM43T~gzm_tool_AlRvb6QOOEiKof0ESUxDolVv",
                  "type": "browser",
                  "settings": null,
                  "metadata": null
                }
              ],
              "files": [
                {
                  "id": "gzm_cnf_Jyo9tLviI9gqNZwipYOxrb7T~gzm_file_fh5LtsYKu9GxQzPMe1Mvw0jP",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_41AISnqOgkvJpkhae2xHTOAM~gzm_file_HmMqkBnqNWK9PnTEpW2UP6NJ",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_qIuE4i4qjie9pWAcRlAJpADv~gzm_file_o5uyr2YNP393w1vJSuvIOYBB",
                  "type": "",
                  "file_id": "",
                  "location": ""
                },
                {
                  "id": "gzm_cnf_ON6gHAPERcW63ro2qazZoajA~gzm_file_XmDyY3iB8QqTxKiSO2TzsWlZ",
                  "type": "",
                  "file_id": "",
                  "location": ""
                }
              ],
              "product_features": {
                "attachments": {
                  "type": "retrieval",
                  "accepted_mime_types": [
                    "application/x-latext",
                    "text/x-sh",
                    "text/x-csharp",
                    "text/markdown",
                    "text/x-php",
                    "text/x-c",
                    "text/x-java",
                    "text/x-tex",
                    "text/plain",
                    "text/x-script.python",
                    "application/json",
                    "text/x-ruby",
                    "text/x-c++",
                    "application/msword",
                    "text/x-typescript",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                    "text/html",
                    "text/javascript",
                    "application/pdf"
                  ],
                  "image_mime_types": [
                    "image/jpeg",
                    "image/webp",
                    "image/png",
                    "image/gif"
                  ],
                  "can_accept_all_mime_types": true
                }
              }
            }
          }
        ],
        "cursor": "6"
      }
    }
  ],
  "workspace_filtered": false,
  "locale": "en"
}